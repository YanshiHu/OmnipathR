[{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"OmniPath Bioconductor workshop","text":"Database knowledge essential omics data analysis modeling. Despite important factor, contributing outcome studies, often subject little attention. OmniPath aim raise awarness diversity available resources facilitate access resources uniform transparent way. OmniPath developed close contact mechanistic modeling applications functional omics analysis, hence especially suitable fields. OmniPath used analysis various omics data. Saez-Rodriguez group often use pipeline footprint based methods DoRothEA PROGENy causal reasoning method CARNIVAL infer signaling mechanisms transcriptomics data. One recent novelty OmniPath collection intercellular communication interactions. Apart simply merging data existing resources, OmniPath defines number intercellular communication roles, ligand, receptor, adhesion, enzyme, matrix, etc, generalizes terms ligand receptor introducing terms transmitter, receiver mediator. unique knowledge base especially adequate emerging field cell-cell communication analysis, typically single cell transcriptomics, also kinds data.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"pre-requisites","dir":"Articles","previous_headings":"Overview","what":"Pre-requisites","title":"OmniPath Bioconductor workshop","text":"special pre-requisites apart basic knowledge R. OmniPath, database resource focus workshop published [1,2], however don’t need know anything OmniPath benefit workshop. workshop demonstrate R/Bioconductor package OmnipathR. like try examples recommend install latest version package workshop:","code":"library(devtools) install_github('saezlab/OmnipathR')"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"participation","dir":"Articles","previous_headings":"Overview","what":"Participation","title":"OmniPath Bioconductor workshop","text":"workshop present design important features OmniPath database, can confident get . demonstrate useful features OmnipathR package, accessing resources, building graphs. Participants encouraged experiment examples shape contents workshop asking questions. happy recieve questions topic suggestions email also workshop. help us adjust contents interests participants.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"r-bioconductor-packages-used","dir":"Articles","previous_headings":"Overview","what":"R / Bioconductor packages used","title":"OmniPath Bioconductor workshop","text":"OmnipathR igraph dplyr","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"time-outline","dir":"Articles","previous_headings":"Overview","what":"Time outline","title":"OmniPath Bioconductor workshop","text":"Total: 45 minutes","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"workshop-goals-and-objectives","dir":"Articles","previous_headings":"Overview","what":"Workshop goals and objectives","title":"OmniPath Bioconductor workshop","text":"workshop get familiar design features OmniPath databases. example, know important details datasets parameters help query database suitable way according purposes. also learn functionalities OmnipathR package might make work easier.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"learning-goals","dir":"Articles","previous_headings":"Overview","what":"Learning goals","title":"OmniPath Bioconductor workshop","text":"Learn OmniPath database, contents can useful Get picture OmnipathR package capabilities Learn datasets parameters various OmniPath query types","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"learning-objectives","dir":"Articles","previous_headings":"Overview","what":"Learning objectives","title":"OmniPath Bioconductor workshop","text":"Try examples OmniPath query type various parameters Build igraph networks, search paths Access interesting resources","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"workshop","dir":"Articles","previous_headings":"","what":"Workshop","title":"OmniPath Bioconductor workshop","text":"","code":"library(OmnipathR)"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"data-from-omnipath","dir":"Articles","previous_headings":"Workshop","what":"Data from OmniPath","title":"OmniPath Bioconductor workshop","text":"OmniPath consists five major databases, combining many original resources. five databases : Network (interactions) Enzyme-substrate relationships (enzsub) Protein complexes (complexes) Annotations (annotations) Intercellular communication roles (intercell) parameters database (query type) available web service, example: https://omnipathdb.org/queries/interactions. R package supports features web service parameter names values usually correspond web service parameters use HTTP query string.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"networks","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Networks","title":"OmniPath Bioconductor workshop","text":"network database contains protein-protein, gene regulatory miRNA-mRNA interactions. Soon interaction types added. categories can divided datasets defined type evidences. full list network datasets: omnipath: literature curated, directed interactions effect signs; corresponds first edition OmniPath, hence confusing name due historical reasons import_omnipath_interactions pathwayextra: directed signed interactions, without literature references (might literature curated, references available) import_pathwayextra_interactions kinaseextra: enzyme-PTM interactions without literature references import_kinaseextra_interactions ligrecextra: ligand-receptor interactions without literature references import_ligrecextra_interactions dorothea: comprehensive collection built 18 resources, contains literature curated, ChIP-Seq, gene expression derived TF binding site predicted data, 5 confidence levels (-E) import_dorothea_interactions tf_target: additional literature curated interactions import_tf_target_interactions mirnatarget: literature curated miRNA-mRNA interactions import_mirnatarget_interactions tf_mirna: literature curated TF-miRNA interactions (transcriptional regulations miRNA) import_tf_mirna_interactions lncrna_mrna: literature curated lncRNA-mRNA interactions import_lncrna_mrna_interactions small_molecule: metabolites, intrinsic ligands drug compounds targeting human proteins import_small_molecule_protein_interactions individual interactions resource classified datasets , can overlap. interaction type dataset dedicated function OmnipathR, provide links help pages. example, let’s see gene regulatory interactions: interaction data frame contains UniProt IDs Gene Symbols interacting partners, list resources references (PubMed IDs) interaction, whether interaction directed, stimulatory inhibitory.","code":"gri <- import_transcriptional_interactions() gri ## # A tibble: 74,513 × 16 ##    source target source_gene…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ sources refer…⁹ curat…˟ ##    <chr>  <chr>  <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl> ##  1 P35869 Q9ULH1 AHR           ASAP1         1       0       0       0       0       0 ARACNe… NA            0 ##  2 P35869 P04798 AHR           CYP1A1        1       1       0       1       1       0 DoRoth… HTRIdb…       6 ##  3 P35869 P05177 AHR           CYP1A2        1       0       0       0       0       0 DoRoth… HTRIdb…       1 ##  4 P35869 Q16678 AHR           CYP1B1        1       1       0       1       1       0 DoRoth… HTRIdb…       3 ##  5 P35869 P11308 AHR           ERG           1       0       0       0       0       0 ARACNe… NA            0 ##  6 P35869 P01100 AHR           FOS           1       0       0       0       0       0 DoRoth… DoRoth…       2 ##  7 P35869 P01106 AHR           MYC           1       0       0       0       0       0 FANTOM… NA            0 ##  8 P35869 Q07889 AHR           SOS1          1       0       0       0       0       0 DoRoth… DoRoth…       2 ##  9 P35869 P19224 AHR           UGT1A6        1       0       0       0       0       0 DoRoth… DoRoth…       2 ## 10 P35869 Q14135 AHR           VGLL4         1       0       0       0       0       0 ARACNe… NA            0 ## # … with 74,503 more rows, 3 more variables: dorothea_level <chr>, n_references <dbl>, n_resources <int>, and ## #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, ³​is_directed, ⁴​is_stimulation, ## #   ⁵​is_inhibition, ⁶​consensus_direction, ⁷​consensus_stimulation, ⁸​consensus_inhibition, ⁹​references, ## #   ˟​curation_effort"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"igraph-integration","dir":"Articles","previous_headings":"Workshop > Data from OmniPath > Networks","what":"Igraph integration","title":"OmniPath Bioconductor workshop","text":"network data frames can converted igraph graph objects, can make use graph visualization methods igraph: network can use OmnipathR’s find_all_paths function, able look paths certain length two set nodes: gene regulatory network, paths TFs regulating transcription TFs.","code":"gr_graph <- interaction_graph(gri) gr_graph ## IGRAPH 70d8258 DN-- 15084 74513 --  ## + attr: name (v/c), up_ids (v/c), is_directed (e/n), is_stimulation (e/n), is_inhibition (e/n), ## | consensus_direction (e/n), consensus_stimulation (e/n), consensus_inhibition (e/n), sources ## | (e/x), references (e/x), curation_effort (e/n), dorothea_level (e/c), n_references (e/n), ## | n_resources (e/n) ## + edges from 70d8258 (vertex names): ##  [1] AHR->ASAP1    AHR->CYP1A1   AHR->CYP1A2   AHR->CYP1B1   AHR->ERG      AHR->FOS      AHR->MYC      ##  [8] AHR->SOS1     AHR->UGT1A6   AHR->VGLL4    AR ->ABCC4    AR ->ABCE1    AR ->ABHD2    AR ->ABLIM1   ## [15] AR ->ACAD10   AR ->ACOXL    AR ->ACP3     AR ->ACSL1    AR ->ACTA1    AR ->ADAMTS4  AR ->ADAMTSL1 ## [22] AR ->ADGRG6   AR ->ADGRV1   AR ->ADIPOR1  AR ->AFDN     AR ->AFF1     AR ->AFF3     AR ->AGAP1    ## [29] AR ->AHSG     AR ->AKAP13   AR ->AKAP6    AR ->AKAP7    AR ->AKAP7    AR ->AKR1B1   AR ->AKR1C3   ## + ... omitted several edges paths <- find_all_paths(     graph = gr_graph,     start = c('EGFR', 'STAT3'),     end = c('AKT1', 'ULK1'),     attr = 'name' )"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"enzyme-substrate-relationships","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Enzyme-substrate relationships","title":"OmniPath Bioconductor workshop","text":"Enzyme-substrate interactions also available also interactions query, enzyme-substrate query type provides additional information PTM types residues. data frame also can converted igraph object: also possible add effect signs (stimulatory inhibitory) enzyme-PTM relationships:","code":"enz_sub <- import_omnipath_enzsub() enz_sub ## # A tibble: 42,248 × 12 ##    enzyme substrate enzyme_genesymbol substr…¹ resid…² resid…³ modif…⁴ sources refer…⁵ curat…⁶ n_ref…⁷ n_res…⁸ ##    <chr>  <chr>     <chr>             <chr>    <chr>     <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl>   <int> ##  1 P06239 O14543    LCK               SOCS3    Y           204 phosph… KEA;MI… KEA:12…       2       1       6 ##  2 P06239 O14543    LCK               SOCS3    Y           221 phosph… KEA;MI… KEA:12…       3       2       6 ##  3 P12931 O14746    SRC               TERT     Y           707 phosph… BEL-La… HPRD:1…       8       3       8 ##  4 P06241 O15117    FYN               FYB1     Y           651 phosph… HPRD;K… HPRD:1…       7       2       6 ##  5 P06241 O15117    FYN               FYB1     Y           595 phosph… HPRD;K… HPRD:1…       7       2       7 ##  6 P06241 O15117    FYN               FYB1     Y           697 phosph… HPRD;K… HPRD:1…       3       2       3 ##  7 P06241 O15117    FYN               FYB1     Y           625 phosph… Phosph… NA            0       0       2 ##  8 P06241 O15117    FYN               FYB1     Y           571 phosph… Phosph… NA            0       0       2 ##  9 P06241 O15117    FYN               FYB1     Y           771 phosph… Phosph… NA            0       0       2 ## 10 P06241 O15117    FYN               FYB1     Y           559 phosph… Phosph… NA            0       0       2 ## # … with 42,238 more rows, and abbreviated variable names ¹​substrate_genesymbol, ²​residue_type, ## #   ³​residue_offset, ⁴​modification, ⁵​references, ⁶​curation_effort, ⁷​n_references, ⁸​n_resources es_graph <- enzsub_graph(enz_sub) es_graph ## IGRAPH 36326ae DN-- 4700 42248 --  ## + attr: name (v/c), up_ids (v/c), residue_type (e/c), residue_offset (e/n), modification (e/c), ## | sources (e/x), references (e/x), curation_effort (e/n), n_references (e/n), n_resources (e/n) ## + edges from 36326ae (vertex names): ##  [1] LCK  ->SOCS3  LCK  ->SOCS3  SRC  ->TERT   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   ##  [8] FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   ## [15] FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   FYN  ->FYB1   ## [22] ABL1 ->PLSCR1 ABL1 ->PLSCR1 SRC  ->PLSCR1 SRC  ->PLSCR1 ABL1 ->TP73   CDK2 ->TP73   CHEK1->TP73   ## [29] AURKB->BIRC5  AURKB->BIRC5  AURKB->BIRC5  CDK1 ->BIRC5  PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  ## [36] PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  PDPK1->PDPK1  ## [43] PDPK1->PDPK1  PDPK1->PDPK1  SRC  ->PDPK1  SRC  ->PDPK1  SRC  ->PDPK1  SRC  ->PDPK1  SRC  ->PDPK1  ## + ... omitted several edges es_signed <- get_signed_ptms(enz_sub)"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"protein-complexes","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Protein complexes","title":"OmniPath Bioconductor workshop","text":"resulted data frame provides constitution stoichiometry protein complexes, references.","code":"cplx <- import_omnipath_complexes() cplx ## # A tibble: 32,761 × 7 ##    name         components                                components_genesym…¹ stoic…² sources refer…³ ident…⁴ ##    <chr>        <chr>                                     <chr>                <chr>   <chr>   <chr>   <chr>   ##  1 NFY          P23511_P25208_Q13952                      NFYA_NFYB_NFYC       1:1:1   CORUM;… 147552… CORUM:… ##  2 mTORC2       P42345_P68104_P85299_Q6R327_Q8TB45_Q9BVC4 DEPTOR_EEF1A1_MLST8… 0:0:0:… SIGNOR  NA      SIGNOR… ##  3 mTORC1       P42345_Q8N122_Q8TB45_Q96B36_Q9BVC4        AKT1S1_DEPTOR_MLST8… 0:0:0:… SIGNOR  NA      SIGNOR… ##  4 SCF-betaTRCP P63208_Q13616_Q9Y297                      BTRC_CUL1_SKP1       1:1:1   CORUM;… 9990852 CORUM:… ##  5 CBP/p300     Q09472_Q92793                             CREBBP_EP300         0:0     SIGNOR  NA      SIGNOR… ##  6 P300/PCAF    Q09472_Q92793_Q92831                      CREBBP_EP300_KAT2B   0:0:0   SIGNOR  NA      SIGNOR… ##  7 SMAD2/SMAD4  Q13485_Q15796                             SMAD2_SMAD4          1:2     Comple… 406541… PDB:1u… ##  8 SMAD3/SMAD4  P84022_Q13485                             SMAD3_SMAD4          2:1     Comple… 406541… PDB:1U… ##  9 SMAD4/JUN    P05412_Q13485                             JUN_SMAD4            0:0     SIGNOR  NA      SIGNOR… ## 10 SMAD2/SMURF2 Q15796_Q9HAU4                             SMAD2_SMURF2         1:1     Comple… 113894… Comple… ## # … with 32,751 more rows, and abbreviated variable names ¹​components_genesymbols, ²​stoichiometry, ## #   ³​references, ⁴​identifiers"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"annotations","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Annotations","title":"OmniPath Bioconductor workshop","text":"annotations query type includes diverse set resources (60 ), protein function, localization, structure expression. use cases better convert data wide data frames, correspond original format resources. load one resources wide data frames, result list data frames, otherwise one data frame. See examples localization data UniProt, tissue expression Human Protein Atlas pathway information SignaLink: entity_type field can protein, mirna complex. Protein complexes mostly annotated based consensus members, aware silico inference. case spelling mistake either parameter names values OmnipathR either corrects mistake gives warning error: name resource wrong. parameter name wrong, throws error: Singular vs. plural forms synonyms automatically corrected: Another example tissue expression Human Protein Atlas: pathway annotations SignaLink:","code":"uniprot_loc <- import_omnipath_annotations(     resources = 'UniProt_location',     wide = TRUE ) uniprot_loc ## # A tibble: 65,264 × 5 ##    uniprot genesymbol entity_type location                          features                            ##    <chr>   <chr>      <chr>       <chr>                             <chr>                               ##  1 P51451  BLK        protein     Cell membrane                     Lipid-anchor                        ##  2 A6H8Y1  BDP1       protein     Nucleus                           NA                                  ##  3 O60885  BRD4       protein     Chromosome                        NA                                  ##  4 O60885  BRD4       protein     Nucleus                           NA                                  ##  5 P22223  CDH3       protein     Cell membrane                     Single-pass type I membrane protein ##  6 Q9BXJ4  C1QTNF3    protein     Secreted                          NA                                  ##  7 Q9ULX7  CA14       protein     Membrane                          Single-pass type I membrane protein ##  8 Q01518  CAP1       protein     Cell membrane                     Peripheral membrane protein         ##  9 Q9BUK0  CHCHD7     protein     Mitochondrion intermembrane space NA                                  ## 10 Q9P2X3  IMPACT     protein     Cytoplasm                         NA                                  ## # … with 65,254 more rows uniprot_loc <- import_omnipath_annotations(     resources = 'Uniprot_location',     wide = TRUE ) ## Warning in omnipath_check_param(param): The following resources are not available: Uniprot_location. Check the ## resource names for spelling mistakes. uniprot_loc <- import_omnipath_annotations(     resuorces = 'UniProt_location',     wide = TRUE ) ## Error in import_omnipath_annotations(resuorces = \"UniProt_location\", wide = TRUE): Downloading the entire annotations database is not allowed by default because of its huge size (>1GB). If you really want to do that, you find static files at https://archive.omnipathdb.org/. However we recommend to query a set of proteins or a few resources, depending on your interest. uniprot_loc <- import_omnipath_annotations(     resource = 'UniProt_location',     wide = TRUE ) hpa_tissue <- import_omnipath_annotations(     resources = 'HPA_tissue',     wide = TRUE,     # Limiting to a handful of proteins for a faster vignette build:     proteins = c('DLL1', 'MEIS2', 'PHOX2A', 'BACH1', 'KLF11', 'FOXO3', 'MEFV') ) hpa_tissue ## # A tibble: 529 × 15 ##    uniprot genesymbol entity…¹ organ tissue level n_not…² n_low n_med…³ n_high progn…⁴ favou…⁵   score patho…⁶ ##    <chr>   <chr>      <chr>    <chr> <chr>  <chr>   <dbl> <dbl>   <dbl>  <dbl> <lgl>   <lgl>     <dbl> <lgl>   ##  1 O43524  FOXO3      protein  colo… color… Medi…       0     2       9      0 FALSE   TRUE     0.0428 TRUE    ##  2 O43524  FOXO3      protein  skin… skin … Medi…       0     2       9      1 NA      NA      NA      TRUE    ##  3 O43524  FOXO3      protein  cere… glial… Not …      NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  4 O43524  FOXO3      protein  endo… cells… Medi…      NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  5 O43524  FOXO3      protein  fall… gland… High       NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  6 O43524  FOXO3      protein  skin… hair … Medi…      NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  7 O43524  FOXO3      protein  skin… cells… Not …      NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  8 O43524  FOXO3      protein  bone… hemat… Low        NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ##  9 O43524  FOXO3      protein  carc… carci… Medi…       0     2       2      0 NA      NA      NA      TRUE    ## 10 O43524  FOXO3      protein  skin… cells… Not …      NA    NA      NA     NA FALSE   FALSE   NA      FALSE   ## # … with 519 more rows, 1 more variable: status <chr>, and abbreviated variable names ¹​entity_type, ## #   ²​n_not_detected, ³​n_medium, ⁴​prognostic, ⁵​favourable, ⁶​pathology slk_pathw <- import_omnipath_annotations(     resources = 'SignaLink_pathway',     wide = TRUE ) slk_pathw ## # A tibble: 2,451 × 4 ##    uniprot genesymbol entity_type pathway                  ##    <chr>   <chr>      <chr>       <chr>                    ##  1 P20963  CD247      protein     T-cell receptor          ##  2 P43403  ZAP70      protein     Receptor tyrosine kinase ##  3 P43403  ZAP70      protein     T-cell receptor          ##  4 Q9NYJ8  TAB2       protein     JAK/STAT                 ##  5 Q9NYJ8  TAB2       protein     Receptor tyrosine kinase ##  6 Q9NYJ8  TAB2       protein     Toll-like receptor       ##  7 Q9NYJ8  TAB2       protein     Innate immune pathways   ##  8 O43318  MAP3K7     protein     Toll-like receptor       ##  9 O43318  MAP3K7     protein     TGF                      ## 10 O43318  MAP3K7     protein     JAK/STAT                 ## # … with 2,441 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"combining-networks-with-annotations","dir":"Articles","previous_headings":"Workshop > Data from OmniPath > Annotations","what":"Combining networks with annotations","title":"OmniPath Bioconductor workshop","text":"Annotations can easily added network data frames, case source target nodes annotation data. function accepts either name annotation resource annotation data frame:","code":"network <- import_omnipath_interactions()  network_slk_pw <- annotated_network(network, 'SignaLink_pathway') network_slk_pw ## # A tibble: 82,713 × 17 ##    source target source_gene…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ sources refer…⁹ curat…˟ ##    <chr>  <chr>  <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl> ##  1 P0DP25 P48995 CALM3         TRPC1         1       0       1       1       0       1 TRIP    TRIP:1…       3 ##  2 P0DP23 P48995 CALM1         TRPC1         1       0       1       1       0       1 TRIP    TRIP:1…       3 ##  3 P0DP24 P48995 CALM2         TRPC1         1       0       1       1       0       1 TRIP    TRIP:1…       3 ##  4 Q03135 P48995 CAV1          TRPC1         1       1       0       1       1       0 DIP;HP… DIP:19…      13 ##  5 P14416 P48995 DRD2          TRPC1         1       1       0       1       1       0 TRIP    TRIP:1…       1 ##  6 Q99750 P48995 MDFI          TRPC1         1       0       1       1       0       1 HPRD;T… HPRD:1…       3 ##  7 Q14571 P48995 ITPR2         TRPC1         1       1       0       1       1       0 HPRD;T… HPRD:1…      13 ##  8 P29966 P48995 MARCKS        TRPC1         1       0       1       1       0       1 TRIP    TRIP:2…       1 ##  9 Q13255 P48995 GRM1          TRPC1         1       1       0       1       1       0 TRIP    TRIP:1…       1 ## 10 Q13586 P48995 STIM1         TRPC1         1       1       0       1       1       0 IntAct… IntAct…      22 ## # … with 82,703 more rows, 4 more variables: n_references <dbl>, n_resources <int>, pathway_source <chr>, ## #   pathway_target <chr>, and abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, ## #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, ⁷​consensus_stimulation, ## #   ⁸​consensus_inhibition, ⁹​references, ˟​curation_effort"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"intercellular-communication-roles","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Intercellular communication roles","title":"OmniPath Bioconductor workshop","text":"intercell database assigns roles proteins ligand, receptor, adhesion, transporter, ECM, etc. design database far simple, best check description recent OmniPath paper [1]. data frame individual proteins. create network intercellular communication, provide import_intercell_network function: result similar annotated_network, interacting partner intercell annotations. intercell database, OmniPath aims ship available information, means might contain quite false positives. high_confidence option shortcut stringent filter settings based number consensus provenances. Using instead filter_intercell_network function, can fine control quality filters. many options described manual. filter_intecell function similar procedure intercell annotation data frame.","code":"ic <- import_omnipath_intercell() ic ## # A tibble: 323,572 × 15 ##    category parent datab…¹ scope aspect source uniprot genes…² entit…³ conse…⁴ trans…⁵ recei…⁶ secre…⁷ plasm…⁸ ##    <chr>    <chr>  <chr>   <chr> <chr>  <chr>  <chr>   <chr>   <chr>     <dbl> <lgl>   <lgl>   <lgl>   <lgl>   ##  1 transme… trans… UniPro… gene… locat… resou… Q9P0S3  ORMDL1  protein       5 FALSE   FALSE   FALSE   FALSE   ##  2 transme… trans… UniPro… gene… locat… resou… P26951  IL3RA   protein       7 FALSE   FALSE   FALSE   TRUE    ##  3 transme… trans… UniPro… gene… locat… resou… Q96CH1  GPR146  protein       6 FALSE   FALSE   FALSE   TRUE    ##  4 transme… trans… UniPro… gene… locat… resou… Q7Z442  PKD1L2  protein       6 FALSE   FALSE   FALSE   FALSE   ##  5 transme… trans… UniPro… gene… locat… resou… Q6UXU6  TMEM92  protein       6 FALSE   FALSE   FALSE   TRUE    ##  6 transme… trans… UniPro… gene… locat… resou… Q8IV01  SYT12   protein       5 FALSE   FALSE   FALSE   FALSE   ##  7 transme… trans… UniPro… gene… locat… resou… Q12913  PTPRJ   protein       7 FALSE   FALSE   FALSE   TRUE    ##  8 transme… trans… UniPro… gene… locat… resou… Q6UW88  EPGN    protein       7 FALSE   FALSE   TRUE    TRUE    ##  9 transme… trans… UniPro… gene… locat… resou… Q8TDU5  VN1R17P protein       4 FALSE   FALSE   FALSE   FALSE   ## 10 transme… trans… UniPro… gene… locat… resou… Q9P2W7  B3GAT1  protein       7 FALSE   FALSE   TRUE    FALSE   ## # … with 323,562 more rows, 1 more variable: plasma_membrane_peripheral <lgl>, and abbreviated variable names ## #   ¹​database, ²​genesymbol, ³​entity_type, ⁴​consensus_score, ⁵​transmitter, ⁶​receiver, ⁷​secreted, ## #   ⁸​plasma_membrane_transmembrane icn <- import_intercell_network(high_confidence = TRUE) icn ## # A tibble: 17,964 × 45 ##    category_in…¹ paren…² source target categ…³ paren…⁴ targe…⁵ sourc…⁶ is_di…⁷ is_st…⁸ is_in…⁹ conse…˟ conse…˟ ##    <chr>         <chr>   <chr>  <chr>  <chr>   <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl> ##  1 activating_c… recept… O14786 P35968 adhesi… adhesi… KDR     NRP1          1       1       0       1       1 ##  2 activating_c… recept… O14786 P35968 cell_a… cell_a… KDR     NRP1          1       1       0       1       1 ##  3 activating_c… recept… O14786 P35968 matrix… matrix… KDR     NRP1          1       1       0       1       1 ##  4 activating_c… recept… O14786 P35968 recept… recept… KDR     NRP1          1       1       0       1       1 ##  5 activating_c… recept… P08138 P04629 adhesi… adhesi… NTRK1   NGFR          1       1       1       1       1 ##  6 activating_c… recept… P08138 P04629 cell_a… cell_a… NTRK1   NGFR          1       1       1       1       1 ##  7 activating_c… recept… P08138 P04629 recept… recept… NTRK1   NGFR          1       1       1       1       1 ##  8 activating_c… recept… P08138 P05067 adhesi… adhesi… APP     NGFR          1       0       0       0       0 ##  9 activating_c… recept… P08138 P05067 cell_a… cell_a… APP     NGFR          1       0       0       0       0 ## 10 activating_c… recept… P08138 P05067 recept… recept… APP     NGFR          1       0       0       0       0 ## # … with 17,954 more rows, 32 more variables: consensus_inhibition <dbl>, omnipath <lgl>, ligrecextra <lgl>, ## #   sources <chr>, references <chr>, curation_effort <dbl>, n_references <dbl>, n_resources <int>, ## #   database_intercell_source <chr>, scope_intercell_source <chr>, aspect_intercell_source <chr>, ## #   category_source_intercell_source <chr>, genesymbol_intercell_source <chr>, ## #   entity_type_intercell_source <chr>, consensus_score_intercell_source <dbl>, ## #   transmitter_intercell_source <lgl>, receiver_intercell_source <lgl>, secreted_intercell_source <lgl>, ## #   plasma_membrane_transmembrane_intercell_source <lgl>, … icn <- import_intercell_network() icn_hc <- filter_intercell_network(     icn,     ligand_receptor = TRUE,     consensus_percentile = 30,     loc_consensus_percentile = 50,     simplify = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"metadata","dir":"Articles","previous_headings":"Workshop > Data from OmniPath","what":"Metadata","title":"OmniPath Bioconductor workshop","text":"list available resources query type can retrieved get_..._resources function. example, annotation resources : Categories intercell query also can listed:","code":"get_annotation_resources() ##  [1] \"Adhesome\"             \"Almen2009\"            \"Baccin2019\"           \"CancerDrugsDB\"        ##  [5] \"CancerGeneCensus\"     \"CancerSEA\"            \"CellCall\"             \"CellCellInteractions\" ##  [9] \"CellChatDB\"           \"CellChatDB_complex\"   \"Cellinker\"            \"Cellinker_complex\"    ## [13] \"CellPhoneDB\"          \"CellPhoneDB_complex\"  \"CellTalkDB\"           \"CellTypist\"           ## [17] \"ComPPI\"               \"connectomeDB2020\"     \"CORUM_Funcat\"         \"CORUM_GO\"             ## [21] \"CSPA\"                 \"CSPA_celltype\"        \"CytoSig\"              \"DGIdb\"                ## [25] \"DisGeNet\"             \"EMBRACE\"              \"Exocarta\"             \"GO_Intercell\"         ## [29] \"GPCRdb\"               \"Guide2Pharma\"         \"HGNC\"                 \"HPA_secretome\"        ## [33] \"HPA_subcellular\"      \"HPA_tissue\"           \"HPMR\"                 \"HumanCellMap\"         ## [37] \"ICELLNET\"             \"ICELLNET_complex\"     \"Integrins\"            \"IntOGen\"              ## [41] \"iTALK\"                \"KEGG-PC\"              \"kinase.com\"           \"Kirouac2010\"          ## [45] \"LOCATE\"               \"LRdb\"                 \"Matrisome\"            \"MatrixDB\"             ## [49] \"MCAM\"                 \"Membranome\"           \"MSigDB\"               \"NetPath\"              ## [53] \"OPM\"                  \"PanglaoDB\"            \"Phobius\"              \"Phosphatome\"          ## [57] \"PROGENy\"              \"Ramilowski_location\"  \"Ramilowski2015\"       \"scConnect\"            ## [61] \"scConnect_complex\"    \"SignaLink_function\"   \"SignaLink_pathway\"    \"SIGNOR\"               ## [65] \"Surfaceome\"           \"talklr\"               \"TCDB\"                 \"TFcensus\"             ## [69] \"TopDB\"                \"UniProt_family\"       \"UniProt_keyword\"      \"UniProt_location\"     ## [73] \"UniProt_tissue\"       \"UniProt_topology\"     \"Vesiclepedia\"         \"Zhong2015\" get_intercell_generic_categories() ##  [1] \"transmembrane\"                       \"transmembrane_predicted\"             ##  [3] \"peripheral\"                          \"plasma_membrane\"                     ##  [5] \"plasma_membrane_transmembrane\"       \"plasma_membrane_regulator\"           ##  [7] \"plasma_membrane_peripheral\"          \"secreted\"                            ##  [9] \"cell_surface\"                        \"ecm\"                                 ## [11] \"ligand\"                              \"receptor\"                            ## [13] \"secreted_enzyme\"                     \"secreted_peptidase\"                  ## [15] \"extracellular\"                       \"intracellular\"                       ## [17] \"receptor_regulator\"                  \"secreted_receptor\"                   ## [19] \"sparc_ecm_regulator\"                 \"ecm_regulator\"                       ## [21] \"ligand_regulator\"                    \"cell_surface_ligand\"                 ## [23] \"cell_adhesion\"                       \"matrix_adhesion\"                     ## [25] \"adhesion\"                            \"matrix_adhesion_regulator\"           ## [27] \"cell_surface_enzyme\"                 \"cell_surface_peptidase\"              ## [29] \"secreted_enyzme\"                     \"extracellular_peptidase\"             ## [31] \"secreted_peptidase_inhibitor\"        \"transporter\"                         ## [33] \"ion_channel\"                         \"ion_channel_regulator\"               ## [35] \"gap_junction\"                        \"tight_junction\"                      ## [37] \"adherens_junction\"                   \"desmosome\"                           ## [39] \"intracellular_intercellular_related\" # get_intercell_categories() # this would show also the specific categories"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"data-from-other-resources","dir":"Articles","previous_headings":"Workshop","what":"Data from other resources","title":"OmniPath Bioconductor workshop","text":"increasing number resources (currently around 20) can directly accessed OmnipathR (omnipathdb.org domain, original providers). example,","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"identifier-translation","dir":"Articles","previous_headings":"Workshop > General purpose functionalities","what":"Identifier translation","title":"OmniPath Bioconductor workshop","text":"OmnipathR uses UniProt data translate identifiers. may find list available identifiers manual page translate_ids function. evaluation parameters tidyverse style, UniProt’s notation simple internal notation can used. Furthermore, can handle vectors, data frames list vectors. possible one source ID type column one call, multiple target ID types columns: translate network, two calls necessary. Note: certain functionality fails recently due changes packages, fixed days.","code":"d <- data.frame(uniprot_id = c('P00533', 'Q9ULV1', 'P43897', 'Q9Y2P5')) d <- translate_ids(     d,     uniprot_id = uniprot, # the source ID type and column name     genesymbol # the target ID type using OmniPath's notation ) d ##   uniprot_id genesymbol ## 1     P00533       EGFR ## 2     Q9ULV1       FZD4 ## 3     P43897       TSFM ## 4     Q9Y2P5    SLC27A5 network <- import_omnipath_interactions() network <- translate_ids(     network,     source = uniprot_id,     source_entrez = entrez ) network <- translate_ids(     network,     target = uniprot_id,     target_entrez = entrez )"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"gene-ontology","dir":"Articles","previous_headings":"Workshop > General purpose functionalities","what":"Gene Ontology","title":"OmniPath Bioconductor workshop","text":"OmnipathR able look ancestors descendants ontology trees, also exposes ontology tree three different formats: data frame, list lists igraph graph object. can two directions: child--parent (c2p) parent--child (p2c). convert relations list graph format, use relations_table_to_list relations_table_to_graph functions. swap c2p p2c use swap_relations function. can also translate term IDs term names: first call takes seconds loads database, subsequent calls faster.","code":"go <- go_ontology_download() go$rel_tbl_c2p ## # A tibble: 58,379 × 3 ##    term       relation parents   ##    <fct>      <chr>    <list>    ##  1 GO:0000001 is_a     <chr [2]> ##  2 GO:0000002 is_a     <chr [1]> ##  3 GO:0000003 is_a     <chr [1]> ##  4 GO:0000006 is_a     <chr [1]> ##  5 GO:0000007 is_a     <chr [1]> ##  6 GO:0000009 is_a     <chr [1]> ##  7 GO:0000010 is_a     <chr [1]> ##  8 GO:0000011 is_a     <chr [2]> ##  9 GO:0000012 is_a     <chr [1]> ## 10 GO:0000014 is_a     <chr [1]> ## # … with 58,369 more rows go_graph <- relations_table_to_graph(go$rel_tbl_c2p) go_graph ## IGRAPH 06c5a40 DN-- 43328 85221 --  ## + attr: name (v/c), relation (e/c) ## + edges from 06c5a40 (vertex names): ##  [1] GO:0000001->GO:0048308 GO:0000001->GO:0048311 GO:0000002->GO:0007005 GO:0000003->GO:0008150 ##  [5] GO:0000006->GO:0005385 GO:0000007->GO:0005385 GO:0000009->GO:0000030 GO:0000010->GO:0004659 ##  [9] GO:0000011->GO:0007033 GO:0000011->GO:0048308 GO:0000012->GO:0006281 GO:0000014->GO:0004520 ## [13] GO:0000015->GO:1902494 GO:0000015->GO:0005829 GO:0000016->GO:0004553 GO:0000017->GO:0042946 ## [17] GO:0000018->GO:0051052 GO:0000018->GO:0006310 GO:0000019->GO:0000018 GO:0000019->GO:0006312 ## [21] GO:0000022->GO:0051231 GO:0000022->GO:1903047 GO:0000022->GO:0000070 GO:0000022->GO:0007052 ## [25] GO:0000023->GO:0005984 GO:0000024->GO:0000023 GO:0000024->GO:0046351 GO:0000025->GO:0000023 ## [29] GO:0000025->GO:0046352 GO:0000026->GO:0000030 GO:0000027->GO:0022618 GO:0000027->GO:0042255 ## + ... omitted several edges ontology_ensure_name('GO:0000022') ## [1] \"mitotic spindle elongation\""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"useful-tips","dir":"Articles","previous_headings":"Workshop","what":"Useful tips","title":"OmniPath Bioconductor workshop","text":"OmnipathR features logging facility, YML configuration file cache directory. default highest level messages printed console, can browse full log R calling omnipath_log(). cache can controlled number functions, example can search cache files omnipath_cache_search(), delete omnipath_cache_remove: configuration can set options, options prefixed omnipath., can saved omnipath_save_config. example, exclude OmniPath resources don’t allow -profit use: internal state contained omnipath.env environment.","code":"omnipath_cache_search('dorothea') ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458 ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$key ## [1] \"c80a1943db40b7d3e23dcaa2afb68d3c37342458\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$url ## [1] \"https://github.com/saezlab/dorothea/raw/master/inst/extdata/networks/chip_seq/remap/network.rds\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$post ## list() ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$payload ## list() ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$ext ## [1] \"\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions$`1` ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions$`1`$number ## [1] \"1\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions$`1`$path ## [1] \"/home/denes/.cache/OmnipathR/c80a1943db40b7d3e23dcaa2afb68d3c37342458-1\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions$`1`$status ## [1] \"ready\" ##  ## $c80a1943db40b7d3e23dcaa2afb68d3c37342458$versions$`1`$dl_finished ## [1] \"2022-10-16 16:19:54 CEST\" ##  ##  ##  ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97 ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$key ## [1] \"f4de1f63d60f35d18bb262dd6de84d1cccd9cc97\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$url ## [1] \"https://omnipathdb.org/interactions?genesymbols=yes&datasets=dorothea,tf_target&organisms=9606&dorothea_levels=A,B&fields=sources,references,curation_effort,dorothea_level&license=academic\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$post ## list() ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$payload ## list() ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$ext ## [1] \"rds\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1` ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1`$number ## [1] \"1\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1`$path ## [1] \"/home/denes/.cache/OmnipathR/f4de1f63d60f35d18bb262dd6de84d1cccd9cc97-1.rds\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1`$dl_started ## [1] \"2022-10-16 16:22:10 CEST\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1`$status ## [1] \"ready\" ##  ## $f4de1f63d60f35d18bb262dd6de84d1cccd9cc97$versions$`1`$dl_finished ## [1] \"2022-10-16 16:22:11 CEST\" options(omnipath.license = 'commercial')"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"further-information","dir":"Articles","previous_headings":"Workshop","what":"Further information","title":"OmniPath Bioconductor workshop","text":"Find examples vignettes manual. example, NicheNet vignette presents integratation OmnipathR nichenetr, method prediction ligand-target gene connections. Another Bioconductor package wppi able add context specific scores networks, based genes interest, functional annotations network proximity (random walks restart). new paths vignette presents approaches construct pathways networks. design OmniPath database described recent paper [1], depth analysis pathway resources available first OmniPath paper [2].","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"OmniPath Bioconductor workshop","text":"","code":"## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               LC_TIME=en_GB.UTF-8        ##  [4] LC_COLLATE=en_GB.UTF-8     LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  LC_ADDRESS=C               ## [10] LC_TELEPHONE=C             LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] OmnipathR_3.5.22 BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] Rcpp_1.0.9          tidyr_1.2.1         prettyunits_1.1.1   assertthat_0.2.1    rprojroot_2.0.3     ##  [6] digest_0.6.29       utf8_1.2.2          R6_2.5.1            cellranger_1.1.0    backports_1.4.1     ## [11] evaluate_0.17       httr_1.4.4          pillar_1.8.1        rlang_1.0.6         progress_1.2.2      ## [16] curl_4.3.3          readxl_1.4.1        jquerylib_0.1.4     checkmate_2.1.0     rmarkdown_2.17      ## [21] pkgdown_2.0.6       textshaping_0.3.6   desc_1.4.2          selectr_0.4-2       readr_2.1.3         ## [26] stringr_1.4.1       igraph_1.3.5        bit_4.0.4           compiler_4.2.1      xfun_0.33           ## [31] pkgconfig_2.0.3     systemfonts_1.0.4   htmltools_0.5.3     tidyselect_1.2.0    tibble_3.1.8        ## [36] bookdown_0.29       fansi_1.0.3         crayon_1.5.2        dplyr_1.0.10        tzdb_0.3.0          ## [41] withr_2.5.0         later_1.3.0         rappdirs_0.3.3      jsonlite_1.8.2      lifecycle_1.0.3     ## [46] DBI_1.1.3           magrittr_2.0.3      cli_3.4.1           stringi_1.7.8       vroom_1.6.0         ## [51] cachem_1.0.6        fs_1.5.2            xml2_1.3.3          logger_0.2.2        bslib_0.4.0         ## [56] ellipsis_0.3.2      ragg_1.2.3          generics_0.1.3      vctrs_0.4.2         tools_4.2.1         ## [61] bit64_4.0.5         glue_1.6.2          purrr_0.3.5         hms_1.1.2           parallel_4.2.1      ## [66] fastmap_1.1.0       yaml_2.3.5          BiocManager_1.30.18 rvest_1.0.3         memoise_2.0.1       ## [71] knitr_1.40          sass_0.4.2"},{"path":"https://saezlab.github.io/OmnipathR/articles/bioc_workshop.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"OmniPath Bioconductor workshop","text":"[1] D Turei, Valdeolivas, L Gul, N Palacio-Escat, M Klein, O Ivanova, M Olbei, Gabor, F Theis, D Modos, T Korcsmaros J Saez-Rodriguez (2021) Integrated intra- intercellular signaling knowledge multicellular omics analysis. Molecular Systems Biology 17:e9923 [2] D Turei, T Korcsmaros J Saez-Rodriguez (2016) OmniPath: guidelines gateway literature-curated signaling pathway resources. Nature Methods 13(12)","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"available-datasets","dir":"Articles","previous_headings":"","what":"Available datasets","title":"The database manager in OmnipathR","text":"see full list datasets call omnipath_show_db function: returns tibble dataset human readable name key can used refer . can also check dataset currently loaded, time ’s last used, loader function arguments.","code":"library(OmnipathR) omnipath_show_db() ## # A tibble: 19 × 10 ##    name   last_…¹ lifet…² package loader loader_param lates…³ loaded db    key   ##    <chr>  <lgl>     <dbl> <chr>   <chr>  <list>       <lgl>   <lgl>  <lgl> <chr> ##  1 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_b… ##  2 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_f… ##  3 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_a… ##  4 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_a… ##  5 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_s… ##  6 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_c… ##  7 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_d… ##  8 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_c… ##  9 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_m… ## 10 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_p… ## 11 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_m… ## 12 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_p… ## 13 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_p… ## 14 Gene … NA          300 Omnipa… go_on… <named list> NA      FALSE  NA    go_y… ## 15 GO an… NA          300 Omnipa… go_an… <named list> NA      FALSE  NA    goa_… ## 16 UniPr… NA          300 Omnipa… unipr… <named list> NA      FALSE  NA    up_gs ## 17 Ensem… NA        10800 Omnipa… taxon… <NULL>       NA      FALSE  NA    orga… ## 18 All S… NA        10800 Omnipa… all_u… <named list> NA      FALSE  NA    swis… ## 19 All T… NA        10800 Omnipa… all_u… <named list> NA      FALSE  NA    trem… ## # … with abbreviated variable names ¹​last_used, ²​lifetime, ³​latest_param"},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"access-a-dataset","dir":"Articles","previous_headings":"","what":"Access a dataset","title":"The database manager in OmnipathR","text":"Datasets can accessed get_db function. Ideally call function every time use dataset. first time loaded, subsequent times already loaded dataset returned. way access registered extends expiry time. Let’s load human UniProt-GeneSymbol table. see key up_gs. dataset two columns data frame SwissProt IDs Gene Symbols. Looking datasets, find dataset loaded now last_used timestamp set time called get_db: table contains also reference dataset, arguments passed loader function: call get_db , timestamp updated, resetting expiry counter:","code":"up_gs <- get_db('up_gs') up_gs ## # A tibble: 20,372 × 2 ##    From   To      ##    <chr>  <chr>   ##  1 P63120 ERVK-19 ##  2 Q96EC8 YIPF6   ##  3 Q6ZMS4 ZNF852  ##  4 Q8N8L2 ZNF491  ##  5 Q15916 ZBTB6   ##  6 O60384 ZNF861P ##  7 Q3MIS6 ZNF528  ##  8 Q86UK7 ZNF598  ##  9 Q6P280 ZNF529  ## 10 Q969W1 ZDHHC16 ## # … with 20,362 more rows omnipath_show_db() ## # A tibble: 19 × 10 ##    name     last_used           lifet…¹ package loader loader_param latest_param ##    <chr>    <dttm>                <dbl> <chr>   <chr>  <list>       <list>       ##  1 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  2 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  3 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  4 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  5 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  6 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  7 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  8 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  9 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 10 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 11 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 12 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 13 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 14 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 15 GO anno… NA                      300 Omnipa… go_an… <named list> <lgl [1]>    ## 16 UniProt… 2022-10-16 16:23:43     300 Omnipa… unipr… <named list> <named list> ## 17 Ensembl… 2022-10-16 16:23:42   10800 Omnipa… taxon… <NULL>       <NULL>       ## 18 All Swi… NA                    10800 Omnipa… all_u… <named list> <lgl [1]>    ## 19 All TrE… NA                    10800 Omnipa… all_u… <named list> <lgl [1]>    ## # … with 3 more variables: loaded <lgl>, db <list>, key <chr>, and abbreviated ## #   variable name ¹​lifetime d <- omnipath_show_db() d %>% dplyr::pull(db) %>% magrittr::extract2(16) ## # A tibble: 20,372 × 2 ##    From   To      ##    <chr>  <chr>   ##  1 P63120 ERVK-19 ##  2 Q96EC8 YIPF6   ##  3 Q6ZMS4 ZNF852  ##  4 Q8N8L2 ZNF491  ##  5 Q15916 ZBTB6   ##  6 O60384 ZNF861P ##  7 Q3MIS6 ZNF528  ##  8 Q86UK7 ZNF598  ##  9 Q6P280 ZNF529  ## 10 Q969W1 ZDHHC16 ## # … with 20,362 more rows d %>% dplyr::pull(latest_param) %>% magrittr::extract2(16) ## $to ## [1] \"genesymbol\" ##  ## $organism ## [1] 9606 up_gs <- get_db('up_gs') omnipath_show_db() ## # A tibble: 19 × 10 ##    name     last_used           lifet…¹ package loader loader_param latest_param ##    <chr>    <dttm>                <dbl> <chr>   <chr>  <list>       <list>       ##  1 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  2 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  3 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  4 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  5 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  6 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  7 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  8 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ##  9 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 10 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 11 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 12 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 13 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 14 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    ## 15 GO anno… NA                      300 Omnipa… go_an… <named list> <lgl [1]>    ## 16 UniProt… 2022-10-16 16:23:53     300 Omnipa… unipr… <named list> <named list> ## 17 Ensembl… 2022-10-16 16:23:42   10800 Omnipa… taxon… <NULL>       <NULL>       ## 18 All Swi… NA                    10800 Omnipa… all_u… <named list> <lgl [1]>    ## 19 All TrE… NA                    10800 Omnipa… all_u… <named list> <lgl [1]>    ## # … with 3 more variables: loaded <lgl>, db <list>, key <chr>, and abbreviated ## #   variable name ¹​lifetime"},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"where-are-the-loaded-datasets","dir":"Articles","previous_headings":"","what":"Where are the loaded datasets?","title":"The database manager in OmnipathR","text":"loaded datasets live environment belong OmnipathR package. Normally users don’t need access environment. see , omnipath_show_db presents us information availble directly looking environment:","code":"OmnipathR:::omnipath.env$db$up_gs ## $name ## [1] \"UniProt-GeneSymbol table\" ##  ## $last_used ## [1] \"2022-10-16 16:23:53 CEST\" ##  ## $lifetime ## [1] 300 ##  ## $package ## [1] \"OmnipathR\" ##  ## $loader ## [1] \"uniprot_full_id_mapping_table\" ##  ## $loader_param ## $loader_param$to ## [1] \"genesymbol\" ##  ## $loader_param$organism ## [1] 9606 ##  ##  ## $latest_param ## $latest_param$to ## [1] \"genesymbol\" ##  ## $latest_param$organism ## [1] 9606 ##  ##  ## $loaded ## [1] TRUE ##  ## $db ## # A tibble: 20,372 × 2 ##    From   To      ##    <chr>  <chr>   ##  1 P63120 ERVK-19 ##  2 Q96EC8 YIPF6   ##  3 Q6ZMS4 ZNF852  ##  4 Q8N8L2 ZNF491  ##  5 Q15916 ZBTB6   ##  6 O60384 ZNF861P ##  7 Q3MIS6 ZNF528  ##  8 Q86UK7 ZNF598  ##  9 Q6P280 ZNF529  ## 10 Q969W1 ZDHHC16 ## # … with 20,362 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"how-to-extend-the-expiry-period","dir":"Articles","previous_headings":"","what":"How to extend the expiry period?","title":"The database manager in OmnipathR","text":"default expiry datasets given option omnipath.db_lifetime. calling omnipath_save_config option saved default config file valid subsequent sessions. Otherwise ’s valid current session.","code":"options(omnipath.db_lifetime = 600) omnipath_save_config()"},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"where-are-the-datasets-defined","dir":"Articles","previous_headings":"","what":"Where are the datasets defined?","title":"The database manager in OmnipathR","text":"built-dataset definitions JSON file shipped package. Easiest way see git web interface.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"how-to-add-custom-datasets","dir":"Articles","previous_headings":"","what":"How to add custom datasets?","title":"The database manager in OmnipathR","text":"Currently API available , super easy implement. matter providing JSON similar , calling function. Please open issue interested feature.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/db_manager.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"The database manager in OmnipathR","text":"","code":"sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] OmnipathR_3.5.22 BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] Rcpp_1.0.9          tidyr_1.2.1         prettyunits_1.1.1   ##  [4] assertthat_0.2.1    rprojroot_2.0.3     digest_0.6.29       ##  [7] utf8_1.2.2          R6_2.5.1            cellranger_1.1.0    ## [10] backports_1.4.1     evaluate_0.17       httr_1.4.4          ## [13] pillar_1.8.1        rlang_1.0.6         progress_1.2.2      ## [16] curl_4.3.3          readxl_1.4.1        jquerylib_0.1.4     ## [19] checkmate_2.1.0     rmarkdown_2.17      pkgdown_2.0.6       ## [22] textshaping_0.3.6   desc_1.4.2          readr_2.1.3         ## [25] stringr_1.4.1       selectr_0.4-2       bit_4.0.4           ## [28] igraph_1.3.5        compiler_4.2.1      xfun_0.33           ## [31] pkgconfig_2.0.3     systemfonts_1.0.4   htmltools_0.5.3     ## [34] tidyselect_1.2.0    tibble_3.1.8        bookdown_0.29       ## [37] fansi_1.0.3         crayon_1.5.2        dplyr_1.0.10        ## [40] tzdb_0.3.0          withr_2.5.0         later_1.3.0         ## [43] rappdirs_0.3.3      jsonlite_1.8.2      lifecycle_1.0.3     ## [46] DBI_1.1.3           magrittr_2.0.3      cli_3.4.1           ## [49] stringi_1.7.8       vroom_1.6.0         cachem_1.0.6        ## [52] fs_1.5.2            xml2_1.3.3          logger_0.2.2        ## [55] bslib_0.4.0         ellipsis_0.3.2      ragg_1.2.3          ## [58] generics_0.1.3      vctrs_0.4.2         tools_4.2.1         ## [61] bit64_4.0.5         glue_1.6.2          purrr_0.3.5         ## [64] hms_1.1.2           fastmap_1.1.0       yaml_2.3.5          ## [67] BiocManager_1.30.18 rvest_1.0.3         memoise_2.0.1       ## [70] knitr_1.40          sass_0.4.2"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Building protein networks around drug-targets using OmnipathR","text":"many applications like understand specific drug interacts protein signaling network targets.","code":"library(dplyr) library(ggplot2) library(OmnipathR) library(igraph) library(ggraph)"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"initialise-omnipath-database","dir":"Articles","previous_headings":"","what":"Initialise OmniPath database","title":"Building protein networks around drug-targets using OmnipathR","text":"query protein-protein interactions webservice OmniPath [1,2] https://omnipathdb.org/ using OmnipathR package:","code":"# Download protein-protein interactions interactions = import_omnipath_interactions() %>% as_tibble()  # Convert to igraph objects: OPI_g = interaction_graph(interactions = interactions )"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"querying-drug-targets","dir":"Articles","previous_headings":"","what":"Querying drug targets","title":"Building protein networks around drug-targets using OmnipathR","text":"direct drug targets use DrugBank [3] database accessed via dbparser package. Please note, following chuncks code evaluated. DrugBank requires registrations access data, therefore ask reader register DrugBank download data . next block code used process DrugBank dataset. declare names drugs interest. use small sample database:","code":"library(dbparser) library(XML)   ## parse data from XML and save it to memory get_xml_db_rows(\"..path-to-DrugBank/full database.xml\")  ## load drugs data drugs <- parse_drug() %>% select(primary_key, name) drugs <- rename(drugs,drug_name = name)  ## load drug target data drug_targets <- parse_drug_targets() %>%    select(id, name,organism,parent_key) %>%    rename(target_name = name)  ## load polypeptide data drug_peptides <- parse_drug_targets_polypeptides()  %>%    select(id, name, general_function, specific_function,           gene_name, parent_id) %>%    rename(target_name = name, gene_id = id)  # join the 3 datasets drug_targets_full <- inner_join(drug_targets, drug_peptides,                                 by=c(\"id\"=\"parent_id\", \"target_name\")) %>%    inner_join(drugs, by=c(\"parent_key\"=\"primary_key\")) %>%    select(-other_keys) drug_names = c(\"Valproat\"      = \"Valproic Acid\",                \"Diclofenac\"    = \"Diclofenac\",                \"Paracetamol\"   = \"Acetaminophen\",                \"Ciproflaxin\"   = \"Ciprofloxacin\",                \"Nitrofurantoin\"= \"Nitrofurantoin\",                \"Tolcapone\",                \"Azathioprine\",                \"Troglitazone\",                \"Nefazodone\",                \"Ketoconazole\",                \"Omeprazole\",                \"Phenytoin\",                \"Amiodarone\",                \"Cisplatin\",                \"Cyclosporin A\"  = \"Cyclosporine\",                \"Verapamil\",                \"Buspirone\",                \"Melatonin\",                \"N-Acetylcysteine\"= \"Acetylcysteine\",                \"Vitamin C\"       = \"Ascorbic acid\",                \"Famotidine\",                \"Vancomycin\") drug_target_data_sample <- drug_targets_full %>%    filter(organism == \"Humans\",drug_name %in% drug_names) drug_targets <- OmnipathR:::drug_target_data_sample %>%    filter(organism == \"Humans\",drug_name %in% drug_names)"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"quality-control","dir":"Articles","previous_headings":"Querying drug targets","what":"Quality control","title":"Building protein networks around drug-targets using OmnipathR","text":"Check drug targets Omnipath","code":"drug_targets <-  drug_targets %>%    select(-target_name, -organism) %>%    mutate(in_OP = gene_id %in% c(interactions$source)) # not all drug-targets are in OP. print(all(drug_targets$in_OP)) ## [1] FALSE # But each drug has at least one target in OP. drug_targets %>% group_by(drug_name) %>% summarise(any(in_OP)) ## # A tibble: 19 × 2 ##    drug_name      `any(in_OP)` ##    <chr>          <lgl>        ##  1 Acetaminophen  TRUE         ##  2 Acetylcysteine TRUE         ##  3 Amiodarone     TRUE         ##  4 Ascorbic acid  TRUE         ##  5 Azathioprine   TRUE         ##  6 Buspirone      TRUE         ##  7 Ciprofloxacin  FALSE        ##  8 Cisplatin      TRUE         ##  9 Diclofenac     TRUE         ## 10 Famotidine     TRUE         ## 11 Ketoconazole   TRUE         ## 12 Melatonin      TRUE         ## 13 Nefazodone     TRUE         ## 14 Omeprazole     TRUE         ## 15 Phenytoin      TRUE         ## 16 Tolcapone      FALSE        ## 17 Troglitazone   TRUE         ## 18 Valproic Acid  TRUE         ## 19 Verapamil      TRUE"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"downstream-signaling-nodes","dir":"Articles","previous_headings":"","what":"Downstream signaling nodes","title":"Building protein networks around drug-targets using OmnipathR","text":"like investigate effect drugs selected proteins. example, activity proteins measured upon drug perturbation. ’ll build network drug targets selected nodes. First declare protein interest (POI):","code":"POI = tibble(protein = c(\"NFE2L2\",\"HMOX1\",\"TP53\",\"CDKN1A\",\"BTG2\",\"NFKB1\",                          \"ICAM1\",\"HSPA5\", \"ATF4\",\"DDIT3\",\"XBP1\"))"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"quality-control-1","dir":"Articles","previous_headings":"Downstream signaling nodes","what":"Quality control","title":"Building protein networks around drug-targets using OmnipathR","text":"Checking POI Omnipath","code":"POI <- POI %>% mutate(in_OP = protein %in% interactions$target_genesymbol) # all POI is in Omnipath print(all(POI$in_OP)) ## [1] TRUE"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"build-network-between-drug-targets-and-poi","dir":"Articles","previous_headings":"","what":"Build network between drug targets and POI","title":"Building protein networks around drug-targets using OmnipathR","text":"First, find paths drug targets POIs. sake simplicity focus drug targets one drug, Cisplatin. paths represented set nodes: direct drug targets, POIs intermediate pathway members give rise network. annotate nodes network plot .  network represents way Cisplatin can influence POIs. One can example filter edges based number fo resources reporting edge based number papers mentioning . However, already covered previous pypath tutorials.","code":"source_nodes <- drug_targets %>%    filter(in_OP, drug_name==\"Cisplatin\") %>%    pull(gene_name) target_nodes <- POI %>% filter(in_OP) %>% pull(protein)  collected_path_nodes = list()  for(i_source in 1:length(source_nodes)){     paths <- shortest_paths(OPI_g, from = source_nodes[[i_source]],                            to = target_nodes,                            output = 'vpath')    path_nodes <- lapply(paths$vpath,names) %>% unlist() %>% unique()    collected_path_nodes[[i_source]] <- path_nodes } collected_path_nodes <- unlist(collected_path_nodes) %>% unique() cisplatin_nodes <- c(source_nodes,target_nodes, collected_path_nodes) %>%    unique() cisplatin_network <- induced_subgraph(graph = OPI_g,vids = cisplatin_nodes) V(cisplatin_network)$node_type = ifelse(    V(cisplatin_network)$name %in% source_nodes, \"direct drug target\",    ifelse(       V(cisplatin_network)$name %in% target_nodes,\"POI\",\"intermediate node\"))  ggraph(       cisplatin_network,       layout = \"lgl\",       area = vcount(cisplatin_network)^2.3,       repulserad = vcount(cisplatin_network)^1.2,       coolexp = 1.1    ) +    geom_edge_link(       aes(          start_cap = label_rect(node1.name),          end_cap = label_rect(node2.name)),          arrow = arrow(length = unit(4, 'mm')       ),       edge_width = .5,       edge_alpha = .2    ) +    geom_node_point() +    geom_node_label(aes(label = name, color = node_type)) +    scale_color_discrete(       guide = guide_legend(title = 'Node type')    ) +    theme_bw() +    xlab(\"\") +    ylab(\"\") +    ggtitle(\"Cisplatin induced network\")"},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Building protein networks around drug-targets using OmnipathR","text":"pipeline inspired post Denes Turei available .","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Building protein networks around drug-targets using OmnipathR","text":"[1] D Turei, Valdeolivas, L Gul, N Palacio-Escat, M Klein, O Ivanova, M Olbei, Gabor, F Theis, D Modos, T Korcsmaros J Saez-Rodriguez (2021) Integrated intra- intercellular signaling knowledge multicellular omics analysis. Molecular Systems Biology 17:e9923 [2] D Turei, T Korcsmaros J Saez-Rodriguez (2016) OmniPath: guidelines gateway literature-curated signaling pathway resources. Nature Methods 13(12) [3] Wishart DS, Feunang YD, Guo AC, Lo EJ, Marcu , Grant JR, Sajed T, Johnson D, Li C, Sayeeda Z, Assempour N, Iynkkaran , Liu Y, Maciejewski , Gale N, Wilson , Chin L, Cummings R, Le D, Pon , Knox C, Wilson M. DrugBank 5.0: major update DrugBank database 2018. Nucleic Acids Res. 2017 Nov 8. doi: 10.1093/nar/gkx1037.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/drug_targets.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building protein networks around drug-targets using OmnipathR","text":"","code":"## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggraph_2.1.0     igraph_1.3.5     OmnipathR_3.5.22 ggplot2_3.3.6    ## [5] dplyr_1.0.10     BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] viridis_0.6.2       httr_1.4.4          sass_0.4.2          ##  [4] tidyr_1.2.1         bit64_4.0.5         vroom_1.6.0         ##  [7] viridisLite_0.4.1   tidygraph_1.2.2     jsonlite_1.8.2      ## [10] bslib_0.4.0         assertthat_0.2.1    highr_0.9           ## [13] BiocManager_1.30.18 cellranger_1.1.0    yaml_2.3.5          ## [16] progress_1.2.2      ggrepel_0.9.1       pillar_1.8.1        ## [19] backports_1.4.1     glue_1.6.2          digest_0.6.29       ## [22] polyclip_1.10-0     checkmate_2.1.0     rvest_1.0.3         ## [25] colorspace_2.0-3    htmltools_0.5.3     pkgconfig_2.0.3     ## [28] logger_0.2.2        bookdown_0.29       purrr_0.3.5         ## [31] scales_1.2.1        tweenr_2.0.2        later_1.3.0         ## [34] tzdb_0.3.0          ggforce_0.4.1       tibble_3.1.8        ## [37] generics_0.1.3      farver_2.1.1        ellipsis_0.3.2      ## [40] cachem_1.0.6        withr_2.5.0         cli_3.4.1           ## [43] magrittr_2.0.3      crayon_1.5.2        readxl_1.4.1        ## [46] memoise_2.0.1       evaluate_0.17       fs_1.5.2            ## [49] fansi_1.0.3         MASS_7.3-58.1       xml2_1.3.3          ## [52] textshaping_0.3.6   tools_4.2.1         prettyunits_1.1.1   ## [55] hms_1.1.2           lifecycle_1.0.3     stringr_1.4.1       ## [58] munsell_0.5.0       compiler_4.2.1      pkgdown_2.0.6       ## [61] jquerylib_0.1.4     systemfonts_1.0.4   rlang_1.0.6         ## [64] grid_4.2.1          rappdirs_0.3.3      labeling_0.4.2      ## [67] rmarkdown_2.17      gtable_0.3.1        DBI_1.1.3           ## [70] curl_4.3.3          graphlayouts_0.8.2  R6_2.5.1            ## [73] gridExtra_2.3       knitr_1.40          bit_4.0.4           ## [76] fastmap_1.1.0       utf8_1.2.2          rprojroot_2.0.3     ## [79] ragg_1.2.3          readr_2.1.3         desc_1.4.2          ## [82] stringi_1.7.8       Rcpp_1.0.9          vctrs_0.4.2         ## [85] tidyselect_1.2.0    xfun_0.33"},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"loading-a-network","dir":"Articles","previous_headings":"","what":"Loading a network","title":"Resource specific interaction attributes","text":"First retrieve complete directed PPI network. Importantly, extra attributes included fields = \"extra_attrs\" argument provided. see, extra_attrs column list type column. list nested list , containing extra attributes resources, extracted JSON.","code":"library(OmnipathR) i <- import_post_translational_interactions(fields = 'extra_attrs') dplyr::select(i, source_genesymbol, target_genesymbol, extra_attrs) ## # A tibble: 80,237 × 3 ##    source_genesymbol target_genesymbol extra_attrs      ##    <chr>             <chr>             <list>           ##  1 CALM3             TRPC1             <named list [1]> ##  2 CALM1             TRPC1             <named list [1]> ##  3 CALM2             TRPC1             <named list [1]> ##  4 CAV1              TRPC1             <named list [1]> ##  5 DRD2              TRPC1             <named list [1]> ##  6 MDFI              TRPC1             <named list [1]> ##  7 ITPR2             TRPC1             <named list [1]> ##  8 MARCKS            TRPC1             <named list [1]> ##  9 TRPC1             GRM1              <named list [0]> ## 10 GRM1              TRPC1             <named list [1]> ## # … with 80,227 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"which-extra-attributes-are-available","dir":"Articles","previous_headings":"","what":"Which extra attributes are available?","title":"Resource specific interaction attributes","text":"attributes present network depends interactions: none interactions SPIKE database, obviously SPIKE_mechanism won’t present. names extra attributes consist name resource name attribute, separated underscore. resource name never contains underscore, attribute names . list extra attributes available particular data frame use extra_attrs function: labels listed top level keys lists extra_attrs column. Note, coverage variables varies lot, typically agreement size resource.","code":"extra_attrs(i) ##  [1] \"TRIP_method\"                \"SIGNOR_mechanism\"           ##  [3] \"PhosphoSite_noref_evidence\" \"PhosphoPoint_category\"      ##  [5] \"PhosphoSite_evidence\"       \"HPRD-phos_mechanism\"        ##  [7] \"Li2012_mechanism\"           \"Li2012_route\"               ##  [9] \"SPIKE_effect\"               \"SPIKE_mechanism\"            ## [11] \"CA1_effect\"                 \"CA1_type\"                   ## [13] \"Macrophage_type\"            \"Macrophage_location\"        ## [15] \"ACSN_effect\"                \"Cellinker_type\"             ## [17] \"CellChatDB_category\"        \"talklr_putative\"            ## [19] \"CellPhoneDB_type\"           \"Ramilowski2015_source\"      ## [21] \"ARN_effect\"                 \"ARN_is_direct\"              ## [23] \"ARN_is_directed\"            \"NRF2ome_effect\"             ## [25] \"NRF2ome_is_direct\"          \"NRF2ome_is_directed\""},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"inspecting-one-attribute","dir":"Articles","previous_headings":"","what":"Inspecting one attribute","title":"Resource specific interaction attributes","text":"values extra attribute, theory, can arbitrarily complex nested lists, reality, often simple numeric, logical character values vectors. see unique values one attribute use extra_attr_values function. Let’s see values SIGNOR_mechanism attribute: values provided original resource, including potential typos inconsistencies, e.g. see capitalized vs. lowercase forms value.","code":"extra_attr_values(i, SIGNOR_mechanism) ##  [1] \"phosphorylation\"                    \"binding\"                            ##  [3] \"dephosphorylation\"                  \"Phosphorylation\"                    ##  [5] \"ubiquitination\"                     \"N/A\"                                ##  [7] \"Physical Interaction\"               \"cleavage\"                           ##  [9] \"Proteolytic Processing\"             \"deubiquitination\"                   ## [11] \"Deubiqitination\"                    \"relocalization\"                     ## [13] \"Ubiquitination\"                     \"Dephosphorylation\"                  ## [15] \"Other\"                              \"guanine nucleotide exchange factor\" ## [17] \"Transcription Regulation\"           \"gtpase-activating protein\"          ## [19] \"Indirect\"                           \"\"                                   ## [21] \"Sumoylation\"                        \"sumoylation\"                        ## [23] \"palmitoylation\"                     \"demethylation\"                      ## [25] \"Demethylation\"                      \"mRNA stability\"                     ## [27] \"methylation\"                        \"Methylation\"                        ## [29] \"hydroxylation\"                      \"Acetylation\"                        ## [31] \"acetylation\"                        \"deacetylation\"                      ## [33] \"Deacetylation\"                      \"Translational Regulation\"           ## [35] \"Protein Degradation\"                \"s-nitrosylation\"                    ## [37] \"phosphomotif_binding\"               \"chemical activation\"                ## [39] \"Proteolytic Cleavage\"               \"glycosylation\"                      ## [41] \"post transcriptional regulation\"    \"catalytic activity\"                 ## [43] \"neddylation\"                        \"Neddylation\"                        ## [45] \"tyrosination\"                       \"lipidation\"                         ## [47] \"ADP-ribosylation\"                   \"desumoylation\"                      ## [49] \"isomerization\"                      \"post translational modification\"    ## [51] \"carboxylation\"                      \"Alkylation\"                         ## [53] \"chemical inhibition\"                \"oxidation\"                          ## [55] \"translation regulation\"             \"Carboxylation\"                      ## [57] \"destabilization\""},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"converting-extra-attributes-to-columns","dir":"Articles","previous_headings":"","what":"Converting extra attributes to columns","title":"Resource specific interaction attributes","text":"make use attributes, convenient extract interesting ones separate columns data frame. extra_attrs_to_cols function multiple attributes can converted single call. Custom column names can passed argument names. example, let’s extract two attributes: disabled keep_empty option, otherwise new columns NULL values records, simply 80k interactions data frame thousands either SIGNOR Macrophage. new columns list type, individual values character vectors. Let’s look one value: two values, inconsistent names resource. Depending downstream methods, atomic columns might preferable instead lists. case one interaction record might yield multiple rows resulted data frame, depending number attributes . atomic columns, use flatten option:","code":"i0 <- extra_attrs_to_cols(     i,     si_mechanism = SIGNOR_mechanism,     ma_mechanism = Macrophage_type,     keep_empty = FALSE )  dplyr::select(     i0,     source_genesymbol,     target_genesymbol,     si_mechanism,     ma_mechanism ) ## # A tibble: 11,638 × 4 ##    source_genesymbol target_genesymbol si_mechanism ma_mechanism ##    <chr>             <chr>             <list>       <list>       ##  1 PRKG1             TRPC3             <chr [1]>    <NULL>       ##  2 PRKG1             TRPC7             <chr [1]>    <NULL>       ##  3 OS9               TRPV4             <chr [1]>    <NULL>       ##  4 PTPN1             TRPV6             <chr [1]>    <NULL>       ##  5 RACK1             TRPM6             <chr [1]>    <NULL>       ##  6 PRKACA            MCOLN1            <chr [1]>    <NULL>       ##  7 MAPK14            MAPKAPK2          <chr [2]>    <chr [2]>    ##  8 MAPKAPK2          HNRNPA0           <chr [2]>    <NULL>       ##  9 MAPKAPK2          PARN              <chr [2]>    <NULL>       ## 10 JAK2              EPOR              <chr [2]>    <NULL>       ## # … with 11,628 more rows dplyr::pull(i0, si_mechanism)[[7]] ## [1] \"phosphorylation\" \"Phosphorylation\" i1 <- extra_attrs_to_cols(     i,     si_mechanism = SIGNOR_mechanism,     ma_mechanism = Macrophage_type,     keep_empty = FALSE,     flatten = TRUE )  dplyr::select(     i1,     source_genesymbol,     target_genesymbol,     si_mechanism,     ma_mechanism ) ## # A tibble: 13,409 × 4 ##    source_genesymbol target_genesymbol si_mechanism      ma_mechanism    ##    <chr>             <chr>             <chr>             <chr>           ##  1 PRKG1             TRPC3             phosphorylation   NA              ##  2 PRKG1             TRPC7             phosphorylation   NA              ##  3 OS9               TRPV4             binding           NA              ##  4 PTPN1             TRPV6             dephosphorylation NA              ##  5 RACK1             TRPM6             binding           NA              ##  6 PRKACA            MCOLN1            phosphorylation   NA              ##  7 MAPK14            MAPKAPK2          phosphorylation   Phosphorylation ##  8 MAPK14            MAPKAPK2          phosphorylation   Phosphorylation ##  9 MAPK14            MAPKAPK2          Phosphorylation   Phosphorylation ## 10 MAPK14            MAPKAPK2          Phosphorylation   Phosphorylation ## # … with 13,399 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"filtering-records-based-on-extra-attributes","dir":"Articles","previous_headings":"","what":"Filtering records based on extra attributes","title":"Resource specific interaction attributes","text":"Another useful application extra attributes filtering records interactions data frame. with_extra_attrs function filters records certain extra attributes. example, interactions SIGNOR_mechanism given: results around 11 thousands rows. Filtering multiple attributes records least one selected. Adding attributes results interactions: possible filter records names values extra attributes. Let’s select interactions phosphorylation according SIGNOR:","code":"nrow(with_extra_attrs(i, SIGNOR_mechanism)) ## [1] 11340 nrow(with_extra_attrs(i, SIGNOR_mechanism, CA1_effect, Li2012_mechanism)) ## [1] 12247 phos <- c('phosphorylation', 'Phosphorylation')  si_phos <- filter_extra_attrs(i, SIGNOR_mechanism = phos)  dplyr::select(si_phos, source_genesymbol, target_genesymbol) ## # A tibble: 4,255 × 2 ##    source_genesymbol target_genesymbol ##    <chr>             <chr>             ##  1 PRKG1             TRPC3             ##  2 PRKG1             TRPC7             ##  3 PRKACA            MCOLN1            ##  4 MAPK14            MAPKAPK2          ##  5 MAPKAPK2          HNRNPA0           ##  6 MAPKAPK2          PARN              ##  7 JAK2              EPOR              ##  8 MAPK14            ZFP36             ##  9 MAPKAPK2          ZFP36             ## 10 AKT1              CHUK              ## # … with 4,245 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"example-finding-ubiquitination-interactions","dir":"Articles","previous_headings":"","what":"Example: finding ubiquitination interactions","title":"Resource specific interaction attributes","text":"First let’s search word “ubiquitination” attributes. slow simple solution: found five attributes least one value matches “biqu”. Next take look values: Actually match ubiquitination interactions, ’s enough filter “ubiquitination” lowercase capitalized forms (note, also include deubiqutination polyubiquitination): found 405 ubiquitination interactions. use map, bind_rows distinct otherwise filter_extra_attrs return intersection matches, instead union. data frame 150 unique ubiquitin E3 ligases: UniProt annotates E3 ligases “Ubl conjugation” keyword. can check many 150 proteins annotation: retrieved 2503 E3 ligases UniProt. 83 substrates interaction database, 67 effectors interactions annotated UniProt. OmniPath enzyme-substrate database collect ubiquitination interactions enzyme-PTM resources. However, contain small number interactions: two exception, recovered using extra attributes network database:","code":"keys <- extra_attrs(i) keys_ubi <- purrr::keep(     keys,     function(k){         any(stringr::str_detect(extra_attr_values(i, !!k), 'biqu'))     } ) keys_ubi ## [1] \"SIGNOR_mechanism\"    \"HPRD-phos_mechanism\" \"SPIKE_mechanism\"     ## [4] \"CA1_type\"            \"Macrophage_type\" ubi <- rlang::set_names(     purrr::map(         keys_ubi,         function(k){             stringr::str_subset(extra_attr_values(i, !!k), 'biqu')         }     ),     keys_ubi ) ubi ## $SIGNOR_mechanism ## [1] \"ubiquitination\"   \"deubiquitination\" \"Ubiquitination\"   ##  ## $`HPRD-phos_mechanism` ## [1] \"Ubiquitination\" ##  ## $SPIKE_mechanism ## [1] \"Ubiquitination\"     \"Polyubiquitination\" ##  ## $CA1_type ## [1] \"Ubiquitination\" ##  ## $Macrophage_type ## [1] \"Ubiquitination\" ubi_kws <- c('ubiquitination', 'Ubiquitination')  i_ubi <-     dplyr::distinct(         dplyr::bind_rows(             purrr::map(                 keys_ubi,                 function(k){                     filter_extra_attrs(i, !!k := ubi_kws, na_ok = FALSE)                 }             )         )     )  dplyr::select(i_ubi, source_genesymbol, target_genesymbol) ## # A tibble: 405 × 2 ##    source_genesymbol target_genesymbol ##    <chr>             <chr>             ##  1 NUMB              NOTCH1            ##  2 PRKN              RANBP2            ##  3 PRKN              SNCA              ##  4 FBXW7             MYC               ##  5 UBE2T             FANCL             ##  6 BIRC2             TRAF2             ##  7 TRAF2             MAP3K14           ##  8 TRAF6             MAP3K7            ##  9 XIAP              DIABLO            ## 10 TRAF2             RIPK1             ## # … with 395 more rows length(unique(i_ubi$source_genesymbol)) ## [1] 150 uniprot_kws <- import_omnipath_annotations(     resources = 'UniProt_keyword',     entity_type = 'protein',     wide = TRUE )  e3_ligases <- dplyr::pull(     dplyr::filter(uniprot_kws, keyword == 'Ubl conjugation'),     genesymbol )  length(e3_ligases) ## [1] 2517 length(intersect(unique(i_ubi$source_genesymbol), e3_ligases)) ## [1] 84 length(setdiff(unique(i_ubi$source_genesymbol), e3_ligases)) ## [1] 66 es_ubi <- import_omnipath_enzsub(types = 'ubiquitination') es_ubi ## # A tibble: 52 × 12 ##    enzyme substrate enzyme_gen…¹ subst…² resid…³ resid…⁴ modif…⁵ sources refer…⁶ ##    <chr>  <chr>     <chr>        <chr>   <chr>     <dbl> <chr>   <chr>   <chr>   ##  1 Q8IUD6 O95786    RNF135       DDX58   K           907 ubiqui… SIGNOR  SIGNOR… ##  2 Q8IUD6 O95786    RNF135       DDX58   K           909 ubiqui… SIGNOR  SIGNOR… ##  3 Q8IYW5 P16104    RNF168       H2AX    K            14 ubiqui… SIGNOR  SIGNOR… ##  4 Q8NG06 O95786    TRIM58       DDX58   K           172 ubiqui… SIGNOR  SIGNOR… ##  5 Q969H0 P23769    FBXW7        GATA2   T           176 ubiqui… SIGNOR  SIGNOR… ##  6 Q969V5 P31749    MUL1         AKT1    K           284 ubiqui… SIGNOR  SIGNOR… ##  7 Q96J02 Q7Z434    ITCH         MAVS    K           371 ubiqui… SIGNOR  SIGNOR… ##  8 Q96J02 Q7Z434    ITCH         MAVS    K           420 ubiqui… SIGNOR  SIGNOR… ##  9 Q96PU5 P35240    NEDD4L       NF2     K           396 ubiqui… SIGNOR  SIGNOR… ## 10 Q9C0C9 O43541    UBE2O        SMAD6   K           173 ubiqui… SIGNOR  SIGNOR… ## # … with 42 more rows, 3 more variables: curation_effort <dbl>, ## #   n_references <int>, n_resources <int>, and abbreviated variable names ## #   ¹​enzyme_genesymbol, ²​substrate_genesymbol, ³​residue_type, ⁴​residue_offset, ## #   ⁵​modification, ⁶​references es_i_ubi <-     dplyr::inner_join(         es_ubi,         i_ubi,         by = c(             'enzyme_genesymbol' = 'source_genesymbol',             'substrate_genesymbol' = 'target_genesymbol'         )     )  nrow(dplyr::distinct(dplyr::select(es_i_ubi, enzyme, substrate, residue_offset))) ## [1] 50"},{"path":"https://saezlab.github.io/OmnipathR/articles/extra_attrs.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Resource specific interaction attributes","text":"","code":"sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] OmnipathR_3.5.22 BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] Rcpp_1.0.9          tidyr_1.2.1         prettyunits_1.1.1   ##  [4] assertthat_0.2.1    rprojroot_2.0.3     digest_0.6.29       ##  [7] utf8_1.2.2          R6_2.5.1            cellranger_1.1.0    ## [10] backports_1.4.1     evaluate_0.17       httr_1.4.4          ## [13] pillar_1.8.1        rlang_1.0.6         progress_1.2.2      ## [16] curl_4.3.3          readxl_1.4.1        jquerylib_0.1.4     ## [19] checkmate_2.1.0     rmarkdown_2.17      pkgdown_2.0.6       ## [22] textshaping_0.3.6   desc_1.4.2          readr_2.1.3         ## [25] stringr_1.4.1       igraph_1.3.5        bit_4.0.4           ## [28] compiler_4.2.1      xfun_0.33           pkgconfig_2.0.3     ## [31] systemfonts_1.0.4   htmltools_0.5.3     tidyselect_1.2.0    ## [34] tibble_3.1.8        bookdown_0.29       fansi_1.0.3         ## [37] crayon_1.5.2        dplyr_1.0.10        tzdb_0.3.0          ## [40] withr_2.5.0         later_1.3.0         rappdirs_0.3.3      ## [43] jsonlite_1.8.2      lifecycle_1.0.3     DBI_1.1.3           ## [46] magrittr_2.0.3      cli_3.4.1           stringi_1.7.8       ## [49] vroom_1.6.0         cachem_1.0.6        fs_1.5.2            ## [52] xml2_1.3.3          logger_0.2.2        bslib_0.4.0         ## [55] ellipsis_0.3.2      ragg_1.2.3          generics_0.1.3      ## [58] vctrs_0.4.2         tools_4.2.1         bit64_4.0.5         ## [61] glue_1.6.2          purrr_0.3.5         hms_1.1.2           ## [64] parallel_4.2.1      fastmap_1.1.0       yaml_2.3.5          ## [67] BiocManager_1.30.18 rvest_1.0.3         memoise_2.0.1       ## [70] knitr_1.40          sass_0.4.2"},{"path":"https://saezlab.github.io/OmnipathR/articles/gene_ontology.html","id":"annotations","dir":"Articles","previous_headings":"","what":"Annotations","title":"Gene Ontology in OmnipathR","text":"","code":"goa <- go_annot_download()"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"status","dir":"Articles","previous_headings":"","what":"Status","title":"Using NicheNet with OmnipathR","text":"integration NicheNet OmniPath fresh development, May 2021 already tested basic functionality. use features described need latest git version OmnipathR, update often test improve elements pipeline. Bug reports, questions suggestions welcome, please open issue github.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using NicheNet with OmnipathR","text":"OmnipathR package contains methods build NichNet[1] format networks OmniPath[2] data resources used original NicheNet study. exceptions, almost resources used originally NicheNet available OmnipathR raw format minimal preprocessing, format suitable NicheNet. However, networks built OmnipathR completely identical ones used NicheNet due complexity processing large amount data. advantage building networks OmnipathR transparent reproducible process, origin data record can easily traced back original source. data used NicheNet publication deposited Zenodo. part prior knowledge used NicheNet collection expression data ligand perturbation experiments. OmnipathR taken directly Zenodo repository. Apart building prior knowledge, OmnipathR provides number glue methods connect elements NicheNet workflow, ultimately making possible run everything single function call, starting processed transcriptomics data going predicted ligand activities. implement workflow followed analysis case study OmniPath paper vignettes NicheNet. workflow consists thin wrappers around NicheNet methods. Parameters methods can provided top level call. transcriptomics data main input pipeline specific study. transcriptomics data can processed standard tools, DESeq[3] bulk Seurat[4] single-cell transcriptomics. latter guidance available NicheNet vignettes. pipeline presented requires list genes expressed transmitter receiver cells (case autocrine signaling ); list genes interest. Genes interest might come investigation subject gene set enrichment analysis (see example ).","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"run-the-workflow-by-a-single-call","dir":"Articles","previous_headings":"","what":"Run the workflow by a single call","title":"Using NicheNet with OmnipathR","text":"nichenet_main function executes workflow elements, hence can used run complete workflow. show example, next sections take closer look individual steps. first four arguments comes study data objective, discussed . parameters workflow can overridden , example, mlrbo_optimization override ncores argument, exclude CPDB signaling network set confidence threshold EVEX.","code":"library(OmnipathR) library(nichenetr)  nichenet_results <- nichenet_main(     expressed_genes_transmitter = expressed_genes_transmitter,     expressed_genes_receiver = expressed_genes_receiver,     genes_of_interest = genes_of_interest,     background_genes = background_genes,     signaling_network = list(         cpdb = NULL,         evex = list(min_confidence = 1.0)     ),     gr_network = list(only_omnipath = TRUE),     n_top_ligands = 20,     mlrmbo_optimization_param = list(ncores = 4) )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"only-model-building","dir":"Articles","previous_headings":"","what":"Only model building","title":"Using NicheNet with OmnipathR","text":"Without transcriptomics data, possible build NicheNet model later can used ligand activity prediction. Hence first four arguments NULL pipeline run model building. Still, tutorial wrap blocks eval = FALSE model optimization computationally intensive, might take hours run. create NicheNet model ’s enough call nichenet_main without arguments, arguments optional override package defaults.","code":"nichenet_model <- nichenet_main()"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"installing-packages-and-loading-nichenetr","dir":"Articles","previous_headings":"","what":"Installing packages and loading nichenetr","title":"Using NicheNet with OmnipathR","text":"running pipeline ’s necessary install nichenetr dependencies. nichenetr package available github, dependencies distributed standard repositories like CRAN. procedure install dependencies well. specific dependencies mlrMBO, parallelMap, ParamHelpers smoof. nichenetr package suggested OmnipathR loaded attached default. might cause issues, example NicheNet requires access lazy loaded external data. address , can either attach nichenetr: call function loads datasets global environment, NicheNet can access :","code":"require(devtools) install_github('saeyslab/nichenetr') library(nichenetr) nichenet_workarounds()"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"testing-the-pipeline","dir":"Articles","previous_headings":"","what":"Testing the pipeline","title":"Using NicheNet with OmnipathR","text":"fresh setup, first step recommended test pipeline, make sure able run particular environment, packages installed loaded properly. optimization process takes hours run, test included OmnipathR takes around 10 minutes. way can avoid errors come running analysis already many hours. Although ’s never guaranteed won’t errors pipeline outcome depends input data certain conditions handled nichenetr, mlr mlrMBO. get error optimization process, start times see ’s consistent. Sometimes helps also restart R session. recommend try around 10 times suspecting bug. See details docs nichenet_test. nichenet_test function builds tiny network runs pipeline highly reduced number parameters iteration steps optimization. Also inputs dummy gene sets genes interest background genes.","code":"require(OmnipathR) nichenet_workarounds() nichenet_test()"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"networks","dir":"Articles","previous_headings":"Workflow steps","what":"Networks","title":"Using NicheNet with OmnipathR","text":"NicheNet requires three types interactions: signaling, ligand-receptor (lr) gene regulatory (gr). collected various resources. OmnipathR top level function, nichenet_networks manages build three networks. returns list three data frames: only_omnipath argument shortcut build networks using OmniPath data: network building functions OmniPath many arguments can provided, end passed import_post_translational_interactions, import_intercell_network import_transcriptional_interactions, recommend read manual functions. example, one can restrict signaling network resources SIGNOR PhosphoSite, ligand-receptor use ligands enzymes transmitter side receptors transporters receiver side, gene regulatory network, use confidence level DoRothEA:","code":"networks <- nichenet_networks() networks <- nichenet_networks(only_omnipath = TRUE) networks <- nichenet_networks(     only_omnipath = TRUE,     signaling_network = list(         omnipath = list(             resources = c('SIGNOR', 'PhosphoSite')         )     ),     lr_network = list(         omnipath = list(             transmitter_param = list(parent = c('ligand', 'secreted_enzyme')),             receiver_param = list(parent = c('receptor', 'transporter'))         )     ),     gr_network = list(         omnipath = list(             resources = 'DoRothEA',             dorothea_levels = 'A'         )     ) )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"signaling-network","dir":"Articles","previous_headings":"Workflow steps > Networks","what":"Signaling network","title":"Using NicheNet with OmnipathR","text":"function nichenet_signaling_network builds signaling network resources default settings. argument function list arguments single resource. argument set NULL, resource omitted. example set custom confidence score thresholds ConsensusPathDB EVEX, use data Pathway Commons. case, rest resources loaded default parameters: Currently following signaling network resources available OmnipathR: OmniPath, Pathway Commons, Harmonizome (PhosphoSite, KEA DEPOD), Vinayagam et al. 2011, ConsensusPathDB, EVEX InWeb InBioMap. Let’s take closer look one resource specific methods. name functions follow scheme, e.g. EVEX : nichenet_signaling_network_evex. resources just load format interactions, accepts parameters, confidence score thresholds switches include exclude certain kind records:","code":"signaling_network <- nichenet_signaling_network(     cpdb = list(         complex_max_size = 1,         min_score = .98     ),     evex = list(         min_confidence = 2     ),     pathwaycommons = NULL )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"raw-data-from-network-resources","dir":"Articles","previous_headings":"Workflow steps > Networks","what":"Raw data from network resources","title":"Using NicheNet with OmnipathR","text":"network format NicheNet minimalistic, contains interacting partners resource. investigate data depth, recommend look original data. methods retrieving data resources end _download foreign resources start import_ OmniPath. example, access EVEX data provided resource:","code":"evex_signaling <- nichenet_signaling_network_evex(top_confidence = .9) evex <- evex_download(remove_negatives = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"ligand-receptor-interactions-and-gene-regulation","dir":"Articles","previous_headings":"Workflow steps > Networks","what":"Ligand-receptor interactions and gene regulation","title":"Using NicheNet with OmnipathR","text":"networks work exactly way signaling network: built nichenet_lr_network nichenet_gr_network functions. Currently following ligand-receptor network resources available OmnipathR: OmniPath, Ramilowski et al. 2015, Guide Pharmacology (IUPHAR/BPS); gene regulatory network: OmniPath, Harmonizome, RegNetwork, HTRIdb, ReMap, EVEX, PathwayCommons TRRUST.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"the-omnipath-ligand-receptor-network","dir":"Articles","previous_headings":"Workflow steps > Networks > Ligand-receptor interactions and gene regulation","what":"The OmniPath ligand-receptor network","title":"Using NicheNet with OmnipathR","text":"ligand-receptor interactions OmniPath special: cover broader categories ligands receptors. includes also secreted enzymes, transporters, etc. Also import_intercell_network function, responsible creating OmniPath LR network, default returns complete network. However, contains considerable number interactions might false positives context intercellular communication. highly recommended apply quality filtering network, using quality_filter_param argument functions NicheNet pipeline. default settings already ensure certain level filtering, read options docs filter_intercell_network. Passing high_confidence = TRUE argument lr_network = list(omnipath = list(high_confidence = TRUE)) results quite stringent filtering, ’s better find preferred options set quality_filter_param. example pass quality options top pipeline:","code":"nichenet_results <- nichenet_main(     quality_filter_param = list(         min_curation_effort = 1,         consensus_percentile = 30     ) )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"small-network","dir":"Articles","previous_headings":"Workflow steps > Networks","what":"Small network","title":"Using NicheNet with OmnipathR","text":"Initially testing purposes included option create small network (thousands interactions instead millions), using high quality subset OmniPath data. might interesting try analysis lower coverage higher confidence network: small network customizable, uses high_confidence option import_intercell_network. can build similar smaller networks using general options instead. Another option tiny generates even smaller network, however involves random subsetting, outcome deterministic, option testing purposes.","code":"nichenet_results <- nichenet_main(small = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"ligand-perturbation-experiments","dir":"Articles","previous_headings":"Workflow steps","what":"Ligand perturbation experiments","title":"Using NicheNet with OmnipathR","text":"expression data collection hundred ligand perturbation experiments available data deposited NicheNet authors Zenodo, expression_settings.rds file. function downloads imports data: ligand missing ligand-receptor network, probably want remove :","code":"expression <- nichenet_expression_data() lr_network <- nichenet_lr_network() expression <- nichenet_remove_orphan_ligands(     expression = expression,     lr_network = lr_network )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"model-optimization","dir":"Articles","previous_headings":"Workflow steps","what":"Model optimization","title":"Using NicheNet with OmnipathR","text":"step optimize parameters model assign weights network resources, especially based ligand perturbation data. nichenet_optimization function wrapper around nichenetr::mlrmbl_optimization. arguments function, objective function can overriden, example ’s good idea set cores according machine’s CPU count: function takes long, even hours run. returns results, saves RDS file. RDS files saved nichenet_results directory default, can changed option omnipath.nichenet_results_dir.","code":"optimization_results <- nichenet_optimization(     networks = networks,     expression = expression,     mlrmbo_optimization_param = list(ncores = 4) ) options(omnipath.nichenet_results_dir = 'my/nichenet/dir') nichenet_results_dir() # [1] \"my/nichenet/dir\""},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"model-build","dir":"Articles","previous_headings":"Workflow steps","what":"Model build","title":"Using NicheNet with OmnipathR","text":"next major part build model connects ligands targets, .e. genes affected expression ligands. , use wrapper around NicheNet functions: nichenet_build_model calls nichenetr::onstruct_weighted_networks nichenetr::apply_hub_corrections. argument weights FALSE, optimized resource weights used, resources considered weight. results saved automatically RDS.","code":"nichenet_model <- nichenet_build_model(     optimization_results = optimization_results,     networks = networks, )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"ligand-target-matrix","dir":"Articles","previous_headings":"Workflow steps","what":"Ligand-target matrix","title":"Using NicheNet with OmnipathR","text":"Finally, produce ligand-target matrix, sparse matrix weighted connections ligands targets. function nichenet_ligand_target_matrix wrapper around nichenetr::construct_ligand_target_matrix. usual results exported RDS. last step NicheNet model building process.","code":"lt_matrix <- nichenet_ligand_target_matrix(     nichenet_model$weighted_networks,     networks$lr_network,     nichenet_model$optimized_parameters )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"ligand-activities","dir":"Articles","previous_headings":"Workflow steps","what":"Ligand activities","title":"Using NicheNet with OmnipathR","text":"step ues NicheNet model infer ligand activities transcriptomics data. last three arguments character vectors gene symbols. genes interest, select 50 random genes targets ligand-target matrix. Also just testing purposes, consider genes network expressed transmitter receiver cells. ligand activities inferred, can obtain list top ligand-target links. ’s us many top ranking ligands, ligands, many top targets include table:","code":"genes_of_interest <- sample(rownames(ligand_target_matrix), 50) background_genes <- setdiff(     rownames(ligand_target_matrix),     genes_of_interest ) expressed_genes_transmitter <- union(     unlist(purrr::map(networks, 'from')),     unlist(purrr::map(networks, 'to')) ) expressed_genes_receiver <- expressed_genes_transmitter  ligand_activities <- nichenet_ligand_activities(     ligand_target_matrix = lt_matrix,     lr_network = networks$lr_network,     expressed_genes_transmitter = expressed_genes_transmitter,     expressed_genes_receiver = expressed_genes_receiver,     genes_of_interest = genes_of_interest ) lt_links <- nichenet_ligand_target_links(     ligand_activities = ligand_activities,     ligand_target_matrix = lt_matrix,     genes_of_interest = genes_of_interest,     n_top_ligands = 20,     n_top_targets = 100 )"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"further-steps","dir":"Articles","previous_headings":"","what":"Further steps","title":"Using NicheNet with OmnipathR","text":"NicheNet workflow OmnipathR implemented point. results can visualized methods included nichenetr, can analysed enrichment functional properties, signaling network connecting ligands targets can reconstructed analysed, ’s shown OmniPath case study.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Using NicheNet with OmnipathR","text":"","code":"## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] knitr_1.40          magrittr_2.0.3      R6_2.5.1            ##  [4] ragg_1.2.3          rlang_1.0.6         fastmap_1.1.0       ##  [7] stringr_1.4.1       tools_4.2.1         xfun_0.33           ## [10] cli_3.4.1           jquerylib_0.1.4     systemfonts_1.0.4   ## [13] htmltools_0.5.3     yaml_2.3.5          digest_0.6.29       ## [16] rprojroot_2.0.3     pkgdown_2.0.6       bookdown_0.29       ## [19] textshaping_0.3.6   BiocManager_1.30.18 purrr_0.3.5         ## [22] sass_0.4.2          fs_1.5.2            memoise_2.0.1       ## [25] cachem_1.0.6        evaluate_0.17       rmarkdown_2.17      ## [28] stringi_1.7.8       compiler_4.2.1      bslib_0.4.0         ## [31] desc_1.4.2          jsonlite_1.8.2"},{"path":"https://saezlab.github.io/OmnipathR/articles/nichenet.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Using NicheNet with OmnipathR","text":"[1] R Browaeys, W Saelens Y Saeys (2020) NicheNet: modeling intercellular communication linking ligands target genes. Nat Methods 17, 159–162 [2] D Turei, Valdeolivas, L Gul, N Palacio-Escat, M Klein, O Ivanova, M Olbei, Gabor, F Theis, D Modos, T Korcsmaros J Saez-Rodriguez (2021) Integrated intra- intercellular signaling knowledge multicellular omics analysis. Molecular Systems Biology 17:e9923 [3] S Anders, W Huber (2010) Differential expression analysis sequence count data. Genome Biol 11, R106 [4] Y Hao, S Hao, E Andersen-Nissen, WM Mauck, S Zheng, Butler, MJ Lee, AJ Wilk, C Darby, M Zagar, P Hoffman, M Stoeckius, E Papalexi, EP Mimitou, J Jain, Srivastava, T Stuart, LB Fleming, B Yeung, AJ Rogers, JM McElrath, CA Blish, R Gottardo, P Smibert R Satija (2020) Integrated analysis multimodal single-cell data. bioRxiv 2020.10.12.335331","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"OmnipathR: an R client for the OmniPath web service","text":"OmnipathR R package built provide easy access data stored OmniPath webservice (Türei, Korcsmáros, Saez-Rodriguez 2016): http://omnipathdb.org/ webservice implements simple REST style API. package make requests HTTP protocol retreive data. Hence, fast Internet access required proper use OmnipathR.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"query-types","dir":"Articles","previous_headings":"Introduction","what":"Query types","title":"OmnipathR: an R client for the OmniPath web service","text":"OmnipathR can retrieve five different types data: Interactions: protein-protein interactions organized different datasets: omnipath: OmniPath data defined original publication (Türei, Korcsmáros, Saez-Rodriguez 2016) collected different databases. pathwayextra: activity flow interactions without literature reference. kinaseextra: enzyme-substrate interactions without literature reference. ligrecextra: ligand-receptor interactions without literature reference. tfregulons: transcription factor (TF)-target interactions DoRothEA (Garcia-Alonso et al. 2019). tf-miRNA: transcription factor-miRNA interactions miRNA-target: miRNA-mRNA interactions. lncRNA-mRNA: lncRNA-mRNA interactions. small molecule-protein: interactions small molecules (metabolites, intrinsic ligands, drug compounds) proteins. Post-translational modifications (PTMs): provides enzyme-substrate reactions similar way aforementioned interactions. biological databases related PTMs integrated OmniPath Phospho.ELM (Dinkel et al. 2010) PhosphoSitePlus [Hornbeck et al. (2014)}. Complexes: provides access comprehensive database 22000 protein complexes. data comes different resources : CORUM (Giurgiu et al. 2018) Hu.map (Drew et al. 2017). Annotations: provides large variety data regarding different annotations proteins complexes. data come dozens databases covering different topics : Topology Data Bank Transmembrane Proteins (TOPDB) (Dobson et al. 2014) ExoCarta (Keerthikumar et al. 2016), database collecting proteins identified exosomes multiple organisms. Intercell: provides information roles inter-cellular signaling. instance. protein ligand, receptor, extracellular matrix (ECM) component, etc. data come original sources combined several databases us. source databases, CellPhoneDB (Vento-Tormo et al. 2018) Receptome (Ben-Shlomo et al. 2003), also referred reacord. Figure 1 shows overview resources featured OmniPath. detailed information original data sources integrated Omnipath, please visit: http://omnipathdb.org/ http://omnipathdb.org/info Figure 1: Overview resources featured OmniPath. Causal resources (including activity-flow enzyme-substrate resources) can provide direction (*) sign direction (+) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"mouse-and-rat","dir":"Articles","previous_headings":"Introduction","what":"Mouse and rat","title":"OmnipathR: an R client for the OmniPath web service","text":"Excluding miRNA interactions, interactions PTMs available human, mouse rat. rodent data translated human using NCBI Homologene database. Many human proteins known homolog rodents, hence rodent datasets smaller human counterparts. case work mouse omics data might better translate dataset human (example using pypath.homology module, https://github.com/saezlab/pypath/) use human interaction data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"installation-of-the-omnipathr-package","dir":"Articles","previous_headings":"","what":"Installation of the OmnipathR package","title":"OmnipathR: an R client for the OmniPath web service","text":"First , need current version R. OmnipathR freely available package deposited Bioconductor GitHub. can install running following commands R console: also load required packages run code vignette.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"OmnipathR\") library(OmnipathR) library(tidyr) library(dnet) library(gprofiler2)"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"usage-examples","dir":"Articles","previous_headings":"","what":"Usage Examples","title":"OmnipathR: an R client for the OmniPath web service","text":"following paragraphs, provide examples describe use OmnipathR package retrieve different types information Omnipath webserver. addition, play around data aiming obtaining biological relevant information. Noteworthy, sections complexes, annotations intercell linked. explore annotations roles inter-cellular communications proteins involved given complex. basic example shows usefulness integrating information available different Omnipath resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"interactions","dir":"Articles","previous_headings":"Usage Examples","what":"Interactions","title":"OmnipathR: an R client for the OmniPath web service","text":"Proteins interact among biological molecules perform cellular functions. Proteins also participates pathways, linked series reactions occurring inter/intra cells transform products transmit signals inducing specific cellular responses. Protein interactions therefore valuable source information understand cellular functioning. download original OmniPath human interactions (Türei, Korcsmáros, Saez-Rodriguez 2016). , first check different source databases select . , print downloaded interactions (“+” means activation, “-” means inhibition “?” means undirected interactions inconclusive data).","code":"## We check some of the different interaction databases get_interaction_resources() ##   [1] \"ABS\"                         \"ACSN\"                        ##   [3] \"ACSN_SignaLink3\"             \"Adhesome\"                    ##   [5] \"AlzPathway\"                  \"ARACNe-GTEx_DoRothEA\"        ##   [7] \"ARN\"                         \"Baccin2019\"                  ##   [9] \"BEL-Large-Corpus_ProtMapper\" \"BioGRID\"                     ##  [11] \"CA1\"                         \"CancerCellMap\"               ##  [13] \"CancerDrugsDB\"               \"CellCall\"                    ##  [15] \"CellChatDB\"                  \"CellChatDB-cofactors\"        ##  [17] \"Cellinker\"                   \"CellPhoneDB\"                 ##  [19] \"CellPhoneDB_Cellinker\"       \"CellTalkDB\"                  ##  [21] \"connectomeDB2020\"            \"dbPTM\"                       ##  [23] \"DeathDomain\"                 \"DEPOD\"                       ##  [25] \"DIP\"                         \"DLRP_Cellinker\"              ##  [27] \"DLRP_talklr\"                 \"DOMINO\"                      ##  [29] \"DoRothEA\"                    \"DoRothEA-reviews_DoRothEA\"   ##  [31] \"ELM\"                         \"EMBRACE\"                     ##  [33] \"ENCODE_tf-mirna\"             \"ENCODE-distal\"               ##  [35] \"ENCODE-proximal\"             \"FANTOM4_DoRothEA\"            ##  [37] \"Fantom5_LRdb\"                \"Guide2Pharma\"                ##  [39] \"Guide2Pharma_Cellinker\"      \"Guide2Pharma_CellPhoneDB\"    ##  [41] \"Guide2Pharma_LRdb\"           \"Guide2Pharma_talklr\"         ##  [43] \"HOCOMOCO_DoRothEA\"           \"HPMR\"                        ##  [45] \"HPMR_Cellinker\"              \"HPMR_LRdb\"                   ##  [47] \"HPMR_talklr\"                 \"HPRD\"                        ##  [49] \"HPRD_KEA\"                    \"HPRD_LRdb\"                   ##  [51] \"HPRD_MIMP\"                   \"HPRD_talklr\"                 ##  [53] \"HPRD-phos\"                   \"HTRIdb\"                      ##  [55] \"HTRIdb_DoRothEA\"             \"HuRI\"                        ##  [57] \"I2D_CellPhoneDB\"             \"ICELLNET\"                    ##  [59] \"IMEx_CellPhoneDB\"            \"InnateDB\"                    ##  [61] \"InnateDB_CellPhoneDB\"        \"InnateDB_SignaLink3\"         ##  [63] \"InnateDB-All_CellPhoneDB\"    \"IntAct\"                      ##  [65] \"IntAct_CellPhoneDB\"          \"IntAct_DoRothEA\"             ##  [67] \"iPTMnet\"                     \"iTALK\"                       ##  [69] \"JASPAR_DoRothEA\"             \"KEA\"                         ##  [71] \"KEGG-MEDICUS\"                \"Kinexus_KEA\"                 ##  [73] \"Kirouac2010\"                 \"Li2012\"                      ##  [75] \"Lit-BM-17\"                   \"LMPID\"                       ##  [77] \"lncrnadb\"                    \"LncRNADisease\"               ##  [79] \"LRdb\"                        \"Macrophage\"                  ##  [81] \"MatrixDB\"                    \"MatrixDB_CellPhoneDB\"        ##  [83] \"MIMP\"                        \"MINT_CellPhoneDB\"            ##  [85] \"miR2Disease\"                 \"miRDeathDB\"                  ##  [87] \"miRecords\"                   \"miRTarBase\"                  ##  [89] \"MPPI\"                        \"NCI-PID_ProtMapper\"          ##  [91] \"ncRDeathDB\"                  \"NetPath\"                     ##  [93] \"NetworKIN_KEA\"               \"NFIRegulomeDB_DoRothEA\"      ##  [95] \"NRF2ome\"                     \"ORegAnno\"                    ##  [97] \"ORegAnno_DoRothEA\"           \"PAZAR\"                       ##  [99] \"PAZAR_DoRothEA\"              \"phosphoELM\"                  ## [101] \"phosphoELM_KEA\"              \"phosphoELM_MIMP\"             ## [103] \"PhosphoNetworks\"             \"PhosphoPoint\"                ## [105] \"PhosphoSite\"                 \"PhosphoSite_KEA\"             ## [107] \"PhosphoSite_MIMP\"            \"PhosphoSite_noref\"           ## [109] \"PhosphoSite_ProtMapper\"      \"ProtMapper\"                  ## [111] \"Ramilowski2015\"              \"Ramilowski2015_Baccin2019\"   ## [113] \"REACH_ProtMapper\"            \"Reactome_LRdb\"               ## [115] \"Reactome_ProtMapper\"         \"Reactome_SignaLink3\"         ## [117] \"RegNetwork_DoRothEA\"         \"ReMap_DoRothEA\"              ## [119] \"RLIMS-P_ProtMapper\"          \"scConnect\"                   ## [121] \"SignaLink3\"                  \"SIGNOR\"                      ## [123] \"SIGNOR_ProtMapper\"           \"Sparser_ProtMapper\"          ## [125] \"SPIKE\"                       \"STRING_talklr\"               ## [127] \"talklr\"                      \"TCRcuration_SignaLink3\"      ## [129] \"TFactS_DoRothEA\"             \"TFe_DoRothEA\"                ## [131] \"TransmiR\"                    \"TRED_DoRothEA\"               ## [133] \"TRIP\"                        \"TRRD_DoRothEA\"               ## [135] \"TRRUST_DoRothEA\"             \"UniProt_CellPhoneDB\"         ## [137] \"UniProt_LRdb\"                \"Wang\"                        ## [139] \"Wojtowicz2020\" ## The interactions are stored into a data frame. interactions <-     import_omnipath_interactions(resources=c(\"SignaLink3\",\"PhosphoSite\",     \"SIGNOR\"))  ## We visualize the first interactions in the data frame. print_interactions(head(interactions)) ## # A tibble: 6 × 5 ##   source          interaction target         n_resources n_references ##   <chr>           <chr>       <chr>                <int>        <int> ## 1 SRC (P12931)    ==( + )==>  TRPV1 (Q8NER1)           5            6 ## 2 PRKACA (P17612) ==( ? )==>  TRPC6 (Q9Y210)           2            3 ## 3 PRKG1 (Q13976)  ==( - )==>  TRPC3 (Q13507)           8            2 ## 4 PTPN1 (P18031)  ==( - )==>  TRPV6 (Q9H1D0)           6            2 ## 5 PRKG1 (Q13976)  ==( + )==>  TRPC7 (Q9HCX4)           3            1 ## 6 OS9 (Q13438)    ==(+/-)==>  TRPV4 (Q9HBA0)           3            1"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"protein-protein-interaction-networks","dir":"Articles","previous_headings":"Usage Examples > Interactions","what":"Protein-protein interaction networks","title":"OmnipathR: an R client for the OmniPath web service","text":"Protein-protein interactions usually converted networks. Describing protein interactions networks provides convenient format visualization, also allows applying graph theory methods mine biological information contain. convert set interactions network/graph (igraphobject). , apply two common approaches extract information biological network: Shortest Paths: finding path two nodes (proteins) going minimum number edges. can useful track consecutive reactions within given pathway. display shortest path two given proteins possible shortests paths two proteins. note functions print_path\\_es print_path\\_vs display similar results, first one takes input edge sequence second one node sequence. Clustering: grouping nodes (proteins) way nodes belonging group (called cluster) connected network groups (clusters). Since proteins interact perform functions, proteins within cluster likely implicated similar biological tasks. Figure 2 shows subgraph containing proteins interactions specifc protein, ERBB2 igraph package contains functions apply sevaral different cluster methods graphs (visit https://igraph.org/r/doc/ detailed information.) Figure 2: ERBB2 associated cluser. Subnetwork extracted interactions graph representing cluster can find gene ERBB2 (yellow node)","code":"## We transform the interactions data frame into a graph OPI_g <- interaction_graph(interactions = interactions)  ## Find and print shortest paths on the directed network between proteins ## of interest: print_path_es(shortest_paths(OPI_g,from = \"TYRO3\",to = \"STAT3\",     output = 'epath')$epath[[1]],OPI_g) ##            source interaction          target n_resources n_references ## 1  TYRO3 (Q06418)  ==( + )==> PIK3R1 (P27986)           4            3 ## 2 PIK3R1 (P27986)  ==(+/-)==> PIK3CG (P48736)           3            3 ## 3 PIK3CG (P48736)  ==( + )==>   RAC1 (P63000)           2            2 ## 4   RAC1 (P63000)  ==( + )==>  STAT3 (P40763)           9            3 ## Find and print all shortest paths between proteins of interest: print_path_vs(all_shortest_paths(OPI_g,from = \"DYRK2\",     to = \"MAPKAPK2\")$res,OPI_g) ## Pathway 1: DYRK2 -> TP53 -> RPS6KA1 -> EEF2K -> MAPKAPK2 ## We apply a clustering algorithm (Louvain) to group proteins in ## our network. We apply here Louvain which is fast but can only run ## on undirected graphs. Other clustering algorithms can deal with ## directed networks but with longer computational times, ## such as cluster_edge_betweenness. These cluster methods are directly ## available in the igraph package. OPI_g_undirected <- as.undirected(OPI_g, mode=c(\"mutual\")) OPI_g_undirected <- simplify(OPI_g_undirected) cl_results <- cluster_fast_greedy(OPI_g_undirected) ## We extract the cluster where a protein of interest is contained cluster_id <- cl_results$membership[which(cl_results$names == \"ERBB2\")] module_graph <- induced_subgraph(OPI_g_undirected,     V(OPI_g)$name[which(cl_results$membership == cluster_id)])"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"other-interaction-datasets","dir":"Articles","previous_headings":"Usage Examples","what":"Other interaction datasets","title":"OmnipathR: an R client for the OmniPath web service","text":"used interactions dataset described original OmniPath publication (Türei, Korcsmáros, Saez-Rodriguez 2016). section, provide examples retry deal interactions remaining datasets. functions can applied every interaction dataset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"pathway-extra","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"Pathway Extra","title":"OmnipathR: an R client for the OmniPath web service","text":"first example, going get interactions pathwayextra dataset, contains activity flow interactions without literature reference. going focus mouse interactions given gene particular case.","code":"## We query and store the interactions into a dataframe interactions <-     import_pathwayextra_interactions(resources=c(\"BioGRID\",\"STRING\"),     organism = 10090) ## Warning in omnipath_check_param(param): The following resources are not ## available: STRING. Check the resource names for spelling mistakes. ## We select all the interactions in which Amfr gene is involved interactions_Amfr <- dplyr::filter(interactions, source_genesymbol == \"Amfr\" |     target_genesymbol == \"Amfr\")  ## We print these interactions: print_interactions(interactions_Amfr) ## # A tibble: 1 × 5 ##   source        interaction target       n_resources n_references ##   <chr>         <chr>       <chr>              <int>        <int> ## 1 Amfr (Q9R049) ==( + )==>  Vcp (Q01853)           6           20"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"kinase-extra","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"Kinase Extra","title":"OmnipathR: an R client for the OmniPath web service","text":"Next, download interactions kinaseextra dataset, contains enzyme-substrate interactions without literature reference. going focus rat reactions targeting particular gene.","code":"## We query and store the interactions into a dataframe interactions <-     import_kinaseextra_interactions(resources=c(\"PhosphoPoint\",     \"PhosphoSite\"), organism = 10116)  ## We select the interactions in which Dpysl2 gene is a target interactions_TargetDpysl2 <- dplyr::filter(interactions,     target_genesymbol == \"Dpysl2\")  ## We print these interactions: print_interactions(interactions_TargetDpysl2) ## # A tibble: 5 × 5 ##   source         interaction target          n_resources n_references ##   <chr>          <chr>       <chr>                 <int>        <dbl> ## 1 Gsk3b (P18266) ==(+/-)==>  Dpysl2 (P47942)          12           33 ## 2 Cdk5 (Q03114)  ==(+/-)==>  Dpysl2 (P47942)           6           30 ## 3 Rock2 (Q62868) ==( + )==>  Dpysl2 (P47942)          10            6 ## 4 Rock1 (Q63644) ==( ? )==>  Dpysl2 (P47942)           7            2 ## 5 Fer (P09760)   ==( ? )==>  Dpysl2 (P47942)           2            2"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"ligand-receptor-extra","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"Ligand-receptor Extra","title":"OmnipathR: an R client for the OmniPath web service","text":"following example going work ligrecextra dataset, contains ligand-receptor interactions without literature reference. goal find potential receptors associated given ligand, CDH1 (Figure 3). Figure 3: Ligand-receptor interactions ADM2 ligand.","code":"## We query and store the interactions into a dataframe interactions <- import_ligrecextra_interactions(resources=c(\"iTALK\",     \"Baccin2019\"), organism=9606)  ## Receptors of the CDH1 ligand. interactions_ADM2 <- dplyr::filter(interactions, source_genesymbol == \"ADM2\")  ## We transform the interactions data frame into a graph OPI_g <- interaction_graph(interactions = interactions_ADM2)  ## We induce a network with these genes Induced_Network <-  dNetInduce(g=OPI_g,     nodes_query=as.character( V(OPI_g)$name), knn=0,     remove.loops=FALSE, largest.comp=FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"dorothea-regulons","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"DoRothEA Regulons","title":"OmnipathR: an R client for the OmniPath web service","text":"Another interesting interaction dataset also available OmniPath DoRothEA (Garcia-Alonso et al. 2019). contains transcription factor (TF)-target interactions confidence score, ranging -E, confident interactions. code chunk shown , select print confident interactions given TF.","code":"## We query and store the interactions into a dataframe interactions <- import_dorothea_interactions(     resources = c(\"DoRothEA\"),     dorothea_levels = 'A',     organism = 9606 )  ## Until the DoRothEA issue gets fixed we have this here: interactions <- import_transcriptional_interactions(     resources = c(\"ORegAnno\", \"DoRothEA\") )  ## We select the most confident interactions for a given TF and we print ## the interactions to check the way it regulates its different targets interactions_A_GLI1  <- dplyr::filter(     interactions,     source_genesymbol == \"GLI1\" )  print_interactions(interactions_A_GLI1) ## # A tibble: 9 × 5 ##   source        interaction target          n_resources n_references ##   <chr>         <chr>       <chr>                 <int>        <dbl> ## 1 GLI1 (P08151) ==( + )==>  HHIP (Q96QV1)             1            0 ## 2 GLI1 (P08151) ==( + )==>  PTCH1 (Q13635)            1            0 ## 3 GLI1 (P08151) ==( + )==>  PTCH2 (Q9Y6C5)            1            0 ## 4 GLI1 (P08151) ==( + )==>  BCL2 (P10415)             0            0 ## 5 GLI1 (P08151) ==( + )==>  CCND2 (P30279)            0            0 ## 6 GLI1 (P08151) ==( - )==>  EGR2 (P11161)             0            0 ## 7 GLI1 (P08151) ==( + )==>  IGFBP6 (P24592)           0            0 ## 8 GLI1 (P08151) ==( + )==>  SFRP1 (Q8N474)            0            0 ## 9 GLI1 (P08151) ==( - )==>  SLIT2 (O94813)            0            0"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"mirna-target-dataset","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"miRNA-target dataset","title":"OmnipathR: an R client for the OmniPath web service","text":"last dataset describing interactions mirnatarget. stores miRNA-mRNA TF-miRNA interactions. interactions available human far. next select miRNA interacting TF selected previous code chunk, GLI1. main function miRNAs seems related gene regulation. therefore interesting see miRNA can regulate expression TF turn regulates expression genes. Figure 4 shows schematic network miRNA targeting GLI1 genes regulated TF. Figure 4: miRNA-TF-target network. Schematic network miRNA (red square nodes) targeting extit{GLI1} (yellow node) genes regulated TF (blue round nodes).","code":"## We query and store the interactions into a dataframe interactions <-   import_mirnatarget_interactions(resources = c(\"miR2Disease\", \"miRDeathDB\"))  ## We select the interactions where a miRNA is interacting with the TF ## used in the previous code chunk and we print these interactions. interactions_miRNA_GLI1 <-     dplyr::filter(interactions, target_genesymbol == \"GLI1\")  print_interactions(interactions_miRNA_GLI1) ## # A tibble: 3 × 5 ##   source                        interaction target        n_resources n_refere…¹ ##   <chr>                         <chr>       <chr>               <int>      <dbl> ## 1 hsa-miR-324-5p (MIMAT0000761) ==( ? )==>  GLI1 (P08151)           3          2 ## 2 hsa-miR-125b (MIMAT0000423)   ==( ? )==>  GLI1 (P08151)           2          1 ## 3 hsa-miR-326 (MIMAT0000756)    ==( ? )==>  GLI1 (P08151)           2          1 ## # … with abbreviated variable name ¹​n_references ## We transform the previous selections to graphs (igraph objects) OPI_g_1 <- interaction_graph(interactions = interactions_miRNA_GLI1) OPI_g_2 <- interaction_graph(interactions = interactions_miRNA_GLI1)"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"small-molecule-protein-dataset","dir":"Articles","previous_headings":"Usage Examples > Other interaction datasets","what":"Small molecule-protein dataset","title":"OmnipathR: an R client for the OmniPath web service","text":"new dataset first added OmniPath January 2022. still quite small: 3.5k interactions three resources (SIGNOR, CancerDrugsDB Cellinker), prospects great growth future. example, lets look targets cancer drug, MEK inhibitor Trametinib: Note, human readable compound names reliable, use PubChem CIDs instead.","code":"trametinib_interactions <- import_small_molecule_protein_interactions(     sources = 'TRAMETINIB' ) print_interactions(trametinib_interactions) ## # A tibble: 26 × 5 ##    source                interaction target          n_resources n_references ##    <chr>                 <chr>       <chr>                 <int>        <dbl> ##  1 TRAMETINIB (11707110) ==( - )==>  MAP2K1 (Q02750)           2            1 ##  2 TRAMETINIB (11707110) ==( - )==>  MAP2K2 (P36507)           2            1 ##  3 TRAMETINIB (11707110) ==( ? )==>  GNAQ (P50148)             1            0 ##  4 TRAMETINIB (11707110) ==( ? )==>  DDX43 (Q9NXZ2)            1            0 ##  5 TRAMETINIB (11707110) ==( ? )==>  ETV1 (P50549)             1            0 ##  6 TRAMETINIB (11707110) ==( ? )==>  STAG2 (Q8N3U4)            1            0 ##  7 TRAMETINIB (11707110) ==( ? )==>  ARAF (P10398)             1            0 ##  8 TRAMETINIB (11707110) ==( ? )==>  CDKN2A (P42771)           1            0 ##  9 TRAMETINIB (11707110) ==( ? )==>  MAP2K5 (Q13163)           1            0 ## 10 TRAMETINIB (11707110) ==( ? )==>  CDKN2A (Q8N726)           1            0 ## # … with 16 more rows"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"post-translational-modifications-ptms","dir":"Articles","previous_headings":"Usage Examples","what":"Post-translational modifications (PTMs)","title":"OmnipathR: an R client for the OmniPath web service","text":"Another query type available PTMs provides enzyme-substrate reactions similar way aforementioned interactions. PTMs refer generally enzymatic modification proteins synthesis ribosomes. PTMs can highly context-specific play main role activation/inhibition biological pathways. next code chunk, download PTMs human. first check different available source databases, even though perform filter. , select print reactions involving specific enzyme-substrate pair. reactions lack information activation inhibition. obtain information, match data OmniPath interactions. Finally, show also possible build graph using information, retrieve PTMs mouse rat.","code":"## We check the different PTMs databases get_enzsub_resources() ##  [1] \"BEL-Large-Corpus_ProtMapper\" \"dbPTM\"                       ##  [3] \"DEPOD\"                       \"HPRD\"                        ##  [5] \"HPRD_MIMP\"                   \"KEA\"                         ##  [7] \"Li2012\"                      \"MIMP\"                        ##  [9] \"NCI-PID_ProtMapper\"          \"phosphoELM\"                  ## [11] \"phosphoELM_MIMP\"             \"PhosphoNetworks\"             ## [13] \"PhosphoSite\"                 \"PhosphoSite_MIMP\"            ## [15] \"PhosphoSite_ProtMapper\"      \"ProtMapper\"                  ## [17] \"REACH_ProtMapper\"            \"Reactome_ProtMapper\"         ## [19] \"RLIMS-P_ProtMapper\"          \"SIGNOR\"                      ## [21] \"SIGNOR_ProtMapper\"           \"Sparser_ProtMapper\" ## We query and store the enzyme-PTM interactions into a dataframe. ## No filtering by databases in this case. enzsub <- import_omnipath_enzsub()  ## We can select and print the reactions between a specific kinase and ## a specific substrate print_interactions(dplyr::filter(     enzsub,     enzyme_genesymbol == \"MAP2K1\",     substrate_genesymbol == \"MAPK3\" )) ## Warning: Unknown or uninitialised column: `is_stimulation`. ## # A tibble: 6 × 5 ##   enzyme          interaction substrate           modification    n_resources ##   <chr>           <chr>       <chr>               <chr>                 <int> ## 1 MAP2K1 (Q02750) ====>       MAPK3_Y204 (P27361) phosphorylation           8 ## 2 MAP2K1 (Q02750) ====>       MAPK3_T202 (P27361) phosphorylation           8 ## 3 MAP2K1 (Q02750) ====>       MAPK3_T207 (P27361) phosphorylation           2 ## 4 MAP2K1 (Q02750) ====>       MAPK3_Y210 (P27361) phosphorylation           2 ## 5 MAP2K1 (Q02750) ====>       MAPK3_T80 (P27361)  phosphorylation           1 ## 6 MAP2K1 (Q02750) ====>       MAPK3_Y222 (P27361) phosphorylation           1 ## In the previous results, we can see that enzyme-PTM relationships do not ## contain sign (activation/inhibition). We can generate this information ## based on the protein-protein OmniPath interaction dataset. interactions <- import_omnipath_interactions() enzsub <- get_signed_ptms(enzsub, interactions)  ## We select again the same kinase and substrate. Now we have information ## about inhibition or activation when we print the enzyme-PTM relationships print_interactions(dplyr::filter(enzsub,enzyme_genesymbol==\"MAP2K1\",     substrate_genesymbol==\"MAPK3\")) ##            enzyme interaction           substrate    modification n_resources ## 1 MAP2K1 (Q02750)  ==( + )==> MAPK3_Y204 (P27361) phosphorylation           8 ## 2 MAP2K1 (Q02750)  ==( + )==> MAPK3_T202 (P27361) phosphorylation           8 ## 4 MAP2K1 (Q02750)  ==( + )==> MAPK3_T207 (P27361) phosphorylation           2 ## 5 MAP2K1 (Q02750)  ==( + )==> MAPK3_Y210 (P27361) phosphorylation           2 ## 3 MAP2K1 (Q02750)  ==( + )==>  MAPK3_T80 (P27361) phosphorylation           1 ## 6 MAP2K1 (Q02750)  ==( + )==> MAPK3_Y222 (P27361) phosphorylation           1 ## We can also transform the enzyme-PTM relationships into a graph. enzsub_g <- enzsub_graph(enzsub = enzsub)  ## We download PTMs for mouse enzsub <- import_omnipath_enzsub(     resources = c(\"PhosphoSite\", \"SIGNOR\"),     organism = 10090 )"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"complexes","dir":"Articles","previous_headings":"Usage Examples","what":"Complexes","title":"OmnipathR: an R client for the OmniPath web service","text":"studies indicate around 80% human proteins operate complexes, many proteins belong several different complexes (Berggård, Linse, James 2007). complexes play critical roles large variety biological processes. well-known examples proteasome ribosome. Thus, description full set protein complexes functioning cells essential improve understanding biological processes. complexes query provides access 20000 protein complexes. comprehensive database created integrating different resources. now download molecular complexes filtering source databases. check complexes couple specific genes participate. First, look complexes two genes participate. identify complex two genes jointly involved. Finally, perform enrichment analysis genes taking part complex. keep eye complex since used forthcoming sections.","code":"## We check the different complexes databases get_complex_resources() ##  [1] \"CellChatDB\"     \"Cellinker\"      \"CellPhoneDB\"    \"CFinder\"        ##  [5] \"Compleat\"       \"ComplexPortal\"  \"CORUM\"          \"Guide2Pharma\"   ##  [9] \"Havugimana2012\" \"hu.MAP\"         \"hu.MAP2\"        \"ICELLNET\"       ## [13] \"KEGG-MEDICUS\"   \"NetworkBlast\"   \"PDB\"            \"SIGNOR\" ## We query and store complexes from some sources into a dataframe. complexes <- import_omnipath_complexes(resources=c(\"CORUM\", \"hu.MAP\"))  ## We check all the molecular complexes where a set of genes participate query_genes <- c(\"WRN\",\"PARP1\")  ## Complexes where any of the input genes participate complexes_query_genes_any <- unique(get_complex_genes(complexes,query_genes,     total_match=FALSE))  ## We print the components of the different selected components head(complexes_query_genes_any$components_genesymbols,6) ## [1] \"NCAPD2_NCAPG_NCAPH_PARP1_SMC2_SMC4_XRCC1\"                              ## [2] \"CCNA2_CDK2_LIG1_PARP1_POLA1_POLD1_POLE_RFC1_RFC2_RPA1_RPA2_RPA3_TOP1\"  ## [3] \"CCNA2_CCNB1_CDK1_PARP1_POLA1_POLD1_POLE_RFC1_RFC2_RPA1_RPA2_RPA3_TOP1\" ## [4] \"MRE11_PARP1_RAD50_TERF2_TERF2IP_XRCC5_XRCC6\"                           ## [5] \"TERF2_WRN\"                                                             ## [6] \"CALR_DHX30_H2AX_H2BU1_HSPA5_NPM1_PARP1\" ## Complexes where all the input genes participate jointly complexes_query_genes_join <- unique(get_complex_genes(complexes,query_genes,     total_match=TRUE))  ## We print the components of the different selected components complexes_query_genes_join$components_genesymbols ## [1] \"PARP1_WRN_XRCC5_XRCC6\" genes_complex <-   unlist(strsplit(complexes_query_genes_join$components_genesymbols, \"_\"))  ## We can perform an enrichment analyses with the genes in the complex EnrichmentResults <- gost(genes_complex, significant = TRUE,     user_threshold = 0.001, correction_method = c(\"fdr\"),     sources=c(\"GO:BP\",\"GO:CC\",\"GO:MF\"))  ## We show the most significant results EnrichmentResults$result %>%   dplyr::select(term_id, source, term_name,p_value) %>%   dplyr::top_n(5,-p_value) ##      term_id source                      term_name      p_value ## 1 GO:0010332  GO:BP    response to gamma radiation 2.371053e-08 ## 2 GO:0000723  GO:BP           telomere maintenance 4.447175e-07 ## 3 GO:0010212  GO:BP response to ionizing radiation 4.447175e-07 ## 4 GO:0071478  GO:BP cellular response to radiation 7.008413e-07 ## 5 GO:0032200  GO:BP          telomere organization 7.008413e-07 ## 6 GO:0000781  GO:CC   chromosome, telomeric region 2.412057e-07"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"annotations","dir":"Articles","previous_headings":"Usage Examples","what":"Annotations","title":"OmnipathR: an R client for the OmniPath web service","text":"Biological annotations statements, usually traceable curated, different features biological entity. genetic level, annotations describe biological function, subcellular situation, DNA location many related properties particular gene gene products. annotations query provides large variety data proteins complexes. data come dozens databases kind annotation record contains different fields. , record_id field unique within records database. row contains one key value pair need use record_id connect related key-value pairs (see examples ). Now, focus annotations complex studied previous section. first inspect different available databases omnipath webserver. , download annotations complex biological entity. find annotations related nucleus transcriptional control, agreement enrichment analysis results individual components. Afterwards, explore annotations individual components complex databases. check pathways proteins involved. , also find many nucleus related annotations checking cellular location. , explore annotations individual components. Pathways proteins belong: Subcellular localization proteins: Since record_id results query, spread records across columns: way , less reconstituted data original resource. can done much easier passing wide = TRUE parameter import_omnipath_annotations. case, data contains one resources, list data frames returned.","code":"## We check the different annotation databases get_annotation_resources() ##  [1] \"Adhesome\"             \"Almen2009\"            \"Baccin2019\"           ##  [4] \"CancerDrugsDB\"        \"CancerGeneCensus\"     \"CancerSEA\"            ##  [7] \"CellCall\"             \"CellCellInteractions\" \"CellChatDB\"           ## [10] \"CellChatDB_complex\"   \"Cellinker\"            \"Cellinker_complex\"    ## [13] \"CellPhoneDB\"          \"CellPhoneDB_complex\"  \"CellTalkDB\"           ## [16] \"CellTypist\"           \"ComPPI\"               \"connectomeDB2020\"     ## [19] \"CORUM_Funcat\"         \"CORUM_GO\"             \"CSPA\"                 ## [22] \"CSPA_celltype\"        \"CytoSig\"              \"DGIdb\"                ## [25] \"DisGeNet\"             \"EMBRACE\"              \"Exocarta\"             ## [28] \"GO_Intercell\"         \"GPCRdb\"               \"Guide2Pharma\"         ## [31] \"HGNC\"                 \"HPA_secretome\"        \"HPA_subcellular\"      ## [34] \"HPA_tissue\"           \"HPMR\"                 \"HumanCellMap\"         ## [37] \"ICELLNET\"             \"ICELLNET_complex\"     \"Integrins\"            ## [40] \"IntOGen\"              \"iTALK\"                \"KEGG-PC\"              ## [43] \"kinase.com\"           \"Kirouac2010\"          \"LOCATE\"               ## [46] \"LRdb\"                 \"Matrisome\"            \"MatrixDB\"             ## [49] \"MCAM\"                 \"Membranome\"           \"MSigDB\"               ## [52] \"NetPath\"              \"OPM\"                  \"PanglaoDB\"            ## [55] \"Phobius\"              \"Phosphatome\"          \"PROGENy\"              ## [58] \"Ramilowski_location\"  \"Ramilowski2015\"       \"scConnect\"            ## [61] \"scConnect_complex\"    \"SignaLink_function\"   \"SignaLink_pathway\"    ## [64] \"SIGNOR\"               \"Surfaceome\"           \"talklr\"               ## [67] \"TCDB\"                 \"TFcensus\"             \"TopDB\"                ## [70] \"UniProt_family\"       \"UniProt_keyword\"      \"UniProt_location\"     ## [73] \"UniProt_tissue\"       \"UniProt_topology\"     \"Vesiclepedia\"         ## [76] \"Zhong2015\" ## We can further investigate the features of the complex selected ## in the previous section.  ## We first get the annotations of the complex itself: annotations <- import_omnipath_annotations(proteins=paste0(\"COMPLEX:\",   complexes_query_genes_join$components_genesymbols))  head(dplyr::select(annotations,source,label,value),10) ## # A tibble: 10 × 3 ##    source label      value                                   ##    <chr>  <chr>      <chr>                                   ##  1 ComPPI location   nucleus                                 ##  2 MSigDB collection chemical_and_genetic_perturbations      ##  3 MSigDB geneset    PUJANA_CHEK2_PCC_NETWORK                ##  4 MSigDB collection chemical_and_genetic_perturbations      ##  5 MSigDB geneset    PUJANA_BRCA1_PCC_NETWORK                ##  6 MSigDB collection reactome_pathways                       ##  7 MSigDB geneset    REACTOME_DNA_DOUBLE_STRAND_BREAK_REPAIR ##  8 MSigDB collection reactome_pathways                       ##  9 MSigDB geneset    REACTOME_DNA_REPAIR                     ## 10 MSigDB collection chemical_and_genetic_perturbations annotations <- import_omnipath_annotations(     proteins = genes_complex,     resources = \"NetPath\" )  dplyr::select(annotations, genesymbol, value) ## # A tibble: 7 × 2 ##   genesymbol value                                         ##   <chr>      <chr>                                         ## 1 PARP1      Tumor necrosis factor (TNF) alpha             ## 2 PARP1      Androgen receptor (AR)                        ## 3 PARP1      TNF-related weak inducer of apoptosis (TWEAK) ## 4 PARP1      Corticotropin-releasing hormone (CRH)         ## 5 PARP1      Oncostatin-M (OSM)                            ## 6 XRCC5      Androgen receptor (AR)                        ## 7 XRCC6      Androgen receptor (AR) annotations <-import_omnipath_annotations(     proteins = genes_complex,     resources = \"ComPPI\" ) tidyr::spread(annotations, label, value) %>% dplyr::arrange(desc(score)) %>% dplyr::top_n(10, score) ## # A tibble: 11 × 7 ##    uniprot genesymbol entity_type source record_id location      score           ##    <chr>   <chr>      <chr>       <chr>      <dbl> <chr>         <chr>           ##  1 P12956  XRCC6      protein     ComPPI      2967 nucleus       0.999999976291… ##  2 P09874  PARP1      protein     ComPPI     11241 nucleus       0.999999887104  ##  3 Q14191  WRN        protein     ComPPI     16096 nucleus       0.9999996544    ##  4 P13010  XRCC5      protein     ComPPI     13373 nucleus       0.99999868288   ##  5 P13010  XRCC5      protein     ComPPI     13371 membrane      0.972           ##  6 P12956  XRCC6      protein     ComPPI      2965 cytosol       0.958           ##  7 P13010  XRCC5      protein     ComPPI     13374 cytosol       0.958           ##  8 Q14191  WRN        protein     ComPPI     16097 cytosol       0.94            ##  9 P12956  XRCC6      protein     ComPPI      2966 extracellular 0.860000000000… ## 10 P12956  XRCC6      protein     ComPPI      2968 membrane      0.860000000000… ## 11 P13010  XRCC5      protein     ComPPI     13372 extracellular 0.860000000000… signaling_pathways <- import_omnipath_annotations(     resources = 'SignaLink_pathway',     wide = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"intercell","dir":"Articles","previous_headings":"Usage Examples","what":"Intercell","title":"OmnipathR: an R client for the OmniPath web service","text":"Cells perceive cues microenvironment neighboring cells, respond accordingly ensure proper activities coordination . ensemble communication process called inter-cellular signaling (intercell). Intercell query provides information roles proteins inter-cellular signaling (e.g. protein ligand, receptor, extracellular matrix (ECM) component, etc.) query type similar annotations. However, intercell data come original sources, combined several databases us categories (also refer original sources). first inspect different categories available OmniPath webserver. , focus previously selected complex check location individual components inter-cellular context. can however see components particular complex intracellular. import_intercell_network function creates complete network, including many interactions false positives context interacellular communication. highly recommended apply quality filtering network. high_confidence parameter performs quiet stringent filtering: Using function filter_intercell_network instead, much flexibility adjust stringency filtering needs analysis. See full list options docs function.","code":"## We check some of the different intercell categories get_intercell_generic_categories() ##  [1] \"transmembrane\"                       \"transmembrane_predicted\"             ##  [3] \"peripheral\"                          \"plasma_membrane\"                     ##  [5] \"plasma_membrane_transmembrane\"       \"plasma_membrane_regulator\"           ##  [7] \"plasma_membrane_peripheral\"          \"secreted\"                            ##  [9] \"cell_surface\"                        \"ecm\"                                 ## [11] \"ligand\"                              \"receptor\"                            ## [13] \"secreted_enzyme\"                     \"secreted_peptidase\"                  ## [15] \"extracellular\"                       \"intracellular\"                       ## [17] \"receptor_regulator\"                  \"secreted_receptor\"                   ## [19] \"sparc_ecm_regulator\"                 \"ecm_regulator\"                       ## [21] \"ligand_regulator\"                    \"cell_surface_ligand\"                 ## [23] \"cell_adhesion\"                       \"matrix_adhesion\"                     ## [25] \"adhesion\"                            \"matrix_adhesion_regulator\"           ## [27] \"cell_surface_enzyme\"                 \"cell_surface_peptidase\"              ## [29] \"secreted_enyzme\"                     \"extracellular_peptidase\"             ## [31] \"secreted_peptidase_inhibitor\"        \"transporter\"                         ## [33] \"ion_channel\"                         \"ion_channel_regulator\"               ## [35] \"gap_junction\"                        \"tight_junction\"                      ## [37] \"adherens_junction\"                   \"desmosome\"                           ## [39] \"intracellular_intercellular_related\" ## We import the intercell data into a dataframe intercell <- import_omnipath_intercell(scope = 'generic',     aspect = 'locational')  ## We check the intercell annotations for the individual components of ## our previous complex. We filter our data to print it in a good format dplyr::filter(intercell,genesymbol %in% genes_complex) %>% dplyr::distinct(genesymbol, parent, .keep_all = TRUE) %>% dplyr::select(category, genesymbol, parent) %>% dplyr::arrange(genesymbol) ## # A tibble: 4 × 3 ##   category      genesymbol parent        ##   <chr>         <chr>      <chr>         ## 1 intracellular PARP1      intracellular ## 2 intracellular WRN        intracellular ## 3 intracellular XRCC5      intracellular ## 4 intracellular XRCC6      intracellular icn <- import_intercell_network(high_confidence = TRUE) icn <-     import_intercell_network() %>%     filter_intercell_network(         min_curation_effort = 1,         consensus_percentile = 33     ) ## We close graphical connections while (!is.null(dev.list()))  dev.off()"},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"OmnipathR: an R client for the OmniPath web service","text":"OmnipathR provides access wealth data stored OmniPath webservice http://omnipathdb.org/ R enviroment. addition, contains utility functions visualization, filtering analysis. main strength OmnipathR straightforward transformation different OmniPath data commonly used R objects, dataframes graphs. Consequently, allows easy integration different types data gateway vast number R packages dedicated analysis representaiton biological data. highlighted abilities examples detailed previous sections document.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"OmnipathR: an R client for the OmniPath web service","text":"","code":"## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] gprofiler2_0.2.1 dnet_1.1.7       supraHex_1.35.0  hexbin_1.28.2    ## [5] igraph_1.3.5     tidyr_1.2.1      OmnipathR_3.5.22 knitr_1.40       ##  ## loaded via a namespace (and not attached): ##  [1] nlme_3.1-160        bitops_1.0-7        bit64_4.0.5         ##  [4] progress_1.2.2      httr_1.4.4          Rgraphviz_2.41.1    ##  [7] tools_4.2.1         backports_1.4.1     bslib_0.4.0         ## [10] utf8_1.2.2          R6_2.5.1            DBI_1.1.3           ## [13] BiocGenerics_0.43.4 lazyeval_0.2.2      colorspace_2.0-3    ## [16] withr_2.5.0         tidyselect_1.2.0    prettyunits_1.1.1   ## [19] bit_4.0.4           curl_4.3.3          compiler_4.2.1      ## [22] graph_1.75.0        cli_3.4.1           rvest_1.0.3         ## [25] xml2_1.3.3          plotly_4.10.0       bookdown_0.29       ## [28] sass_0.4.2          scales_1.2.1        checkmate_2.1.0     ## [31] readr_2.1.3         rappdirs_0.3.3      stringr_1.4.1       ## [34] digest_0.6.29       rmarkdown_2.17      pkgconfig_2.0.3     ## [37] htmltools_0.5.3     fastmap_1.1.0       highr_0.9           ## [40] htmlwidgets_1.5.4   rlang_1.0.6         readxl_1.4.1        ## [43] jquerylib_0.1.4     generics_0.1.3      jsonlite_1.8.2      ## [46] vroom_1.6.0         dplyr_1.0.10        RCurl_1.98-1.9      ## [49] magrittr_2.0.3      Matrix_1.5-1        Rcpp_1.0.9          ## [52] munsell_0.5.0       fansi_1.0.3         ape_5.6-2           ## [55] logger_0.2.2        lifecycle_1.0.3     stringi_1.7.8       ## [58] yaml_2.3.5          MASS_7.3-58.1       grid_4.2.1          ## [61] parallel_4.2.1      crayon_1.5.2        lattice_0.20-45     ## [64] hms_1.1.2           pillar_1.8.1        stats4_4.2.1        ## [67] glue_1.6.2          evaluate_0.17       data.table_1.14.2   ## [70] BiocManager_1.30.18 png_0.1-7           vctrs_0.4.2         ## [73] tzdb_0.3.0          cellranger_1.1.0    gtable_0.3.1        ## [76] purrr_0.3.5         assertthat_0.2.1    cachem_1.0.6        ## [79] ggplot2_3.3.6       xfun_0.33           later_1.3.0         ## [82] viridisLite_0.4.1   tibble_3.1.8        ellipsis_0.3.2      ## [85] BiocStyle_2.25.0"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"preparing-inputs","dir":"Articles","previous_headings":"","what":"Preparing inputs","title":"Pathway construction","text":"tutorial use Gene Symbols (HGNC symbols) primary identifiers just maintain better human readability across intermediate steps, however procedure can done UniProt IDs, latter preferable.","code":""},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"transcription-factors","dir":"Articles","previous_headings":"Preparing inputs","what":"Transcription factors","title":"Pathway construction","text":"endpoints pathways transcription factors (TFs). obtain list TFs Vaquerizas et al. 2009, called TF census: Alternatively can directly download dataset, retrieving data OmniPath preferable times: Another way obtain list TFs collect proteins known regulons (target genes). can download TF-target interactions OmniPath collect proteins source interactions. latest method resulted around 600 TFs, however 97 TF census. Maybe good solution use union TF census:","code":"library(OmnipathR) library(magrittr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union tfcensus <-     import_omnipath_annotations(         resources = 'TFcensus',         entity_types = 'protein'     ) %>%     pull(genesymbol) %>%     unique library(purrr) ##  ## Attaching package: 'purrr' ## The following object is masked from 'package:magrittr': ##  ##     set_names tfcensus_direct <-     tfcensus_download() %>%     pull(`HGNC symbol`) %>%     discard(is.na) %>%     unique tfs_from_network <-     import_transcriptional_interactions(         # confidence levels;         # we use only the 3 levels with highest confidence         dorothea_levels = c('A', 'B', 'C'),         entity_types = 'protein'     ) %>%     pull(source_genesymbol) %>%     unique tfs <- union(tfcensus, tfs_from_network)"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"protein-localizations","dir":"Articles","previous_headings":"Preparing inputs","what":"Protein localizations","title":"Pathway construction","text":"OmniPath contains resources providing subcellular localization data. present three : Checking many proteins covered resources:","code":"localizations <-     import_omnipath_annotations(         resources = c(             'Ramilowski_location',             'UniProt_location',             'HPA_subcellular'         ),         entity_types = 'protein',         wide = TRUE     ) localizations %>% map(function(x){x %>% pull(genesymbol) %>% n_distinct}) ## $HPA_subcellular ## [1] 6803 ##  ## $Ramilowski_location ## [1] 18859 ##  ## $UniProt_location ## [1] 16808"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"ligands-and-receptors","dir":"Articles","previous_headings":"Preparing inputs","what":"Ligands and receptors","title":"Pathway construction","text":"Intercell database OmniPath comprehensive resource cell-cell communication roles. obtain set ligands, receptors, alternatives create sets transmitters receivers, broader categories, generalizations former two. loading datasets, print number unique proteins.","code":"ligands <-     OmnipathR::import_omnipath_intercell(         parent = 'ligand',         topology = 'sec',         consensus_percentile = 50,         loc_consensus_percentile = 30,         entity_types = 'protein'     ) %>%     pull(genesymbol) %>%     unique %T>%     length  receptors <-     OmnipathR::import_omnipath_intercell(         parent = 'receptor',         topology = 'pmtm',         consensus_percentile = 50,         loc_consensus_percentile = 30,         entity_types = 'protein'     ) %>%     pull(genesymbol) %>%     unique %T>%     length  transmitters <-     OmnipathR::import_omnipath_intercell(         causality = 'trans',         topology = 'sec',         consensus_percentile = 50,         loc_consensus_percentile = 30,         entity_types = 'protein'     ) %>%     pull(genesymbol) %>%     unique %T>%     length  receivers <-     OmnipathR::import_omnipath_intercell(         causality = 'rec',         topology = 'pmtm',         consensus_percentile = 50,         loc_consensus_percentile = 30,         entity_types = 'protein'     ) %>%     pull(genesymbol) %>%     unique %T>%     length"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"protein-protein-interactions","dir":"Articles","previous_headings":"Preparing inputs","what":"Protein-protein interactions","title":"Pathway construction","text":"protein-protein interactions OmniPath come many resources divided 4 major datasets (omnipath, pathwayextra, kinaseextra ligrecextra). can try procedure combination , even select resources within . , sake simplicity, use core omnipath PPI dataset, contains literature curated, causal interactions.","code":"ppi <-     import_omnipath_interactions(         datasets = 'omnipath',         entity_types = 'protein'     )"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"example-pathways-from-literature","dir":"Articles","previous_headings":"Preparing inputs","what":"Example pathways from literature","title":"Pathway construction","text":"Many databases contains curated canonical pathways, SIGNOR, KEGG SignaLink. SignaLink pathways curated experts ligands TFs, proteins annotated ligands, receptors, mediators, scaffolds, co-factors TFs. reason, use SignaLink pathways demonstration.","code":"signalink_pathways <-     import_omnipath_annotations(         resources = 'SignaLink_pathway',         entity_types = 'protein',         wide = TRUE     )  signalink_functions <-     import_omnipath_annotations(         resources = 'SignaLink_function',         entity_types = 'protein',         wide = TRUE     )"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"genes-of-interest","dir":"Articles","previous_headings":"Pathway construction I.","what":"Genes of interest","title":"Pathway construction","text":"example, use ligands SignaLink TGF-beta pathway genes interest, starting point paths:","code":"ligands_of_interest <-     intersect(         signalink_pathways %>%             filter(pathway == 'TGF') %>%             pull(genesymbol),         signalink_functions %>%             filter(`function` == 'Ligand') %>%             pull(genesymbol)     ) %T>%     length"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"creating-a-ppi-graph","dir":"Articles","previous_headings":"Pathway construction I.","what":"Creating a PPI graph","title":"Pathway construction","text":"data frame interactions converted igraph graph object, find_all_paths function works kind object.","code":"ppi_graph <-     ppi %>%     interaction_graph"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"looking-up-the-paths","dir":"Articles","previous_headings":"Pathway construction I.","what":"Looking up the paths","title":"Pathway construction","text":"Searching paths graph, define source target nodes maximum length paths. source nodes ligands TGF-beta pathway, target nodes TFs, maximum path length set 3. latter results paths 3 edges, connecting 4 nodes. numerous source target node sets, longer maximum length, longer takes look paths. First make sure use ligands TFs part network: look paths, might take minutes: maxlen 2 resulted around 600 paths, increasing length 1 results 15,173 paths takes ca. 10 min run. length 4 probably still feasible, might result millions paths hours computation time.","code":"library(igraph) ##  ## Attaching package: 'igraph' ## The following objects are masked from 'package:purrr': ##  ##     compose, simplify ## The following objects are masked from 'package:dplyr': ##  ##     as_data_frame, groups, union ## The following objects are masked from 'package:stats': ##  ##     decompose, spectrum ## The following object is masked from 'package:base': ##  ##     union ligands_of_interest__in_network <-     ligands_of_interest %>%     keep(. %in% V(ppi_graph)$name)  tfs__in_network <-     tfs %>%     keep(. %in% V(ppi_graph)$name) paths <-     ppi_graph %>%     find_all_paths(         start = ligands_of_interest__in_network,         end = tfs__in_network,         maxlen = 3,         attr = 'name'     )"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"applying-constraints-on-the-paths","dir":"Articles","previous_headings":"Pathway construction I.","what":"Applying constraints on the paths","title":"Pathway construction","text":"resulted paths start ligand end TF, need make sure intermediate nodes meet desired constraints: second node plasma membrane receptor, mediators located cytoplasm, etc. 15,173 paths, 2,045 (~13%) meet criteria. 43 paths consist 3 nodes (ligand->receptor->TF), 2,002 4 nodes (ligand->receptor->mediator->TF):","code":"# only selecting Cytoplasm, of course we could # consider other intracellular compartments in_cytoplasm <-     localizations$UniProt_location %>%     filter(location == 'Cytoplasm') %>%     pull(genesymbol) %>%     unique  in_nucleus <-     localizations$UniProt_location %>%     filter(location %in% c('Nucleus', 'Nucleolus')) %>%     pull(genesymbol) %>%     unique  paths_selected <-     paths %>%     # removing single node paths     discard(         function(p){             length(p) == 1         }     ) %>%     # receptors are plasma membrane transmembrane     # according to our query to OmniPath     keep(         function(p){             p[2] %in% receptors         }     ) %>%     # making sure all further mediators are     # in the cytoplasm     keep(         function(p){             all(p %>% tail(-2) %>% is_in(in_cytoplasm))         }     ) %>%     # the last nodes are all TFs, implying that they are in the nucleus     # but we can optionally filter foall(p %>% tail(-2)r this too:     keep(         function(p){             last(p) %in% in_nucleus         }     ) %>%     # finally, we can remove paths which contain TFs also as intermediate     # nodes as these are redundant     discard(         function(p){             !any(p %>% head(-1) %>% is_in(tfs))         }     ) paths_selected %>% length  paths_selected %>% map_int(length) %>% table"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"networks","dir":"Articles","previous_headings":"Pathway construction II.","what":"Networks","title":"Pathway construction","text":"seen find_all_paths limited efficiency. convenient method use data frames dplyr’s join methods build paths. comes advantage even efficient backends available dplyr, dtplyr (data.frame backend) dbplyr (relational DBMS backends), hence needed performance can easily improved. OmnipathR already dedicated function creating ligand-receptor (transmitter-receiver) interactions, can use first step. simplicity, limited query ligand-receptor interactions simple filtering select high confidence ones (mostly based consensus across resources). Alternatively, one can fine tune better parameters import_intercell_network, call without parameters, use filter_intercell_network quality filtering. end use simplify_intercell_network get rid redundant columns. query TF-target gene interactions another data frame: PPI network already ppi data frame, loaded previous section. missed , can load like :","code":"ligand_receptor <-     import_intercell_network(         ligand_receptor = TRUE,         high_confidence = TRUE,         entity_types = 'protein'     ) %>%     simplify_intercell_network tf_target <-     import_transcriptional_interactions(         # confidence levels;         # we use only the 2 levels with highest confidence         dorothea_levels = c('A', 'B'),         # I added this only to have less interactions so the         # examples here run faster; feel free to remove it,         # then you will have more gene regulatory interactions         # from a variety of databases         datasets = 'tf_target',         entity_types = 'protein',         # A workaround to mitigate a temporary issue (05/01/2022)         resources = c('ORegAnno', 'PAZAR')     ) ppi <-     import_omnipath_interactions(         datasets = 'omnipath',         entity_types = 'protein'     )"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"annotations","dir":"Articles","previous_headings":"Pathway construction II.","what":"Annotations","title":"Pathway construction","text":"next step, add UniProt localization annotations network data frames, except ligand-receptor data frame, created way ligands extracellular receptors plasma membrane transmembrane. addition, also add kinase annotations kinase.com resource, just showcase working multiple annotations. One protein might multiple localizations belong multiple kinase families. transform localization kinase family columns list columns, means one field might contain one values.","code":"ppi %<>%     annotated_network('UniProt_location') %>%     annotated_network('kinase.com') %>%     # these columns define a unique interaction; 5 of them would be enough     # for only the grouping, we include the rest only to keep them after     # the summarize statement     group_by(         source,         target,         source_genesymbol,         target_genesymbol,         is_directed,         is_stimulation,         is_inhibition,         sources,         references,         curation_effort,         n_references,         n_resources     ) %>%     summarize(         location_source = list(unique(location_source)),         location_target = list(unique(location_target)),         family_source = list(unique(family_source)),         family_target = list(unique(family_target)),         subfamily_source = list(unique(subfamily_source)),         subfamily_target = list(unique(subfamily_target))     ) %>%     ungroup ## `summarise()` has grouped output by 'source', 'target', 'source_genesymbol', ## 'target_genesymbol', 'is_directed', 'is_stimulation', 'is_inhibition', ## 'sources', 'references', 'curation_effort', 'n_references'. You can override ## using the `.groups` argument. tf_target %<>%     annotated_network('UniProt_location') %>%     annotated_network('kinase.com') %>%     group_by(         source,         target,         source_genesymbol,         target_genesymbol,         is_directed,         is_stimulation,         is_inhibition,         sources,         references,         curation_effort,         # Workaround to mitigate a temporary issue with         # DoRothEA data in OmniPath (05/01/2022)         # dorothea_level,         n_references,         n_resources     ) %>%     summarize(         location_source = list(unique(location_source)),         location_target = list(unique(location_target)),         family_source = list(unique(family_source)),         family_target = list(unique(family_target)),         subfamily_source = list(unique(subfamily_source)),         subfamily_target = list(unique(subfamily_target))     ) %>%     ungroup ## `summarise()` has grouped output by 'source', 'target', 'source_genesymbol', ## 'target_genesymbol', 'is_directed', 'is_stimulation', 'is_inhibition', ## 'sources', 'references', 'curation_effort', 'n_references'. You can override ## using the `.groups` argument."},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"building-paths","dir":"Articles","previous_headings":"Pathway construction II.","what":"Building paths","title":"Pathway construction","text":"build paths starting ligand-receptor interactions, joining PPI interactions repeatedly reach desired path length. step throw away paths contain loops; set aside paths end TF; keep growing rest paths. end, add gene regulatory interactions end path, making paths start extracellular ligand end TF target gene. step add suffixes column names: _step1, _step2, , ensure attributes step can recognized. step extend width data frame around 20 columns. reduce dropping certain variables. First, define set TFs: repetitive task growing paths define function: function seems useful, refactoring add OmnipathR. now let’s use building paths. First, using reduce, call previously defined function repeatedly according desired number steps. , go collections paths various lengths, add last step, TF-target interactions. procedure extremely memory intensive, run 3 steps, make sure least 12G free memory. Higher number steps (longer paths) require even memory. course can mitigated removing columns, adding less annotations, using smaller networks (stringent queries subsequent filtering).","code":"tfs <-     tf_target %>%     pull(source_genesymbol) %>%     unique library(rlang) ##  ## Attaching package: 'rlang' ## The following object is masked from 'package:igraph': ##  ##     is_named ## The following objects are masked from 'package:purrr': ##  ##     %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int, ##     flatten_lgl, flatten_raw, invoke, splice ## The following object is masked from 'package:magrittr': ##  ##     set_names library(tidyselect)  grow_paths <- function(paths, step, interactions, endpoints = NULL){      right_target_col <- sprintf(         'target_genesymbol_step%i',         step     )      paths$growing %<>% one_step(step, interactions)      # finished paths with their last node being an endpoint:     paths[[sprintf('step%i', step)]] <-         paths$growing %>%         {`if`(             is.null(endpoints),             .,             filter(., !!sym(right_target_col) %in% endpoints)         )}      # paths to be further extended:     paths$growing %<>%         {`if`(             is.null(endpoints),             NULL,             filter(., !(!!sym(right_target_col) %in% endpoints))         )}      invisible(paths)  }   one_step <- function(paths, step, interactions){      left_col <- sprintf('target_genesymbol_step%i', step - 1)     right_col <- sprintf('source_genesymbol_step%i', step)     by <- setNames(right_col, left_col)      paths %>%     # making sure even at the first step we have the suffix `_step1`     {`if`(         'target_genesymbol' %in% colnames(.),         rename_with(             .,             function(x){sprintf('%s_step%i', x, step)}         ),         .     )} %>%     {`if`(         step == 0,         .,         inner_join(             .,             # adding suffix for the next step             interactions %>%             rename_with(function(x){sprintf('%s_step%i', x, step)}),             by = by         )     )} %>%     # removing loops     filter(         select(., contains('_genesymbol')) %>%         pmap_lgl(function(...){!any(duplicated(c(...)))})     )  } library(stringr)  steps <- 2 # to avoid OOM  paths <-     seq(0, steps) %>%     head(-1) %>%     reduce(         grow_paths,         interactions = ppi,         endpoints = tfs,         .init = list(             growing = ligand_receptor         )     ) %>%     within(rm(growing)) %>%     map2(         names(.) %>% str_extract('\\\\d+$') %>% as.integer %>% add(1),         one_step,         interactions = tf_target     )"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"dependencies","dir":"Articles","previous_headings":"Technical information","what":"Dependencies","title":"Pathway construction","text":"list packages used vignette: way can make sure packages installed:","code":"library(OmnipathR) library(magrittr) library(dplyr) library(purrr) library(igraph) library(rlang) library(tidyselect) library(stringr) library(rmarkdown) missing_packages <-     setdiff(         c(             'magrittr',             'dplyr',             'purrr',             'igraph',             'rlang',             'tidyselect',             'stringr',             'rmarkdown',             'devtools'         ),         installed.packages()     )  if(length(missing_packages)){     install.packages(missing_packages) }  if(!'OmnipathR' %in% installed.packages()){     library(devtools)     devtools::install_github('saezlab/OmnipathR') }"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"how-to-compile","dir":"Articles","previous_headings":"Technical information","what":"How to compile","title":"Pathway construction","text":"Rmd (R markdown) document, popular reporting format R. can generate various document formats , HTML PDF, using render function rmarkdown package:","code":"library(rmarkdown) render('paths.Rmd', output_format = 'html_document')"},{"path":"https://saezlab.github.io/OmnipathR/articles/paths.html","id":"session-information","dir":"Articles","previous_headings":"Technical information","what":"Session information","title":"Pathway construction","text":"find information operating system, R version loaded packages versions R session vignette run without errors. can useful troubleshooting, different software versions one possible cause errors.","code":"sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Arch Linux ##  ## Matrix products: default ## BLAS:   /usr/lib/libopenblasp-r0.3.21.so ## LAPACK: /usr/lib/liblapack.so.3.10.1 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] stringr_1.4.1    tidyselect_1.2.0 rlang_1.0.6      igraph_1.3.5     ## [5] purrr_0.3.5      dplyr_1.0.10     magrittr_2.0.3   OmnipathR_3.5.22 ## [9] BiocStyle_2.25.0 ##  ## loaded via a namespace (and not attached): ##  [1] Rcpp_1.0.9          tidyr_1.2.1         prettyunits_1.1.1   ##  [4] assertthat_0.2.1    rprojroot_2.0.3     digest_0.6.29       ##  [7] utf8_1.2.2          R6_2.5.1            cellranger_1.1.0    ## [10] backports_1.4.1     evaluate_0.17       httr_1.4.4          ## [13] pillar_1.8.1        progress_1.2.2      curl_4.3.3          ## [16] readxl_1.4.1        jquerylib_0.1.4     checkmate_2.1.0     ## [19] rmarkdown_2.17      pkgdown_2.0.6       textshaping_0.3.6   ## [22] desc_1.4.2          readr_2.1.3         bit_4.0.4           ## [25] compiler_4.2.1      xfun_0.33           pkgconfig_2.0.3     ## [28] systemfonts_1.0.4   htmltools_0.5.3     tibble_3.1.8        ## [31] bookdown_0.29       fansi_1.0.3         crayon_1.5.2        ## [34] tzdb_0.3.0          withr_2.5.0         later_1.3.0         ## [37] rappdirs_0.3.3      jsonlite_1.8.2      lifecycle_1.0.3     ## [40] DBI_1.1.3           cli_3.4.1           stringi_1.7.8       ## [43] vroom_1.6.0         cachem_1.0.6        fs_1.5.2            ## [46] xml2_1.3.3          logger_0.2.2        bslib_0.4.0         ## [49] ellipsis_0.3.2      ragg_1.2.3          generics_0.1.3      ## [52] vctrs_0.4.2         tools_4.2.1         bit64_4.0.5         ## [55] glue_1.6.2          hms_1.1.2           parallel_4.2.1      ## [58] fastmap_1.1.0       yaml_2.3.5          BiocManager_1.30.18 ## [61] rvest_1.0.3         memoise_2.0.1       knitr_1.40          ## [64] sass_0.4.2"},{"path":"https://saezlab.github.io/OmnipathR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alberto Valdeolivas. Author. Denes Turei. Maintainer, author. Attila Gabor. Author.","code":""},{"path":"https://saezlab.github.io/OmnipathR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"D Turei, Valdeolivas, L Gul, N Palacio-Escat, M Klein,         O Ivanova, M Olbei, Gabor, F Theis, D Modos, T Korcsmaros         J Saez-Rodriguez (2021) Integrated intra- intercellular signaling         knowledge multicellular omics analysis. Molecular Systems Biology         17: e9923; DOI: 10.15252/msb.20209923 D Turei, T Korcsmaros J Saez-Rodriguez (2016) OmniPath:         guidelines gateway literature-curated signaling pathway         resources. Nature Methods 13 (12); PMID: 27898060 Valdeolivas, D Turei, Gabor (2019) “OmnipathR: client         OmniPath web service.” Bioconductor Package","code":"@Article{,   author = {Denes Turei and Alberto Valdeolivas and Lejla Gul and Nicolas Palacio-Escat and Michal Klein and Olga Ivanova and Marton Olbei and Attila Gabor and Fabian Theis and Dezso Modos and Tamas { Korcsmaros} and Julio Saez-Rodriguez},   title = {Integrated intra- and intercellular signaling knowledge for         multicellular omics analysis},   journal = {Molecular Systems Biology},   year = {2021},   doi = {10.15252/msb.20209923}, } @Article{,   author = {Denes Turei and Tamas { Korcsmaros} and Julio Saez-Rodriguez},   title = {OmniPath: guidelines and gateway for literature-curated         signaling pathway resources},   journal = {Nature Methods},   year = {2016}, } @Misc{,   author = {Alberto Valdeolivas and Denes { Turei} and Attila Gabor},   title = {OmnipathR: client for the OmniPath web service},   note = {Bioconductor Package},   year = {2019}, }"},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"omnipathr","dir":"","previous_headings":"","what":"OmniPath web service client and more","title":"OmniPath web service client and more","text":"R client OmniPath web service many resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"package-contents","dir":"","previous_headings":"","what":"Package contents","title":"OmniPath web service client and more","text":"Client OmniPath web service Functions post-processing OmniPath data Ensembl BioMart, UniProt KEGG clients Access databases (18+ resources, see ) Integration NicheNet, method infer ligand activities transcriptomics data","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"omnipath-web-service-client","dir":"","previous_headings":"Package contents","what":"OmniPath web service client","title":"OmniPath web service client and more","text":"OmnipathR retrieves data OmniPath web service https://omnipathdb.org/ web service implements simple REST style API. package make requests HTTP protocol retreive data. Hence, fast Internet access required proper use OmnipathR.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"what-is-omnipath","dir":"","previous_headings":"Package contents > OmniPath web service client","what":"What is OmniPath?","title":"OmniPath web service client and more","text":"OmniPath database : Protein-protein, TF target miRNA-mRNA interactions Enzyme-PTM relationships Protein complexes Annotations protein function, structure, localization, expression Intercellular communication roles proteins learn OmniPath, can visit website, read recent publication first paper 2016, especially supplementary material.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"access-to-further-resources","dir":"","previous_headings":"Package contents","what":"Access to further resources","title":"OmniPath web service client and more","text":"package provides access number databases: BioPlex, ConsensusPathDB, EVEX, Gene Ontology, Guide Pharmacology (IUPHAR/BPS), Harmonizome, HTRIdb, Human Phenotype Ontology, InWeb InBioMap, KEGG Pathway, Pathway Commons, PrePPI, Ramilowski et al. 2015, RegNetwork, ReMap, TF census, TRRUST Vinayagam et al. 2011.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"OmniPath web service client and more","text":"latest version reference manual available https://static.omnipathdb.org/omnipathr_manual.pdf. Tutorials can found https://workflows.omnipathdb.org/. Sroll quick start examples.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"omnipath-query-types","dir":"","previous_headings":"","what":"OmniPath query types","title":"OmniPath web service client and more","text":"provide brief summary data available OmnipathR. OmnipathR provides access 5 types queries: Interactions: protein-protein interactions different datasets. Enzyme-substrate: enzyme-PTM (post-translational modification) relationships. Complexes: comprehensive database 22000 protein complexes. Annotations: large variety data proteins complexes features. Intercell: information roles inter-cellular signaling. detailed information, recommend visit following sites: https://omnipathdb.org/ https://omnipathdb.org/info https://github.com/saezlab/pypath/blob/master/webservice.rst https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"OmniPath web service client and more","text":"First , need current version R (https://r-project.org).","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"from-bioconductor","dir":"","previous_headings":"Installation","what":"From Bioconductor","title":"OmniPath web service client and more","text":"OmnipathR freely available package deposited Bioconductor Github: (https://bioconductor.org/, https://github.com/saezlab/OmnipathR). can install running following commands R console:","code":"if (!requireNamespace('BiocManager', quietly = TRUE))     install.packages('BiocManager')  ## Last release in Bioconductor BiocManager::install('OmnipathR', version = '3.12') ## Development version with the lastest updates BiocManager::install('OmnipathR', version = 'devel')"},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"from-github","dir":"","previous_headings":"Installation","what":"From github","title":"OmniPath web service client and more","text":"add new features OmnipathR way often Bioconductor release frequency. make use recent developments, can use devtools install package directly github:","code":"require(devtools) install_github('saezlab/OmnipathR')"},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"getting-started-and-some-usage-examples","dir":"","previous_headings":"","what":"Getting started and some usage examples","title":"OmniPath web service client and more","text":"get started, strongly recommend read main vignette order deal different types queries handle data return: https://saezlab.github.io/OmnipathR/articles/omnipath_intro.html can also check manual: https://saezlab.github.io/OmnipathR/reference/index.html addition, provide examples quick start: Download human protein-protein interactions specified resources: Download human enzyme-PTM relationships specified resources: Convert data frames networks (igraph objects) Print interactions nice format: Find interactions specific kinase specific substrate: Find shortest paths directed network proteins: Find shortest paths proteins:","code":"library(OmnipathR) interactions <- import_omnipath_interactions(     resources = c('SignaLink3', 'PhosphoSite', 'SIGNOR') ) enzsub <- import_omnipath_enzsub(resources = c('PhosphoSite', 'SIGNOR')) ptms_g = ptms_graph(ptms = enzsub) OPI_g = interaction_graph(interactions = interactions) print_interactions(head(interactions))            source interaction         target n_resources n_references 4    SRC (P12931)  ==( + )==> TRPV1 (Q8NER1)           9            6 2  PRKG1 (Q13976)  ==( - )==> TRPC6 (Q9Y210)           7            5 1  PRKG1 (Q13976)  ==( - )==> TRPC3 (Q13507)           9            2 5    LYN (P07948)  ==( + )==> TRPV4 (Q9HBA0)           9            2 6  PTPN1 (P18031)  ==( - )==> TRPV6 (Q9H1D0)           3            2 3 PRKACA (P17612)  ==( + )==> TRPV1 (Q8NER1)           6            1 print_interactions(dplyr::filter(enzsub,enzyme_genesymbol=='MAP2K1',   substrate_genesymbol=='MAPK3'))             enzyme interaction           substrate    modification n_resources 1 MAP2K1 (Q02750)       ====> MAPK3_Y204 (P27361) phosphorylation           8 2 MAP2K1 (Q02750)       ====> MAPK3_T202 (P27361) phosphorylation           8 3 MAP2K1 (Q02750)       ====> MAPK3_Y210 (P27361) phosphorylation           2 4 MAP2K1 (Q02750)       ====> MAPK3_T207 (P27361) phosphorylation           2 print_path_es(shortest_paths(OPI_g,from = 'TYRO3',to = 'STAT3',     output = 'epath')$epath[[1]],OPI_g)             source interaction          target n_resources n_references 1  TYRO3 (Q06418)  ==( ? )==>   AKT1 (P31749)           2            0 2   AKT1 (P31749)  ==( - )==> DAB2IP (Q5VWQ8)           3            1 3 DAB2IP (Q5VWQ8)  ==( - )==>  STAT3 (P40763)           1            1 print_path_vs(all_shortest_paths(OPI_g,from = 'DYRK2',to = 'MAPKAPK2')$res,OPI_g) Pathway 1: DYRK2 -> TBK1 -> NFKB1 -> MAP3K8 -> MAPK3 -> MAPKAPK2 Pathway 2: DYRK2 -> TBK1 -> AKT3 -> MAP3K8 -> MAPK3 -> MAPKAPK2 Pathway 3: DYRK2 -> TBK1 -> AKT2 -> MAP3K8 -> MAPK3 -> MAPKAPK2 Pathway 4: DYRK2 -> TBK1 -> AKT1 -> MAP3K8 -> MAPK3 -> MAPKAPK2 Pathway 5: DYRK2 -> TBK1 -> AKT3 -> PEA15 -> MAPK3 -> MAPKAPK2 Pathway 6: DYRK2 -> TBK1 -> AKT2 -> PEA15 -> MAPK3 -> MAPKAPK2 ....."},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"python","dir":"","previous_headings":"Alternatives","what":"Python","title":"OmniPath web service client and more","text":"similar web service client available Python:","code":"<https://github.com/saezlab/omnipath>"},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"cytoscape","dir":"","previous_headings":"Alternatives","what":"Cytoscape","title":"OmniPath web service client and more","text":"OmniPath Cytoscape app provides access interactions, enzyme-PTM relationships annotations:","code":"<https://apps.cytoscape.org/apps/omnipath>"},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"customization","dir":"","previous_headings":"Alternatives","what":"Customization","title":"OmniPath web service client and more","text":"pypath Python module tool building OmniPath databases fully customizable way. recommend use pypath want : Tailor database building needs Include resources available public web service Use rich Python APIs available database objects Make sure data original sources --date Use methods pypath.inputs download data resources Use various extra tools pypath.utils, e.g. identifier translation, homology translation, querying Gene Ontology, working protein sequences, processing BioPAX, etc. pypath ’s also possible run web service serve custom databases OmnipathR R client omnipath Python cient.","code":""},{"path":"https://saezlab.github.io/OmnipathR/index.html","id":"feedbacks-bug-reports-features","dir":"","previous_headings":"","what":"Feedbacks, bug reports, features","title":"OmniPath web service client and more","text":"Feedbacks bugreports always welcome! Please use Github issue page report bugs questions: https://github.com/saezlab/OmnipathR/issues Many thanks using OmnipathR!","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/OmnipathR.html","id":null,"dir":"Reference","previous_headings":"","what":"The OmnipathR package — OmnipathR","title":"The OmnipathR package — OmnipathR","text":"OmnipathR R package built provide easy access data stored OmniPath web service: https://omnipathdb.org/ number resources, BioPlex, ConsensusPathDB, EVEX, Guide Pharmacology (IUPHAR/BPS), Harmonizome, HTRIdb, InWeb InBioMap, KEGG Pathway, Pathway Commons, Ramilowski et al. 2015, RegNetwork, ReMap, TF census, TRRUST Vinayagam et al. 2011. OmniPath web service implements simple REST style API. package make requests HTTP protocol retreive data. Hence, fast Internet access required propser use OmnipathR. package also provides utility functions filter, analyse visualize data. Furthermore, OmnipathR features close integration NicheNet method ligand activity prediction transcriptomics data, R implementation nichenetr (available CRAN).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/OmnipathR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The OmnipathR package — OmnipathR","text":"Alberto Valdeolivas <alvaldeolivas@gmail> Denes Turei <turei.denes@gmail.com> Attila Gabor <gaborattila87@gmail.com>","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/OmnipathR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The OmnipathR package — OmnipathR","text":"","code":"if (FALSE) { # Download post-translational modifications: enzsub <- import_omnipath_enzsub(resources = c(\"PhosphoSite\", \"SIGNOR\"))  # Download protein-protein interactions interactions <- import_omnipath_interactions(resources = c(\"SignaLink3\"))  # Convert to igraph objects: enzsub_g <- enzsub_graph(enzsub = enzsub) OPI_g <- interaction_graph(interactions = interactions )  # Print some interactions: print_interactions(head(ptms))  # interactions with references: print_interactions(tail(ptms),writeRefs=TRUE)  # find interactions between kinase and substrate: print_interactions(dplyr::filter(ptms,enzyme_genesymbol==\"MAP2K1\",    substrate_genesymbol==\"MAPK3\"))  # find shortest paths on the directed network between proteins print_path_es(shortest_paths(OPI_g, from = \"TYRO3\", to = \"STAT3\",    output = 'epath')$epath[[1]], OPI_g)  # find all shortest paths between proteins print_path_vs(     all_shortest_paths(         enzsub_g,         from = \"SRC\",         to = \"STAT1\"     )$res,     enzsub_g ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprot_acs.html","id":null,"dir":"Reference","previous_headings":"","what":"All UniProt ACs for one organism — all_uniprot_acs","title":"All UniProt ACs for one organism — all_uniprot_acs","text":"UniProt ACs one organism","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprot_acs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All UniProt ACs for one organism — all_uniprot_acs","text":"","code":"all_uniprot_acs(organism = 9606, reviewed = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprot_acs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All UniProt ACs for one organism — all_uniprot_acs","text":"organism Character integer: name identifier organism. reviewed Retrieve reviewed (`TRUE`), unreviewed (`FALSE`) (`NULL`).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprot_acs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All UniProt ACs for one organism — all_uniprot_acs","text":"Character vector UniProt accession numbers.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprot_acs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All UniProt ACs for one organism — all_uniprot_acs","text":"","code":"human_swissprot_acs <- all_uniprot_acs() human_swissprot_acs[1:5] #> [1] \"P63120\" \"Q96EC8\" \"Q6ZMS4\" \"Q8N8L2\" \"Q15916\" # [1] \"P51451\" \"A6H8Y1\" \"O60885\" \"Q9Y3X0\" \"P22223\" length(human_swissprot_acs) #> [1] 20401 # [1] 20376 mouse_swissprot_acs <- all_uniprot_acs(\"mouse\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprots.html","id":null,"dir":"Reference","previous_headings":"","what":"A table with all UniProt records — all_uniprots","title":"A table with all UniProt records — all_uniprots","text":"Retrieves table UniProt proteins certain organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table with all UniProt records — all_uniprots","text":"","code":"all_uniprots(fields = \"id\", reviewed = TRUE, organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A table with all UniProt records — all_uniprots","text":"fields Character vector fields defined UniProt. possible values please refer https://www.uniprot.org/help/uniprotkb%5Fcolumn%5Fnames reviewed Retrieve reviewed (`TRUE`), unreviewed (`FALSE`) (`NULL`). organism Character integer: name identifier organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A table with all UniProt records — all_uniprots","text":"Data frame (tibble) requested UniProt entries fields.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/all_uniprots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A table with all UniProt records — all_uniprots","text":"","code":"human_swissprot_entries <- all_uniprots(fields = 'entry name') human_swissprot_entries #> # A tibble: 20,401 × 1 #>    `Entry name` #>    <chr>        #>  1 VPK19_HUMAN  #>  2 YIPF6_HUMAN  #>  3 ZN852_HUMAN  #>  4 ZN491_HUMAN  #>  5 ZBTB6_HUMAN  #>  6 ZN861_HUMAN  #>  7 ZN528_HUMAN  #>  8 ZN598_HUMAN  #>  9 ZN529_HUMAN  #> 10 ZDH16_HUMAN  #> # … with 20,391 more rows # # A tibble: 20,396 x 1 #    `Entry name` #    <chr> #  1 OR4K3_HUMAN #  2 O52A1_HUMAN #  3 O2AG1_HUMAN #  4 O10S1_HUMAN #  5 O11G2_HUMAN # # . with 20,386 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":null,"dir":"Reference","previous_headings":"","what":"All ancestors in the ontology tree — ancestors","title":"All ancestors in the ontology tree — ancestors","text":"Starting selected nodes, recursively walks ontology tree reaches root. Collects visited nodes, ancestors (parents) starting nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All ancestors in the ontology tree — ancestors","text":"","code":"ancestors(   terms,   db_key = \"go_basic\",   ids = TRUE,   relations = c(\"is_a\", \"part_of\", \"occurs_in\", \"regulates\", \"positively_regulates\",     \"negatively_regulates\") )"},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All ancestors in the ontology tree — ancestors","text":"terms Character vector ontology term IDs names. mixture IDs names can provided. db_key Character: key identify ontology database. available keys see omnipath_show_db. ids Logical: whether return IDs term names. relations Character vector ontology relation types. relations used.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All ancestors in the ontology tree — ancestors","text":"Character vector ontology IDs. input terms     root nodes, NULL returned. starting nodes     included result unless ancestors     starting nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All ancestors in the ontology tree — ancestors","text":"Note: function relies database manager, first call might take long database load process. Subsequent calls within short period faster. See get_ontology_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ancestors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All ancestors in the ontology tree — ancestors","text":"","code":"ancestors('GO:0005035', ids = FALSE) #> [1] \"molecular_function\"                        #> [2] \"transmembrane signaling receptor activity\" #> [3] \"death receptor activity\"                   #> [4] \"signaling receptor activity\"               #> [5] \"molecular transducer activity\"             # [1] \"molecular_function\" # [2] \"transmembrane signaling receptor activity\" # [3] \"signaling receptor activity\" # [4] \"molecular transducer activity\""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotated_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Network interactions with annotations — annotated_network","title":"Network interactions with annotations — annotated_network","text":"Annotations often useful network context, e.g. one might want label interacting partners pathway membership. function takes network data frame joins annotation data frame left right side, source target molecular entities labeled annotations. one entity many annotations yield many rows, hence interacting pairs unique across data frame . Also one entity really many annotations resulting data frame might huge, recommend careful . Finally, want intercell annotations, import_intercell_network function.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotated_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network interactions with annotations — annotated_network","text":"","code":"annotated_network(   network = NULL,   annot = NULL,   network_args = list(),   annot_args = list(),   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/annotated_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network interactions with annotations — annotated_network","text":"network Behaviour depends type: list, passed arguments import_omnipath_interactions obtain network data frame; data frame tibble, used network data frame; character vector, assumed set resource names interactions queried resources. annot Either name annotation resource (list available resources call get_annotation_resources), annotation data frame. data frame contains one resources, first one used. network_args List: `network` resource name, pass additional arguments import_omnipath_interactions. annot_args List: `annot` resource name, pass additional arguments import_omnipath_annotations. ... Column names selected annotation data frame (passed dplyr::select, empty columns selected.)","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotated_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network interactions with annotations — annotated_network","text":"data frame interactions annotations interacting     entities.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotated_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network interactions with annotations — annotated_network","text":"","code":"signalink_with_pathways <-     annotated_network('SignaLink3', 'SignaLink_pathway')"},{"path":"https://saezlab.github.io/OmnipathR/reference/annotation_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation categories and resources — annotation_categories","title":"Annotation categories and resources — annotation_categories","text":"full list annotation resources, keys values.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotation_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation categories and resources — annotation_categories","text":"","code":"annotation_categories()"},{"path":"https://saezlab.github.io/OmnipathR/reference/annotation_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotation categories and resources — annotation_categories","text":"data frame resource names, annotation key labels     key possible values.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/annotation_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation categories and resources — annotation_categories","text":"","code":"annot_cat <- annotation_categories() annot_cat #> # A tibble: 52,677 × 3 #>    source       label        value                      #>    <chr>        <chr>        <chr>                      #>  1 HumanCellMap localization Arp2/3 protein complex     #>  2 HumanCellMap localization ER lumen                   #>  3 HumanCellMap localization ER membrane                #>  4 HumanCellMap localization Golgi apparatus            #>  5 HumanCellMap localization P-body enriched            #>  6 HumanCellMap localization STRIPAK complex            #>  7 HumanCellMap localization actin cytoskeleton         #>  8 HumanCellMap localization anaphase-promoting complex #>  9 HumanCellMap localization cell junction              #> 10 HumanCellMap localization centrosome                 #> # … with 52,667 more rows # # A tibble: 46,307 x 3 #    source           label    value #    <chr>            <chr>    <chr> #  1 connectomeDB2020 role     ligand #  2 connectomeDB2020 role     receptor #  3 connectomeDB2020 location ECM #  4 connectomeDB2020 location plasma membrane #  5 connectomeDB2020 location secreted #  6 KEGG-PC          pathway  Alanine, aspartate and glutamate metabolism #  7 KEGG-PC          pathway  Amino sugar and nucleotide sugar metabolism #  8 KEGG-PC          pathway  Aminoacyl-tRNA biosynthesis #  9 KEGG-PC          pathway  Arachidonic acid metabolism # 10 KEGG-PC          pathway  Arginine and proline metabolism"},{"path":"https://saezlab.github.io/OmnipathR/reference/biomart_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the Ensembl BioMart web service — biomart_query","title":"Query the Ensembl BioMart web service — biomart_query","text":"Query Ensembl BioMart web service","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/biomart_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the Ensembl BioMart web service — biomart_query","text":"","code":"biomart_query(   attrs = NULL,   filters = NULL,   transcript = FALSE,   peptide = FALSE,   gene = FALSE,   dataset = \"hsapiens_gene_ensembl\" )"},{"path":"https://saezlab.github.io/OmnipathR/reference/biomart_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the Ensembl BioMart web service — biomart_query","text":"attrs Character vector: one Ensembl attribute names. filters Character vector: one Ensembl filter names. transcript Logical: include Ensembl transcript IDs result. peptide Logical: include Ensembl peptide IDs result. gene Logical: include Ensembl gene IDs result. dataset Character: Ensembl dataset name.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/biomart_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the Ensembl BioMart web service — biomart_query","text":"Data frame query result","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/biomart_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the Ensembl BioMart web service — biomart_query","text":"","code":"cel_genes <- biomart_query(     attrs = c(\"external_gene_name\", \"start_position\", \"end_position\"),     gene = TRUE,     dataset = \"celegans_gene_ensembl\" ) cel_genes #> # A tibble: 46,934 × 4 #>    ensembl_gene_id external_gene_name start_position end_position #>    <chr>           <chr>                       <dbl>        <dbl> #>  1 WBGene00000001  aap-1                     5107843      5110183 #>  2 WBGene00000002  aat-1                     9599178      9601695 #>  3 WBGene00000003  aat-2                     9244402      9246360 #>  4 WBGene00000004  aat-3                     2552260      2557736 #>  5 WBGene00000005  aat-4                     6272529      6275721 #>  6 WBGene00000006  aat-5                     2571740      2576020 #>  7 WBGene00000007  aat-6                    11466842     11470663 #>  8 WBGene00000008  aat-7                     1386870      1391639 #>  9 WBGene00000009  aat-8                     3862033      3865044 #> 10 WBGene00000010  aat-9                    11388682     11396662 #> # … with 46,924 more rows # # A tibble: 46,934 × 4 #   ensembl_gene_id external_gene_name start_position end_position #   <chr>           <chr>                       <dbl>        <dbl> # 1 WBGene00000001  aap-1                     5107843      5110183 # 2 WBGene00000002  aat-1                     9599178      9601695 # 3 WBGene00000003  aat-2                     9244402      9246360 # 4 WBGene00000004  aat-3                     2552260      2557736 # 5 WBGene00000005  aat-4                     6272529      6275721 # # . with 46,924 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex1.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the BioPlex version 1.0 interaction dataset — bioplex1","title":"Downloads the BioPlex version 1.0 interaction dataset — bioplex1","text":"dataset contains ~24,000 interactions detected HEK293T cells using 2,594 baits. details https://bioplex.hms.harvard.edu/interactions.php.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the BioPlex version 1.0 interaction dataset — bioplex1","text":"","code":"bioplex1()"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the BioPlex version 1.0 interaction dataset — bioplex1","text":"Data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads the BioPlex version 1.0 interaction dataset — bioplex1","text":"","code":"bioplex_interactions <- bioplex1() nrow(bioplex_interactions) #> [1] 23744 # [1] 23744 colnames(bioplex_interactions) #> [1] \"GeneA\"            \"GeneB\"            \"UniprotA\"         \"UniprotB\"         #> [5] \"SymbolA\"          \"SymbolB\"          \"p_wrong\"          \"p_no_interaction\" #> [9] \"p_interaction\"    # [1] \"GeneA\"         \"GeneB\"        \"UniprotA\"   \"UniprotB\" # [5] \"SymbolA\"       \"SymbolB\"      \"p_wrong\"    \"p_no_interaction\" # [9] \"p_interaction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex2.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the BioPlex version 2.0 interaction dataset — bioplex2","title":"Downloads the BioPlex version 2.0 interaction dataset — bioplex2","text":"dataset contains ~56,000 interactions detected HEK293T cells using 5,891 baits. details https://bioplex.hms.harvard.edu/interactions.php","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the BioPlex version 2.0 interaction dataset — bioplex2","text":"","code":"bioplex2()"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the BioPlex version 2.0 interaction dataset — bioplex2","text":"Data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads the BioPlex version 2.0 interaction dataset — bioplex2","text":"","code":"bioplex_interactions <- bioplex2() nrow(bioplex_interactions) #> [1] 56553 # [1] 56553 colnames(bioplex_interactions) #> [1] \"GeneA\"            \"GeneB\"            \"UniprotA\"         \"UniprotB\"         #> [5] \"SymbolA\"          \"SymbolB\"          \"p_wrong\"          \"p_no_interaction\" #> [9] \"p_interaction\"    # [1] \"GeneA\"         \"GeneB\"        \"UniprotA\"   \"UniprotB\" # [5] \"SymbolA\"       \"SymbolB\"      \"p_wrong\"    \"p_no_interaction\" # [9] \"p_interaction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex3.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the BioPlex version 3.0 interaction dataset — bioplex3","title":"Downloads the BioPlex version 3.0 interaction dataset — bioplex3","text":"dataset contains ~120,000 interactions detected HEK293T cells using 10,128 baits. details https://bioplex.hms.harvard.edu/interactions.php.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the BioPlex version 3.0 interaction dataset — bioplex3","text":"","code":"bioplex3()"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the BioPlex version 3.0 interaction dataset — bioplex3","text":"Data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads the BioPlex version 3.0 interaction dataset — bioplex3","text":"","code":"bioplex_interactions <- bioplex3() nrow(bioplex_interactions) #> [1] 118162 # [1] 118162 colnames(bioplex_interactions) #> [1] \"GeneA\"            \"GeneB\"            \"UniprotA\"         \"UniprotB\"         #> [5] \"SymbolA\"          \"SymbolB\"          \"p_wrong\"          \"p_no_interaction\" #> [9] \"p_interaction\"    # [1] \"GeneA\"         \"GeneB\"        \"UniprotA\"   \"UniprotB\" # [5] \"SymbolA\"       \"SymbolB\"      \"p_wrong\"    \"p_no_interaction\" # [9] \"p_interaction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads all BioPlex interaction datasets — bioplex_all","title":"Downloads all BioPlex interaction datasets — bioplex_all","text":"BioPlex provides four interaction datasets: version 1.0, 2.0, 3.0 HCT116 version 1.0. function downloads , merges one data frame, removes duplicates (based unique pairs UniProt IDs) separates isoform numbers UniProt IDs. details https://bioplex.hms.harvard.edu/interactions.php.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads all BioPlex interaction datasets — bioplex_all","text":"","code":"bioplex_all(unique = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads all BioPlex interaction datasets — bioplex_all","text":"unique Logical. Collapse duplicate interactions single rows keep . case merging duplicate records maximum p value choosen record.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads all BioPlex interaction datasets — bioplex_all","text":"Data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads all BioPlex interaction datasets — bioplex_all","text":"","code":"bioplex_interactions <- bioplex_all() bioplex_interactions #> # A tibble: 195,538 × 11 #>    UniprotA Isofo…¹ Unipr…² Isofo…³ GeneA GeneB SymbolA SymbolB  p_wrong p_no_…⁴ #>    <chr>      <int> <chr>     <int> <dbl> <dbl> <chr>   <chr>      <dbl>   <dbl> #>  1 A0AV02         2 Q5K4L6       NA 84561 11000 SLC12A8 SLC27A3 2.11e- 8 1.76e-4 #>  2 A0AV02         2 Q8N5V2       NA 84561 25791 SLC12A8 NGEF    1.23e- 9 1.70e-5 #>  3 A0AV02         2 Q9H6S3       NA 84561 64787 SLC12A8 EPS8L2  1.89e-10 1.51e-6 #>  4 A0AV96         2 O00425        2 54502 10643 RBM47   IGF2BP3 5.57e-14 4.44e-2 #>  5 A0AV96         2 O00443       NA 54502  5286 RBM47   PIK3C2A 1.55e-12 8.26e-5 #>  6 A0AV96         2 O43426       NA 54502  8867 RBM47   SYNJ1   1.62e- 2 2.03e-8 #>  7 A0AV96         2 O75127       NA 54502 26024 RBM47   PTCD1   5.28e-12 2.78e-2 #>  8 A0AV96         2 O95208        2 54502 22905 RBM47   EPN2    1.34e- 9 1.10e-7 #>  9 A0AV96         2 O95900       NA 54502 26995 RBM47   TRUB2   1.41e-10 1.04e-2 #> 10 A0AV96         2 P07910        2 54502  3183 RBM47   HNRNPC  6.25e-13 1.02e-2 #> # … with 195,528 more rows, 1 more variable: p_interaction <dbl>, and #> #   abbreviated variable names ¹​IsoformA, ²​UniprotB, ³​IsoformB, #> #   ⁴​p_no_interaction # # A tibble: 195,538 x 11 #    UniprotA IsoformA UniprotB IsoformB GeneA GeneB SymbolA SymbolB #    <chr>       <int> <chr>       <int> <dbl> <dbl> <chr>   <chr> #  1 A0AV02          2 Q5K4L6         NA 84561 11000 SLC12A8 SLC27A3 #  2 A0AV02          2 Q8N5V2         NA 84561 25791 SLC12A8 NGEF #  3 A0AV02          2 Q9H6S3         NA 84561 64787 SLC12A8 EPS8L2 #  4 A0AV96          2 O00425          2 54502 10643 RBM47   IGF2BP3 #  5 A0AV96          2 O00443         NA 54502  5286 RBM47   PIK3C2A #  6 A0AV96          2 O43426         NA 54502  8867 RBM47   SYNJ1 #  7 A0AV96          2 O75127         NA 54502 26024 RBM47   PTCD1 #  8 A0AV96          2 O95208          2 54502 22905 RBM47   EPN2 #  9 A0AV96          2 O95900         NA 54502 26995 RBM47   TRUB2 # 10 A0AV96          2 P07910          2 54502  3183 RBM47   HNRNPC # # . with 195,528 more rows, and 3 more variables: p_wrong <dbl>, # #   p_no_interaction <dbl>, p_interaction <dbl>"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_hct116_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the BioPlex HCT116 version 1.0 interaction dataset — bioplex_hct116_1","title":"Downloads the BioPlex HCT116 version 1.0 interaction dataset — bioplex_hct116_1","text":"dataset contains ~71,000 interactions detected HCT116 cells using 5,522 baits. details https://bioplex.hms.harvard.edu/interactions.php.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_hct116_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the BioPlex HCT116 version 1.0 interaction dataset — bioplex_hct116_1","text":"","code":"bioplex_hct116_1()"},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_hct116_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the BioPlex HCT116 version 1.0 interaction dataset — bioplex_hct116_1","text":"Data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/bioplex_hct116_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads the BioPlex HCT116 version 1.0 interaction dataset — bioplex_hct116_1","text":"","code":"bioplex_interactions <- bioplex_hct116_1() nrow(bioplex_interactions) #> [1] 70966 # [1] 70966 colnames(bioplex_interactions) #> [1] \"GeneA\"            \"GeneB\"            \"UniprotA\"         \"UniprotB\"         #> [5] \"SymbolA\"          \"SymbolB\"          \"p_wrong\"          \"p_no_interaction\" #> [9] \"p_interaction\"    # [1] \"GeneA\"         \"GeneB\"        \"UniprotA\"   \"UniprotB\" # [5] \"SymbolA\"       \"SymbolB\"      \"p_wrong\"    \"p_no_interaction\" # [9] \"p_interaction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_es.html","id":null,"dir":"Reference","previous_headings":"","what":"BMA motifs from a sequence of edges — bma_motif_es","title":"BMA motifs from a sequence of edges — bma_motif_es","text":"motifs can added BMA canvas.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BMA motifs from a sequence of edges — bma_motif_es","text":"","code":"bma_motif_es(edge_seq, G, granularity = 2)"},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_es.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BMA motifs from a sequence of edges — bma_motif_es","text":"edge_seq igraph edge sequence. G igraph graph object. granularity Numeric: granularity value.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_es.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BMA motifs from a sequence of edges — bma_motif_es","text":"Character: BMA motifs single string.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_es.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BMA motifs from a sequence of edges — bma_motif_es","text":"","code":"interactions <- import_omnipath_interactions(resources = 'ARN') graph <- interaction_graph(interactions) motifs <- bma_motif_es(igraph::E(graph)[1], graph)"},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","title":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","text":"Intended parallel print_path_vs","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","text":"","code":"bma_motif_vs(node_seq, G)"},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_vs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","text":"node_seq igraph node sequence. G igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_vs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","text":"Character: BMA motifs single string.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/bma_motif_vs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints a BMA motif to the screen from a sequence of nodes, which can be\ncopy/pasted into the BMA canvas — bma_motif_vs","text":"","code":"interactions <- import_omnipath_interactions(resources = 'ARN') graph <- interaction_graph(interactions) bma_string <- bma_motif_vs(     igraph::all_shortest_paths(         graph,         from = 'ULK1',         to = 'ATG13'     )$res,     graph )"},{"path":"https://saezlab.github.io/OmnipathR/reference/common_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Common (English) names of organisms — common_name","title":"Common (English) names of organisms — common_name","text":"Common (English) names organisms","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/common_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common (English) names of organisms — common_name","text":"","code":"common_name(name)"},{"path":"https://saezlab.github.io/OmnipathR/reference/common_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common (English) names of organisms — common_name","text":"name Vector kind organism name identifier, can also mixed type.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/common_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common (English) names of organisms — common_name","text":"Character vector common (English) taxon names, NA name     input found.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/common_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Common (English) names of organisms — common_name","text":"","code":"common_name(c(10090, \"cjacchus\", \"Vicugna pacos\")) #> [1] \"Mouse\"                     \"White-tufted-ear marmoset\" #> [3] \"Alpaca\"                    # [1] \"Mouse\" \"White-tufted-ear marmoset\" \"Alpaca\""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the ConsensusPathDB network — consensuspathdb_download","title":"Retrieves the ConsensusPathDB network — consensuspathdb_download","text":"Compiles table binary interactions ConsensusPathDB (http://cpdb.molgen.mpg.de/) translates UniProtKB ACs Gene Symbols.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the ConsensusPathDB network — consensuspathdb_download","text":"","code":"consensuspathdb_download(complex_max_size = 4, min_score = 0.9)"},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the ConsensusPathDB network — consensuspathdb_download","text":"complex_max_size Numeric: expand complexes higher number elements . ConsensusPathDB contain conventional interactions lists participants, might members complexes. records include dozens participants expanding binary interactions result thousands, sometimes hundreds thousands interactions one single record. end, process consumes >10GB memory results rather unusable data, hence recommended limit complex sizes low number. min_score Numeric: record ConsensusPathDB comes confidence score, expressing amount evidences. default value, minimum score 0.9 retains approx. top 30 percent interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the ConsensusPathDB network — consensuspathdb_download","text":"Data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the ConsensusPathDB network — consensuspathdb_download","text":"","code":"if (FALSE) { cpdb_data <- consensuspathdb_download(     complex_max_size = 1,     min_score = .99 ) nrow(cpdb_data) # [1] 252302 colnames(cpdb_data) # [1] \"databases\"  \"references\" \"uniprot_a\"    \"confidence\"   \"record_id\" # [6] \"uniprot_b\"  \"in_complex\" \"genesymbol_a\" \"genesymbol_b\" cpdb_data # # A tibble: 252,302 x 9 #    databases references uniprot_a confidence record_id uniprot_b in_com #    <chr>     <chr>      <chr>          <dbl>     <int> <chr>     <lgl> #  1 Reactome  NA         SUMF2_HU.      1             1 SUMF1_HU. TRUE #  2 Reactome  NA         SUMF1_HU.      1             1 SUMF2_HU. TRUE #  3 DIP,Reac. 22210847,. STIM1_HU.      0.998         2 TRPC1_HU. TRUE #  4 DIP,Reac. 22210847,. TRPC1_HU.      0.998         2 STIM1_HU. TRUE # # . with 252,292 more rows, and 2 more variables: genesymbol_a <chr>, # #   genesymbol_b <chr }"},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_raw_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads interaction data from ConsensusPathDB — consensuspathdb_raw_table","title":"Downloads interaction data from ConsensusPathDB — consensuspathdb_raw_table","text":"Downloads interaction data ConsensusPathDB","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_raw_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads interaction data from ConsensusPathDB — consensuspathdb_raw_table","text":"","code":"consensuspathdb_raw_table()"},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_raw_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads interaction data from ConsensusPathDB — consensuspathdb_raw_table","text":"Data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/consensuspathdb_raw_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads interaction data from ConsensusPathDB — consensuspathdb_raw_table","text":"","code":"cpdb_raw <- consensuspathdb_raw_table()"},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"OmniPath intercell database annotates individual proteins complexes, combine annotations network interactions client side, using import_intercell_network. architecture database complex, aiming cover broad range knowledge various levels details confidence. can use intercell_consensus_filter filter_intercell_network functions automated, data driven quality filtering, order enrich cell-cell communication network higher confidence interactions. However, many users, simple combination established, expert curated ligand-receptor resources, provided function, fits better purpose.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"","code":"curated_ligand_receptor_interactions(   curated_resources = c(\"Guide2Pharma\", \"HPMR\", \"ICELLNET\", \"Kirouac2010\", \"CellTalkDB\",     \"CellChatDB\", \"connectomeDB2020\"),   cellphonedb = TRUE,   cellinker = TRUE,   talklr = TRUE,   signalink = TRUE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"curated_resources Character vector resource names considered expert curated. can include post-translational network resource , include non ligand-receptor non curated resources, result fulfill original intention function. cellphonedb Logical: include curated interactions CellPhoneDB (whole CellPhoneDB subset ). cellinker Logical: include curated interactions Cellinker (whole Cellinker subset ). talklr Logical: include curated interactions talklr (whole talklr subset ). signalink Logical: include ligand-receptor interactions SignaLink. expert curated. ... Passed import_post_translational_interactions: parameters interaction data. contain `resources` argument interfere downstream calls.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"data frame similar interactions (network) data frames,     source target partners ligand     receptor, respectively.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"resources mixture curated bulk imported interactions, sometimes trivial separate , take care . function use intercell database OmniPath, retrieves filters handful network resources. returned data frame layout interactions (network) data frames, source target partners implicitly correspond ligand receptor. data frame shows resources references interactions, interaction supported least one ligand-receptor resource supposed based expert curation ligand-receptor context.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligand_receptor_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Curated ligand-receptor interactions — curated_ligand_receptor_interactions","text":"","code":"lr <- curated_ligand_receptor_interactions() lr #> # A tibble: 5,141 × 15 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 P01588 P19235 EPO     EPOR          1       1       0       1       1       0 #>  2 Q9H2A7 O00574 CXCL16  CXCR6         1       1       0       1       1       0 #>  3 P21583 P10721 KITLG   KIT           1       1       0       1       1       0 #>  4 Q07325 P49682 CXCL9   CXCR3         1       1       0       1       1       0 #>  5 P13501 P51681 CCL5    CCR5          1       1       0       1       1       0 #>  6 P80075 P51681 CCL8    CCR5          1       1       0       1       1       0 #>  7 P13236 P51681 CCL4    CCR5          1       1       0       1       1       0 #>  8 P05231 P40189 IL6     IL6ST         1       1       0       1       1       0 #>  9 P02778 P49682 CXCL10  CXCR3         1       1       0       1       1       0 #> 10 P01148 P30968 GNRH1   GNRHR         1       1       0       1       1       0 #> # … with 5,131 more rows, 5 more variables: sources <chr>, references <chr>, #> #   curation_effort <dbl>, n_references <dbl>, n_resources <int>, and #> #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, #> #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, #> #   ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"Statistics literature curated ligand-receptor interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"","code":"curated_ligrec_stats(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"... Passed curated_ligand_receptor_interactions, determines set curated L-R interactions compared individual resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"data frame estimated counts curated ligand-receptor     interactions L-R resource.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"data frame contains total number interactions, number interactions overlap set curated interactions (curated_overlap), number interactions literature references given resource (literature) number interactions curated given resource (curated_self). latter defined according best knowledge, many cases possible distinguish curated interactions). numbers also presented percent total. Importantly, consider interactions curated curated cell-cell communication context.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/curated_ligrec_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistics about literature curated ligand-receptor interactions — curated_ligrec_stats","text":"","code":"clr <- curated_ligrec_stats() clr #> # A tibble: 19 × 8 #>    resource         total curated_over…¹ liter…² curat…³ curat…⁴ liter…⁵ curat…⁶ #>    <chr>            <int>          <int>   <int>   <int>   <dbl>   <dbl>   <dbl> #>  1 CellPhoneDB       1475           1254     386     486    85.0    26.2    32.9 #>  2 Cellinker         3765           2315    3765     973    61.5   100      25.8 #>  3 CellTalkDB        3473           3421    3160    3160    98.5    91.0    91.0 #>  4 CellChatDB        1894           1210     569     569    63.9    30.0    30.0 #>  5 CellCall           999            779       0       0    78.0     0       0   #>  6 connectomeDB2020  2313           2313    2311    2311   100      99.9    99.9 #>  7 Guide2Pharma       670            588     295     295    87.8    44.0    44.0 #>  8 Baccin2019        1694           1414    1393    1393    83.5    82.2    82.2 #>  9 Kirouac2010        152            125       0       0    82.2     0       0   #> 10 Ramilowski2015    1946           1903     274     274    97.8    14.1    14.1 #> 11 scConnect          479            439     291     291    91.6    60.8    60.8 #> 12 talklr            2485           2364     274     273    95.1    11.0    11.0 #> 13 ICELLNET           738            736     735     735    99.7    99.6    99.6 #> 14 EMBRACE           1702           1615       0       0    94.9     0       0   #> 15 LRdb              3310           3136    2052    2052    94.7    62.0    62.0 #> 16 iTALK             2639           2491       0       0    94.4     0       0   #> 17 SignaLink         1797            242    1797     217    13.5   100      12.1 #> 18 HPMR               595            567     550     550    95.3    92.4    92.4 #> 19 Wojtowicz2020      438            163       0       0    37.2     0       0   #> # … with abbreviated variable names ¹​curated_overlap, ²​literature, #> #   ³​curated_self, ⁴​curated_overlap_pct, ⁵​literature_pct, ⁶​curated_self_pct"},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":null,"dir":"Reference","previous_headings":"","what":"All descendants in the ontology tree — descendants","title":"All descendants in the ontology tree — descendants","text":"Starting selected nodes, recursively walks ontology tree reaches leaf nodes. Collects visited nodes, descendants (children) starting nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All descendants in the ontology tree — descendants","text":"","code":"descendants(   terms,   db_key = \"go_basic\",   ids = TRUE,   relations = c(\"is_a\", \"part_of\", \"occurs_in\", \"regulates\", \"positively_regulates\",     \"negatively_regulates\") )"},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All descendants in the ontology tree — descendants","text":"terms Character vector ontology term IDs names. mixture IDs names can provided. db_key Character: key identify ontology database. available keys see omnipath_show_db. ids Logical: whether return IDs term names. relations Character vector ontology relation types. relations used.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All descendants in the ontology tree — descendants","text":"Character vector ontology IDs. input terms     leaves NULL returned. starting nodes included     result unless descendants starting     nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All descendants in the ontology tree — descendants","text":"Note: function relies database manager, first call might take long database load process. Subsequent calls within short period faster. See get_ontology_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/descendants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All descendants in the ontology tree — descendants","text":"","code":"descendants('GO:0005035', ids = FALSE) #> [1] \"tumor necrosis factor receptor activity\" #> [2] \"death receptor activity\"                 #> [3] \"TRAIL receptor activity\"                 #> [4] \"TNFSF11 receptor activity\"               # [1] \"tumor necrosis factor-activated receptor activity\" # [2] \"TRAIL receptor activity\" # [3] \"TNFSF11 receptor activity\""},{"path":"https://saezlab.github.io/OmnipathR/reference/dot-omnipath_options_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Default values for the package options — .omnipath_options_defaults","title":"Default values for the package options — .omnipath_options_defaults","text":"options describe default settings OmnipathR need pass parameters function call. Currently option useful public web service omnipathdb.org ``omnipath.license``. -profit user set ``'commercial'`` make sure data download OmniPath legally allowed commercial use. Otherwise just leave : ``'academic'``. use omnipathdb.org within organization deployed pypath server want share data whith limited availability outside users, may want use password. can use ``omnipath.password`` option. Also want R package work another pypath server instead omnipathdb.org, can change option ``omnipath.url``.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/dot-omnipath_options_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default values for the package options — .omnipath_options_defaults","text":"","code":".omnipath_options_defaults"},{"path":"https://saezlab.github.io/OmnipathR/reference/dot-omnipath_options_defaults.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default values for the package options — .omnipath_options_defaults","text":"object class list length 16.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl dataset name from organism — ensembl_dataset","title":"Ensembl dataset name from organism — ensembl_dataset","text":"Ensembl dataset name organism","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl dataset name from organism — ensembl_dataset","text":"","code":"ensembl_dataset(organism)"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensembl dataset name from organism — ensembl_dataset","text":"organism Character integer: organism (taxon) name identifier. Ensembl dataset name provided","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensembl dataset name from organism — ensembl_dataset","text":"Character: name ensembl dataset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl dataset name from organism — ensembl_dataset","text":"","code":"ensembl_dataset(10090) #> [1] \"mmusculus_gene_ensembl\" # [1] \"mmusculus_gene_ensembl\""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_homology.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthologous gene pairs from Ensembl — ensembl_homology","title":"Orthologous gene pairs from Ensembl — ensembl_homology","text":"Orthologous gene pairs Ensembl","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_homology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthologous gene pairs from Ensembl — ensembl_homology","text":"","code":"ensembl_homology(   organism_a = 9606,   organism_b = 10090,   attrs_a = NULL,   attrs_b = NULL,   colrename = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_homology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthologous gene pairs from Ensembl — ensembl_homology","text":"organism_a Character integer: organism name identifier left side organism. query Ensembl dataset organism add orthologues organism . Ideally organism translate . organism_b Character integer: organism name identifier right side organism. add orthology information organism gene records left side organism. attrs_a attributes organism_a genes. simply added attributes list. attrs_b attributes organism_b genes (orthologues). available attributes : \"associated_gene_name\", \"chromosome\", \"chrom_start\", \"chrom_end\",  \"wga_coverage\", \"goc_score\", \"perc_id_r1\", \"perc_id\", \"subtype\". Attributes included default: \"ensembl_gene\", \"ensembl_peptide\", \"canonical_transcript_protein\", \"orthology_confidence\" \"orthology_type\". colrename Logical: replace prefixes organism_b attribute column names, returned table always column names, matter organism. E.g. mouse columns prefix \"mmusculus_homolog_\", option changes \"b_\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_homology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orthologous gene pairs from Ensembl — ensembl_homology","text":"records orthology information returned.     order columns following: defaults organism_a, extra     attributes organism_b, defaults organism_b, extra attributes     organism_b.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_homology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthologous gene pairs from Ensembl — ensembl_homology","text":"","code":"if (FALSE) { sffish <- ensembl_homology(     organism_b = 'Siamese fighting fish',     attrs_a = 'external_gene_name',     attrs_b = 'associated_gene_name' ) sffish # # A tibble: 175,608 × 10 #    ensembl_gene_id ensembl_transcript_id ensembl_peptide. external_gene_n. #    <chr>           <chr>                 <chr>            <chr> #  1 ENSG00000277196 ENST00000621424       ENSP00000481127  NA #  2 ENSG00000277196 ENST00000615165       ENSP00000482462  NA #  3 ENSG00000278817 ENST00000613204       ENSP00000482514  NA #  4 ENSG00000274847 ENST00000400754       ENSP00000478910  MAFIP #  5 ENSG00000273748 ENST00000612919       ENSP00000479921  NA # # . with 175,603 more rows, and 6 more variables: # #   b_ensembl_peptide <chr>, b_ensembl_gene <chr>, # #   b_orthology_type <chr>, b_orthology_confidence <dbl>, # #   b_canonical_transcript_protein <chr>, b_associated_gene_name <chr> # }"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifier translation table from Ensembl — ensembl_id_mapping_table","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"Identifier translation table Ensembl","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"","code":"ensembl_id_mapping_table(to, from = \"uniprot\", organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"Character symbol: target ID type. See Details possible values. Character symbol: source ID type. See Details possible values. organism Character integer: NCBI Taxonomy ID name organism (default 9606 human).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"data frame (tibble) columns `` ``.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"arguments can provided either character symbol (NSE). possible values either Ensembl attribute names synonyms listed translate_ids.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_mapping_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifier translation table from Ensembl — ensembl_id_mapping_table","text":"","code":"ensp_up <- ensembl_id_mapping_table(\"ensp\") ensp_up #> # A tibble: 120,732 × 2 #>    From   To              #>    <chr>  <chr>           #>  1 P03886 ENSP00000354687 #>  2 P03891 ENSP00000355046 #>  3 P00395 ENSP00000354499 #>  4 P00403 ENSP00000354876 #>  5 P03928 ENSP00000355265 #>  6 P00846 ENSP00000354632 #>  7 P00414 ENSP00000354982 #>  8 P03897 ENSP00000355206 #>  9 P03901 ENSP00000354728 #> 10 P03905 ENSP00000354961 #> # … with 120,722 more rows # # A tibble: 119,129 × 2 #    From   To #    <chr>  <chr> #  1 P03886 ENSP00000354687 #  2 P03891 ENSP00000355046 #  3 P00395 ENSP00000354499 #  4 P00403 ENSP00000354876 #  5 P03928 ENSP00000355265 # # . with 119,124 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl identifier type label — ensembl_id_type","title":"Ensembl identifier type label — ensembl_id_type","text":"Ensembl identifier type label","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl identifier type label — ensembl_id_type","text":"","code":"ensembl_id_type(label)"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensembl identifier type label — ensembl_id_type","text":"label Character: ID type label, shown table translate_ids","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensembl identifier type label — ensembl_id_type","text":"Character: Ensembl specific ID type label, input     unchanged translated (still might valid     identifier name). labels valid Ensembl attribute     names, directly usable Ensembl queries.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_id_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl identifier type label — ensembl_id_type","text":"","code":"ensembl_id_type(\"uniprot\") #> [1] \"uniprotswissprot\" # [1] \"uniprotswissprot\""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl identifiers of organisms — ensembl_name","title":"Ensembl identifiers of organisms — ensembl_name","text":"Ensembl identifiers organisms","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl identifiers of organisms — ensembl_name","text":"","code":"ensembl_name(name)"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensembl identifiers of organisms — ensembl_name","text":"name Vector kind organism name identifier, can also mixed type.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensembl identifiers of organisms — ensembl_name","text":"Character vector Ensembl taxon names, NA name     input found.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl identifiers of organisms — ensembl_name","text":"","code":"ensembl_name(c(9606, \"cat\", \"dog\")) #> [1] \"hsapiens\"     \"fcatus\"       \"clfamiliaris\" # [1] \"hsapiens\" \"fcatus\" \"clfamiliaris\" ensembl_name(c(\"human\", \"kitten\", \"cow\")) #> [1] \"hsapiens\" NA         \"btaurus\"  # [1] \"hsapiens\" NA  \"btaurus\""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms.html","id":null,"dir":"Reference","previous_headings":"","what":"Organism names and identifiers from Ensembl — ensembl_organisms","title":"Organism names and identifiers from Ensembl — ensembl_organisms","text":"table various taxon names identifiers: English common names, latin (scientific) names, Ensembl organism IDs NCBI taxonomy IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organism names and identifiers from Ensembl — ensembl_organisms","text":"","code":"ensembl_organisms()"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organism names and identifiers from Ensembl — ensembl_organisms","text":"data frame mentioned columns.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Organism names and identifiers from Ensembl — ensembl_organisms","text":"","code":"ens_org <- ensembl_organisms() ens_org #> # A tibble: 314 × 4 #>    common_name                    latin_name                 ncbi_tax_id ensem…¹ #>    <chr>                          <chr>                            <int> <chr>   #>  1 Abingdon island giant tortoise Chelonoidis abingdonii          106734 cabing… #>  2 African ostrich                Struthio camelus australis      441894 scaust… #>  3 Agassiz's desert tortoise      Gopherus agassizii               38772 gagass… #>  4 Algerian mouse                 Mus spretus                      10096 mspret… #>  5 Alpaca                         Vicugna pacos                    30538 vpacos  #>  6 Alpine marmot                  Marmota marmota marmota           9994 mmmarm… #>  7 Amazon molly                   Poecilia formosa                 48698 pformo… #>  8 American beaver                Castor canadensis                51338 ccanad… #>  9 American bison                 Bison bison bison                43346 bbbison #> 10 American black bear            Ursus americanus                  9643 uameri… #> # … with 304 more rows, and abbreviated variable name ¹​ensembl_id"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Ensembl organisms — ensembl_organisms_raw","title":"Table of Ensembl organisms — ensembl_organisms_raw","text":"table various taxon IDs metadata related Ensembl database contents, shown https://www.ensembl.org/info//species.html. \"Taxon ID\" column contains NCBI Taxonomy identifiers.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Ensembl organisms — ensembl_organisms_raw","text":"","code":"ensembl_organisms_raw()"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of Ensembl organisms — ensembl_organisms_raw","text":"table described data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_organisms_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of Ensembl organisms — ensembl_organisms_raw","text":"","code":"ens_org <- ensembl_organisms_raw() ens_org #> # A tibble: 314 × 8 #>    `Common name`         Scien…¹ Taxon…² Ensem…³ Acces…⁴ Geneb…⁵ Varia…⁶ Regul…⁷ #>    <chr>                 <chr>     <int> <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 Abingdon island gian… Chelon…  106734 ASM359… GCA_00… Full g… -       -       #>  2 African ostrich       Struth…  441894 ASM698… GCA_00… Full g… -       -       #>  3 Agassiz's desert tor… Gopher…   38772 ASM289… GCA_00… Full g… -       -       #>  4 Algerian mouse        Mus sp…   10096 SPRET_… GCA_00… Extern… -       Y       #>  5 Alpaca                Vicugn…   30538 vicPac1 -       A gene… -       -       #>  6 Alpine marmot         Marmot…    9994 marMar… GCA_00… Full g… -       -       #>  7 Amazon molly          Poecil…   48698 Poecil… GCA_00… Full g… -       -       #>  8 American beaver       Castor…   51338 C.can_… GCA_00… Full g… -       -       #>  9 American bison        Bison …   43346 Bison_… GCA_00… Full g… -       -       #> 10 American black bear   Ursus …    9643 ASM334… GCA_00… Full g… -       -       #> # … with 304 more rows, and abbreviated variable names ¹​`Scientific name`, #> #   ²​`Taxon ID`, ³​`Ensembl Assembly`, ⁴​Accession, ⁵​`Genebuild Method`, #> #   ⁶​`Variation database`, ⁷​`Regulation database`"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_orthology.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthologous gene pairs from Ensembl — ensembl_orthology","title":"Orthologous gene pairs from Ensembl — ensembl_orthology","text":"Orthologous gene pairs Ensembl","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_orthology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthologous gene pairs from Ensembl — ensembl_orthology","text":"","code":"ensembl_orthology(   organism_a = 9606,   organism_b = 10090,   attrs_a = NULL,   attrs_b = NULL,   colrename = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_orthology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthologous gene pairs from Ensembl — ensembl_orthology","text":"organism_a Character integer: organism name identifier left side organism. query Ensembl dataset organism add orthologues organism . Ideally organism translate . organism_b Character integer: organism name identifier right side organism. add orthology information organism gene records left side organism. attrs_a attributes organism_a genes. simply added attributes list. attrs_b attributes organism_b genes (orthologues). available attributes : \"associated_gene_name\", \"chromosome\", \"chrom_start\", \"chrom_end\",  \"wga_coverage\", \"goc_score\", \"perc_id_r1\", \"perc_id\", \"subtype\". Attributes included default: \"ensembl_gene\", \"ensembl_peptide\", \"canonical_transcript_protein\", \"orthology_confidence\" \"orthology_type\". colrename Logical: replace prefixes organism_b attribute column names, returned table always column names, matter organism. E.g. mouse columns prefix \"mmusculus_homolog_\", option changes \"b_\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_orthology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orthologous gene pairs from Ensembl — ensembl_orthology","text":"records orthology information returned.     order columns following: defaults organism_a, extra     attributes organism_b, defaults organism_b, extra attributes     organism_b.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ensembl_orthology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthologous gene pairs from Ensembl — ensembl_orthology","text":"","code":"if (FALSE) { sffish <- ensembl_orthology(     organism_b = 'Siamese fighting fish',     attrs_a = 'external_gene_name',     attrs_b = 'associated_gene_name' ) sffish # # A tibble: 175,608 × 10 #    ensembl_gene_id ensembl_transcript_id ensembl_peptide. external_gene_n. #    <chr>           <chr>                 <chr>            <chr> #  1 ENSG00000277196 ENST00000621424       ENSP00000481127  NA #  2 ENSG00000277196 ENST00000615165       ENSP00000482462  NA #  3 ENSG00000278817 ENST00000613204       ENSP00000482514  NA #  4 ENSG00000274847 ENST00000400754       ENSP00000478910  MAFIP #  5 ENSG00000273748 ENST00000612919       ENSP00000479921  NA # # . with 175,603 more rows, and 6 more variables: # #   b_ensembl_peptide <chr>, b_ensembl_gene <chr>, # #   b_orthology_type <chr>, b_orthology_confidence <dbl>, # #   b_canonical_transcript_protein <chr>, b_associated_gene_name <chr> # }"},{"path":"https://saezlab.github.io/OmnipathR/reference/enzsub_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Enzyme-substrate graph — enzsub_graph","title":"Enzyme-substrate graph — enzsub_graph","text":"Transforms data frame enzyme-substrate relationships (obtained import_omnipath_enzsub) igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/enzsub_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enzyme-substrate graph — enzsub_graph","text":"","code":"enzsub_graph(enzsub)"},{"path":"https://saezlab.github.io/OmnipathR/reference/enzsub_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enzyme-substrate graph — enzsub_graph","text":"enzsub Data frame created import_omnipath_enzsub","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/enzsub_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enzyme-substrate graph — enzsub_graph","text":"igraph directed graph object.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/enzsub_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enzyme-substrate graph — enzsub_graph","text":"","code":"enzsub <- import_omnipath_enzsub(resources = c('PhosphoSite', 'SIGNOR')) enzsub_g <- enzsub_graph(enzsub = enzsub)"},{"path":"https://saezlab.github.io/OmnipathR/reference/evex_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from the EVEX database — evex_download","title":"Interactions from the EVEX database — evex_download","text":"Downloads interactions EVEX, versatile text mining resource (http://evexdb.org). Translates Entrez Gene IDs Gene Symbols combines interactions references single data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/evex_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from the EVEX database — evex_download","text":"","code":"evex_download(     min_confidence = NULL,     remove_negatives = TRUE,     top_confidence = NULL )"},{"path":"https://saezlab.github.io/OmnipathR/reference/evex_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions from the EVEX database — evex_download","text":"min_confidence Numeric: threshold confidence scores. EVEX confidence scores span roughly -3 3. providing numeric value range lower confidence interactions can removed. NULL filtering performed. remove_negatives Logical: remove records \"negation\" attribute set. top_confidence Confidence cutoff quantile (number 0 1). NULL filtering performed.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/evex_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from the EVEX database — evex_download","text":"Data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/evex_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from the EVEX database — evex_download","text":"","code":"evex_interactions <- evex_download() evex_interactions #> # A tibble: 368,297 × 13 #>    general_eve…¹ sourc…² targe…³ confi…⁴ negat…⁵ specu…⁶ coars…⁷ coars…⁸ refin…⁹ #>            <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>   <chr>   #>  1            98 8651    6774     -1.45        0       0 Regula… Unspec… Regula… #>  2           100 8431    6774     -1.45        0       0 Regula… Unspec… Regula… #>  3           205 6261    6263      0.370       0       0 Binding Neutral Binding #>  4           435 1044    1045     -1.09        0       0 Regula… Positi… Regula… #>  5           440 1045    1044     -1.09        0       0 Regula… Positi… Regula… #>  6           507 3596    952      -1.67        0       0 Regula… Unspec… Regula… #>  7           559 5592    5329     -0.326       0       0 Regula… Unspec… Regula… #>  8           575 85004   2255     -1.31        0       0 Regula… Negati… Regula… #>  9           657 2321    7422     -1.32        0       0 Regula… Unspec… Regula… #> 10           664 2321    7422     -0.544       0       1 Regula… Unspec… Regula… #> # … with 368,287 more rows, 4 more variables: refined_polarity <chr>, #> #   source_genesymbol <chr>, target_genesymbol <chr>, references <chr>, and #> #   abbreviated variable names ¹​general_event_id, ²​source_entrezgene_id, #> #   ³​target_entrezgene_id, ⁴​confidence, ⁵​negation, ⁶​speculation, ⁷​coarse_type, #> #   ⁸​coarse_polarity, ⁹​refined_type # # A tibble: 368,297 x 13 #   general_event_id source_entrezge. target_entrezge. confidence negation #               <dbl> <chr>            <chr>                 <dbl>    <dbl> # 1               98 8651             6774                 -1.45         0 # 2              100 8431             6774                 -1.45         0 # 3              205 6261             6263                  0.370        0 # 4              435 1044             1045                 -1.09         0 # . with 368,287 more rows, and 8 more variables: speculation <dbl>, #   coarse_type <chr>, coarse_polarity <chr>, refined_type <chr>, #   refined_polarity <chr>, source_genesymbol <chr>, #   target_genesymbol <chr>, references <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible values of an extra attribute — extra_attr_values","title":"Possible values of an extra attribute — extra_attr_values","text":"Extracts unique values extra attribute occuring data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible values of an extra attribute — extra_attr_values","text":"","code":"extra_attr_values(data, key)"},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Possible values of an extra attribute — extra_attr_values","text":"data interaction data frame extra_attrs column. key name extra attribute.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possible values of an extra attribute — extra_attr_values","text":"vector, likely character, unique values     extra attribute occuring data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Possible values of an extra attribute — extra_attr_values","text":"Note, end unlist result, means works well attributes atomic vectors gives useful result attribute values complex objects. time writing , complex extra attribute exist OmniPath.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attr_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possible values of an extra attribute — extra_attr_values","text":"","code":"op <- import_omnipath_interactions(fields = 'extra_attrs') extra_attr_values(op, SIGNOR_mechanism) #>  [1] \"phosphorylation\"                    \"binding\"                            #>  [3] \"dephosphorylation\"                  \"Phosphorylation\"                    #>  [5] \"ubiquitination\"                     \"N/A\"                                #>  [7] \"Physical Interaction\"               \"cleavage\"                           #>  [9] \"Proteolytic Processing\"             \"deubiquitination\"                   #> [11] \"Deubiqitination\"                    \"relocalization\"                     #> [13] \"Ubiquitination\"                     \"Dephosphorylation\"                  #> [15] \"Other\"                              \"guanine nucleotide exchange factor\" #> [17] \"Transcription Regulation\"           \"gtpase-activating protein\"          #> [19] \"Indirect\"                           \"\"                                   #> [21] \"Sumoylation\"                        \"sumoylation\"                        #> [23] \"palmitoylation\"                     \"demethylation\"                      #> [25] \"Demethylation\"                      \"mRNA stability\"                     #> [27] \"methylation\"                        \"Methylation\"                        #> [29] \"hydroxylation\"                      \"Acetylation\"                        #> [31] \"acetylation\"                        \"deacetylation\"                      #> [33] \"Deacetylation\"                      \"Translational Regulation\"           #> [35] \"Protein Degradation\"                \"s-nitrosylation\"                    #> [37] \"phosphomotif_binding\"               \"chemical activation\"                #> [39] \"Proteolytic Cleavage\"               \"glycosylation\"                      #> [41] \"post transcriptional regulation\"    \"catalytic activity\"                 #> [43] \"neddylation\"                        \"Neddylation\"                        #> [45] \"tyrosination\"                       \"lipidation\"                         #> [47] \"ADP-ribosylation\"                   \"desumoylation\"                      #> [49] \"isomerization\"                      \"post translational modification\"    #> [51] \"carboxylation\"                      \"Alkylation\"                         #> [53] \"chemical inhibition\"                \"oxidation\"                          #> [55] \"translation regulation\"             \"Carboxylation\"                      #> [57] \"destabilization\""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra attribute names in an interaction data frame — extra_attrs","title":"Extra attribute names in an interaction data frame — extra_attrs","text":"Interaction data frames might `extra_attrs` column field requested query passing `fields = 'extra_attrs' argument. column contains resource specific attributes interactions. names attributes consist name resource name attribute, separated underscore. function returns names extra attributes available provided data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extra attribute names in an interaction data frame — extra_attrs","text":"","code":"extra_attrs(data)"},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extra attribute names in an interaction data frame — extra_attrs","text":"data interaction data frame, provided import...interactions functions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extra attribute names in an interaction data frame — extra_attrs","text":"Character: names extra attributes data frame.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extra attribute names in an interaction data frame — extra_attrs","text":"","code":"i <- import_omnipath_interactions(fields = 'extra_attrs') extra_attrs(i) #>  [1] \"TRIP_method\"                \"SIGNOR_mechanism\"           #>  [3] \"PhosphoSite_noref_evidence\" \"PhosphoPoint_category\"      #>  [5] \"PhosphoSite_evidence\"       \"HPRD-phos_mechanism\"        #>  [7] \"Li2012_mechanism\"           \"Li2012_route\"               #>  [9] \"SPIKE_effect\"               \"SPIKE_mechanism\"            #> [11] \"CA1_effect\"                 \"CA1_type\"                   #> [13] \"Macrophage_type\"            \"Macrophage_location\"        #> [15] \"ACSN_effect\"                \"Cellinker_type\"             #> [17] \"CellChatDB_category\"        \"talklr_putative\"            #> [19] \"CellPhoneDB_type\"           \"Ramilowski2015_source\"      #> [21] \"ARN_effect\"                 \"ARN_is_direct\"              #> [23] \"ARN_is_directed\"            \"NRF2ome_effect\"             #> [25] \"NRF2ome_is_direct\"          \"NRF2ome_is_directed\""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs_to_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"New columns from extra attributes — extra_attrs_to_cols","title":"New columns from extra attributes — extra_attrs_to_cols","text":"New columns extra attributes","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs_to_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New columns from extra attributes — extra_attrs_to_cols","text":"","code":"extra_attrs_to_cols(data, ..., flatten = FALSE, keep_empty = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs_to_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New columns from extra attributes — extra_attrs_to_cols","text":"data interaction data frame. ... names extra attributes; NSE supported. Custom column names can provided argument names. flatten Logical: unnest list column even records multiple values attributes; yield multiple records resulted data frame. keep_empty Logical: `flatten` `TRUE`, shall keep records attribute?","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs_to_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New columns from extra attributes — extra_attrs_to_cols","text":"Data frame new column created; new column list     type one interaction might multiple values attribute,     character type ","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/extra_attrs_to_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New columns from extra attributes — extra_attrs_to_cols","text":"","code":"i <- import_omnipath_interactions(fields = 'extra_attrs') extra_attrs_to_cols(i, Cellinker_type, Macrophage_type) #> # A tibble: 40,014 × 18 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 P0DP25 P48995 CALM3   TRPC1         1       0       1       1       0       1 #>  2 P0DP23 P48995 CALM1   TRPC1         1       0       1       1       0       1 #>  3 P0DP24 P48995 CALM2   TRPC1         1       0       1       1       0       1 #>  4 Q03135 P48995 CAV1    TRPC1         1       1       0       1       1       0 #>  5 P14416 P48995 DRD2    TRPC1         1       1       0       1       1       0 #>  6 Q99750 P48995 MDFI    TRPC1         1       0       1       1       0       1 #>  7 Q14571 P48995 ITPR2   TRPC1         1       1       0       1       1       0 #>  8 P29966 P48995 MARCKS  TRPC1         1       0       1       1       0       1 #>  9 Q13255 P48995 GRM1    TRPC1         1       1       0       1       1       0 #> 10 Q13586 P48995 STIM1   TRPC1         1       1       0       1       1       0 #> # … with 40,004 more rows, 8 more variables: extra_attrs <list>, sources <chr>, #> #   references <chr>, curation_effort <dbl>, n_references <dbl>, #> #   n_resources <int>, Cellinker_type <chr>, Macrophage_type <list>, and #> #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, #> #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, #> #   ⁷​consensus_stimulation, ⁸​consensus_inhibition extra_attrs_to_cols(     i,     Cellinker_type,     Macrophage_type,     flatten = TRUE,     keep_empty = FALSE ) #> # A tibble: 4,202 × 18 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Q16539 P49137 MAPK14  MAPKAP…       1       1       0       1       1       0 #>  2 Q16539 P49137 MAPK14  MAPKAP…       1       1       0       1       1       0 #>  3 O60674 P19235 JAK2    EPOR          1       1       0       1       1       0 #>  4 Q9Y219 P46531 JAG2    NOTCH1        1       1       1       1       1       0 #>  5 O00548 P46531 DLL1    NOTCH1        1       1       0       1       1       0 #>  6 O15111 P19838 CHUK    NFKB1         1       1       1       1       0       1 #>  7 P05019 P08069 IGF1    IGF1R         1       1       0       1       1       0 #>  8 P78504 P46531 JAG1    NOTCH1        1       1       1       1       1       0 #>  9 Q14164 Q92985 IKBKE   IRF7          1       1       0       1       1       0 #> 10 Q13490 P42574 BIRC2   CASP3         1       0       1       1       0       1 #> # … with 4,192 more rows, 8 more variables: extra_attrs <list>, sources <chr>, #> #   references <chr>, curation_effort <dbl>, n_references <dbl>, #> #   n_resources <int>, Cellinker_type <chr>, Macrophage_type <chr>, and #> #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, #> #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, #> #   ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_by_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters OmniPath data by resources — filter_by_resource","title":"Filters OmniPath data by resources — filter_by_resource","text":"Keeps records supported resources interest.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_by_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters OmniPath data by resources — filter_by_resource","text":"","code":"filter_by_resource(data, resources = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_by_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters OmniPath data by resources — filter_by_resource","text":"data data frame downloaded OmniPath web service (interactions, enzyme-substrate complexes). resources Character vector resource names keep.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_by_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters OmniPath data by resources — filter_by_resource","text":"data frame filtered.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_by_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters OmniPath data by resources — filter_by_resource","text":"","code":"interactions <- import_omnipath_interactions() signor <- filter_by_resource(interactions, resources = 'SIGNOR')"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_extra_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter interactions by extra attribute values — filter_extra_attrs","title":"Filter interactions by extra attribute values — filter_extra_attrs","text":"Filter interactions extra attribute values","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_extra_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter interactions by extra attribute values — filter_extra_attrs","text":"","code":"filter_extra_attrs(data, ..., na_ok = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_extra_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter interactions by extra attribute values — filter_extra_attrs","text":"data interaction data frame extra_attrs column. ... Extra attribute names values. contents extra attribute name record checked values provided. check default set intersection: element common user provided values values extra attribute record, record matched. Alternatively, value can custom function accepts value extra attribute returns single logical value. Finally, extra attribute name starts dot, result check negated. na_ok Logical: keep records extra attribute. Typically records resource providing extra attribute.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_extra_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter interactions by extra attribute values — filter_extra_attrs","text":"input data frame records removed according     filtering criteria.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_extra_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter interactions by extra attribute values — filter_extra_attrs","text":"","code":"cl <- import_post_translational_interactions(     resources = 'Cellinker',     fields = 'extra_attrs' ) # Only cell adhesion interactions from Cellinker filter_extra_attrs(cl, Cellinker_type = 'Cell adhesion') #> # A tibble: 1,749 × 16 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 O60674 P19235 JAK2    EPOR          1       1       0       1       1       0 #>  2 Q9Y219 P46531 JAG2    NOTCH1        1       1       1       1       1       0 #>  3 O00548 P46531 DLL1    NOTCH1        1       1       0       1       1       0 #>  4 P78504 P46531 JAG1    NOTCH1        1       1       1       1       1       0 #>  5 P04899 P48039 GNAI2   MTNR1A        1       0       0       0       0       0 #>  6 O43557 P36941 TNFSF14 LTBR          1       1       0       1       1       0 #>  7 Q06643 P36941 LTB     LTBR          1       1       0       1       1       0 #>  8 Q14451 P21860 GRB7    ERBB3         1       0       0       0       0       0 #>  9 Q96D42 Q96H15 HAVCR1  TIMD4         1       0       0       0       0       0 #> 10 P48357 O60674 LEPR    JAK2          1       1       0       1       1       0 #> # … with 1,739 more rows, 6 more variables: extra_attrs <list>, sources <chr>, #> #   references <chr>, curation_effort <dbl>, n_references <int>, #> #   n_resources <int>, and abbreviated variable names ¹​source_genesymbol, #> #   ²​target_genesymbol, ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, #> #   ⁶​consensus_direction, ⁷​consensus_stimulation, ⁸​consensus_inhibition  op <- import_omnipath_interactions(fields = 'extra_attrs') # Any mechanism except phosphorylation filter_extra_attrs(op, .SIGNOR_mechanism = 'phosphorylation') #> # A tibble: 35,765 × 16 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 P0DP25 P48995 CALM3   TRPC1         1       0       1       1       0       1 #>  2 P0DP23 P48995 CALM1   TRPC1         1       0       1       1       0       1 #>  3 P0DP24 P48995 CALM2   TRPC1         1       0       1       1       0       1 #>  4 Q03135 P48995 CAV1    TRPC1         1       1       0       1       1       0 #>  5 P14416 P48995 DRD2    TRPC1         1       1       0       1       1       0 #>  6 Q99750 P48995 MDFI    TRPC1         1       0       1       1       0       1 #>  7 Q14571 P48995 ITPR2   TRPC1         1       1       0       1       1       0 #>  8 P29966 P48995 MARCKS  TRPC1         1       0       1       1       0       1 #>  9 Q13255 P48995 GRM1    TRPC1         1       1       0       1       1       0 #> 10 Q13586 P48995 STIM1   TRPC1         1       1       0       1       1       0 #> # … with 35,755 more rows, 6 more variables: extra_attrs <list>, sources <chr>, #> #   references <chr>, curation_effort <dbl>, n_references <dbl>, #> #   n_resources <int>, and abbreviated variable names ¹​source_genesymbol, #> #   ²​target_genesymbol, ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, #> #   ⁶​consensus_direction, ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter intercell annotations — filter_intercell","title":"Filter intercell annotations — filter_intercell","text":"Filters data frame retrieved import_omnipath_intercell.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter intercell annotations — filter_intercell","text":"","code":"filter_intercell(   data,   categories = NULL,   resources = NULL,   parent = NULL,   scope = NULL,   aspect = NULL,   source = NULL,   transmitter = NULL,   receiver = NULL,   secreted = NULL,   plasma_membrane_peripheral = NULL,   plasma_membrane_transmembrane = NULL,   proteins = NULL,   causality = NULL,   topology = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter intercell annotations — filter_intercell","text":"data intercell annotation data frame provided import_omnipath_intercell. categories Character: allow values category column. resources Character: allow records resources. parent Character: filter records parent categories. scope Character: filter records annotation scopes. Possible values generic specific. aspect Character: filter records annotation aspects. Possible values functional locational. source Character: filter records annotation sources. Possible values composite resource_specific. transmitter Logical: TRUE transmitters, FALSE non-transmitters selected, NULL effect. receiver Logical: works way transmitters. secreted Logical: works way transmitters. plasma_membrane_peripheral Logical: works way transmitters. plasma_membrane_transmembrane Logical: works way transmitters. proteins Character: filter annotations proteins. Gene symbols UniProt IDs can used. causality Character: filter records causal roles. Possible values transmitter receiver. filter applied simultaneously transmitter receiver arguments, just different notation thing. topology Character: filter records localization topologies. Possible values secreced, plasma_membrane_peripheral plasma_membrane_transmembrane; shorter notations sec, pmp pmtm can used. effect logical type arguments, just uses different notation. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter intercell annotations — filter_intercell","text":"intercell annotation data frame filtered according     specified conditions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter intercell annotations — filter_intercell","text":"","code":"ic <- import_omnipath_intercell() ic <- filter_intercell(     ic,     transmitter = TRUE,     secreted = TRUE,     scope = \"specific\" ) #> Removed 320421 and kept 3151 records of intercell data."},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality filter an intercell network — filter_intercell_network","title":"Quality filter an intercell network — filter_intercell_network","text":"intercell database  OmniPath covers broad range possible ways cell cell communication, pieces information, localization, topology, function interaction, combined many, often independent sources. unavoidably result weird unexpected combinations false positives context intercellular communication. import_intercell_network provides shortcut (high_confidence) basic quality filtering. custom filtering experimentation parameters offer function.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality filter an intercell network — filter_intercell_network","text":"","code":"filter_intercell_network(   network,   transmitter_topology = c(\"secreted\", \"plasma_membrane_transmembrane\",     \"plasma_membrane_peripheral\"),   receiver_topology = \"plasma_membrane_transmembrane\",   min_curation_effort = 2,   min_resources = 1,   min_references = 0,   min_provenances = 1,   consensus_percentile = 50,   loc_consensus_percentile = 30,   ligand_receptor = FALSE,   simplify = FALSE,   unique_pairs = FALSE,   omnipath = TRUE,   ligrecextra = TRUE,   kinaseextra = FALSE,   pathwayextra = FALSE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality filter an intercell network — filter_intercell_network","text":"network intercell network data frame, provided import_intercell_network, without simplify. transmitter_topology Character vector: topologies allowed entities transmitter role. Abbreviations allowed: \"sec\", \"pmtm\" \"pmp\". receiver_topology transmitter_topology entities receiver role. min_curation_effort Numeric: minimum value curation effort (resource-reference pairs) network interactions. Use zero disable filtering. min_resources Numeric: minimum number resources interactions. value 1 means filtering. min_references Numeric: minimum number references interactions. Use zero disable filtering. min_provenances Numeric: minimum number provenances (either resources references) interactions. Use zero one disable filtering. consensus_percentile Numeric: percentile threshold consensus score generic categories intercell annotations. consensus score number resources supporting classification entity category based combined information many resources. can apply cut-, keeping annotations supported higher number resources certain percentile category. NULL filtering performed. value either 0-1 range, divided 100 greater 1. percentiles calculated generic composite categories applied resource specific annotations specific child categories. loc_consensus_percentile Numeric: similar consensus_percentile major localizations. example, value 50, secreted, plasma membrane transmembrane peripheral attributes TRUE least 50 percent resources support . ligand_receptor Logical. TRUE, ligand receptor annotations used instead generic transmitter receiver categories. simplify Logical: keep often used columns. function combines network data frame two copies intercell annotation data frames, already quite columns. option keep names interacting pair, intercellular communication roles, minimal information origin interaction annotations. unique_pairs Logical: instead separate rows pair annotations, drop annotations reduce data frame unique interacting pairs. See unique_intercell_network details. omnipath Logical: shortcut include omnipath dataset interactions query. ligrecextra Logical: shortcut include ligrecextra dataset interactions query. kinaseextra Logical: shortcut include kinaseextra dataset interactions query. pathwayextra Logical: shortcut include pathwayextra dataset interactions query. ... simplify unique_pairs TRUE, additional column  names can passed dplyr::select final data frame. Otherwise ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality filter an intercell network — filter_intercell_network","text":"intercell network data frame filtered.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/filter_intercell_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality filter an intercell network — filter_intercell_network","text":"","code":"icn <- import_intercell_network() icn_f <- filter_intercell_network(     icn,     consensus_percentile = 75,     min_provenances = 3,     simplify = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/find_all_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"All paths between two groups of vertices — find_all_paths","title":"All paths between two groups of vertices — find_all_paths","text":"Finds paths length `maxlen` specified groups vertices. function needed becaues igraph`s `all_shortest_paths` finds shortest, path defined length.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/find_all_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All paths between two groups of vertices — find_all_paths","text":"","code":"find_all_paths(     graph,     start,     end,     attr = NULL,     mode = 'OUT',     maxlen = 2,     progress = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/find_all_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All paths between two groups of vertices — find_all_paths","text":"graph igraph graph object. start Integer character vector indices names one start vertices. end Integer character vector indices names one end vertices. attr Character: name vertex attribute identify vertices . Necessary `start` `end` igraph vertex ids example vertex names labels. mode Character: , . Default . maxlen Integer: maximum length paths steps, .e. maxlen = 3, longest path may consist 3 edges 4 nodes. progress Logical: show progress bar.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/find_all_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All paths between two groups of vertices — find_all_paths","text":"List vertex paths, path character integer vector.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/find_all_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All paths between two groups of vertices — find_all_paths","text":"","code":"interactions <- import_omnipath_interactions() graph <- interaction_graph(interactions) paths <- find_all_paths(     graph = graph,     start = c('EGFR', 'STAT3'),     end = c('AKT1', 'ULK1'),     attr = 'name' )"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_annotation_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","title":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","text":"Get names resources https://omnipath.org/annotations.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_annotation_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","text":"","code":"get_annotation_resources(dataset = NULL, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_annotation_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","text":"dataset ignored query type ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_annotation_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","text":"character vector names annotation resources","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_annotation_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves a list of available resources in the annotations database\nof OmniPath — get_annotation_resources","text":"","code":"get_annotation_resources() #>  [1] \"Adhesome\"             \"Almen2009\"            \"Baccin2019\"           #>  [4] \"CORUM_Funcat\"         \"CORUM_GO\"             \"CSPA\"                 #>  [7] \"CSPA_celltype\"        \"CancerDrugsDB\"        \"CancerGeneCensus\"     #> [10] \"CancerSEA\"            \"CellCall\"             \"CellCellInteractions\" #> [13] \"CellChatDB\"           \"CellChatDB_complex\"   \"CellPhoneDB\"          #> [16] \"CellPhoneDB_complex\"  \"CellTalkDB\"           \"CellTypist\"           #> [19] \"Cellinker\"            \"Cellinker_complex\"    \"ComPPI\"               #> [22] \"CytoSig\"              \"DGIdb\"                \"DisGeNet\"             #> [25] \"EMBRACE\"              \"Exocarta\"             \"GO_Intercell\"         #> [28] \"GPCRdb\"               \"Guide2Pharma\"         \"HGNC\"                 #> [31] \"HPA_secretome\"        \"HPA_subcellular\"      \"HPA_tissue\"           #> [34] \"HPMR\"                 \"HumanCellMap\"         \"ICELLNET\"             #> [37] \"ICELLNET_complex\"     \"IntOGen\"              \"Integrins\"            #> [40] \"KEGG-PC\"              \"Kirouac2010\"          \"LOCATE\"               #> [43] \"LRdb\"                 \"MCAM\"                 \"MSigDB\"               #> [46] \"Matrisome\"            \"MatrixDB\"             \"Membranome\"           #> [49] \"NetPath\"              \"OPM\"                  \"PROGENy\"              #> [52] \"PanglaoDB\"            \"Phobius\"              \"Phosphatome\"          #> [55] \"Ramilowski2015\"       \"Ramilowski_location\"  \"SIGNOR\"               #> [58] \"SignaLink_function\"   \"SignaLink_pathway\"    \"Surfaceome\"           #> [61] \"TCDB\"                 \"TFcensus\"             \"TopDB\"                #> [64] \"UniProt_family\"       \"UniProt_keyword\"      \"UniProt_location\"     #> [67] \"UniProt_tissue\"       \"UniProt_topology\"     \"Vesiclepedia\"         #> [70] \"Zhong2015\"            \"connectomeDB2020\"     \"iTALK\"                #> [73] \"kinase.com\"           \"scConnect\"            \"scConnect_complex\"    #> [76] \"talklr\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the molecular complexes for a given gene(s) — get_complex_genes","title":"Get all the molecular complexes for a given gene(s) — get_complex_genes","text":"function returns molecular complexes input set genes participate. User can choose retrieve every complex input genes participate just retrieve complexes genes input set participate together.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the molecular complexes for a given gene(s) — get_complex_genes","text":"","code":"get_complex_genes(   complexes = import_omnipath_complexes(),   select_genes,   total_match = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the molecular complexes for a given gene(s) — get_complex_genes","text":"complexes complexes data frame (obtained using import_omnipath_complexes) select_genes vector containing genes complexes retrieved (hgnc format). total_match [default=FALSE] logical indicating user wants get complexes input genes participate (FALSE) get complexes input genes participate together (TRUE).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the molecular complexes for a given gene(s) — get_complex_genes","text":"Data frame complexes","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all the molecular complexes for a given gene(s) — get_complex_genes","text":"","code":"complexes <- import_omnipath_complexes(     filter_databases = c(\"CORUM\", \"hu.MAP\") ) query_genes <- c(\"LMNA\", \"BANF1\") complexes_query_genes <- get_complex_genes(complexes, query_genes)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","title":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","text":"Get names resources https://omnipath.org/complexes","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","text":"","code":"get_complex_resources(dataset = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","text":"dataset ignored query type","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","text":"character vector names databases","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_complex_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of complex resources available in Omnipath — get_complex_resources","text":"","code":"get_complex_resources() #>  [1] \"CFinder\"        \"CORUM\"          \"CellChatDB\"     \"CellPhoneDB\"    #>  [5] \"Cellinker\"      \"Compleat\"       \"ComplexPortal\"  \"Guide2Pharma\"   #>  [9] \"Havugimana2012\" \"ICELLNET\"       \"KEGG-MEDICUS\"   \"NetworkBlast\"   #> [13] \"PDB\"            \"SIGNOR\"         \"hu.MAP\"         \"hu.MAP2\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a built in database — get_db","title":"Access a built in database — get_db","text":"Databases resources might costly load can used many times functions usually automatically load retrieve database manager. database lifetime unloaded automatically upon expiry.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a built in database — get_db","text":"","code":"get_db(key, param = NULL, reload = FALSE, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a built in database — get_db","text":"key Character: key database load. list available keys see omnipath_show_db. param List: override defaults pass parameters database loader function. See loader functions default parameters omnipath_show_db. database already loaded different parameters reloaded new parameters reload option TRUE. reload Reload database param passed different parameters used last time database loaded. different functions different parameters access database repeatedly request reload frequent reloads might cost substantial time resource use. ... Arguments loader function database. override default arguments.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a built in database — get_db","text":"object database contents. exact format depends     database, often data frame list.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access a built in database — get_db","text":"","code":"goslim <- get_db('go_slim')"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_enzsub_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","title":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","text":"Get names enzyme-substrate relationship resources available https://omnipath.org/enzsub","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_enzsub_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","text":"","code":"get_enzsub_resources(dataset = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_enzsub_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","text":"dataset ignored query type","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_enzsub_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","text":"character vector names enzyme-substrate resources","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_enzsub_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves a list of enzyme-substrate resources available in OmniPath — get_enzsub_resources","text":"","code":"get_enzsub_resources() #>  [1] \"BEL-Large-Corpus_ProtMapper\" \"DEPOD\"                       #>  [3] \"HPRD\"                        \"HPRD_MIMP\"                   #>  [5] \"KEA\"                         \"Li2012\"                      #>  [7] \"MIMP\"                        \"NCI-PID_ProtMapper\"          #>  [9] \"PhosphoNetworks\"             \"PhosphoSite\"                 #> [11] \"PhosphoSite_MIMP\"            \"PhosphoSite_ProtMapper\"      #> [13] \"ProtMapper\"                  \"REACH_ProtMapper\"            #> [15] \"RLIMS-P_ProtMapper\"          \"Reactome_ProtMapper\"         #> [17] \"SIGNOR\"                      \"SIGNOR_ProtMapper\"           #> [19] \"Sparser_ProtMapper\"          \"dbPTM\"                       #> [21] \"phosphoELM\"                  \"phosphoELM_MIMP\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_interaction_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","title":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","text":"Gets names resources https://omnipath.org/interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_interaction_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","text":"","code":"get_interaction_resources(dataset = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_interaction_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","text":"dataset dataset within interactions query type. Currently available datasets `omnipath`, `kinaseextra`, `pathwayextra`, `ligrecextra`, `dorothea`, `tf_target`, `tf_mirna`, `mirnatarget` `lncrna_mrna`","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_interaction_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","text":"character vector names interaction databases","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_interaction_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of interaction resources available in Omnipath — get_interaction_resources","text":"","code":"get_interaction_resources() #>   [1] \"ABS\"                         \"ACSN\"                        #>   [3] \"ACSN_SignaLink3\"             \"ARACNe-GTEx_DoRothEA\"        #>   [5] \"ARN\"                         \"Adhesome\"                    #>   [7] \"AlzPathway\"                  \"BEL-Large-Corpus_ProtMapper\" #>   [9] \"Baccin2019\"                  \"BioGRID\"                     #>  [11] \"CA1\"                         \"CancerCellMap\"               #>  [13] \"CancerDrugsDB\"               \"CellCall\"                    #>  [15] \"CellChatDB\"                  \"CellChatDB-cofactors\"        #>  [17] \"CellPhoneDB\"                 \"CellPhoneDB_Cellinker\"       #>  [19] \"CellTalkDB\"                  \"Cellinker\"                   #>  [21] \"DEPOD\"                       \"DIP\"                         #>  [23] \"DLRP_Cellinker\"              \"DLRP_talklr\"                 #>  [25] \"DOMINO\"                      \"DeathDomain\"                 #>  [27] \"DoRothEA\"                    \"DoRothEA-reviews_DoRothEA\"   #>  [29] \"ELM\"                         \"EMBRACE\"                     #>  [31] \"ENCODE-distal\"               \"ENCODE-proximal\"             #>  [33] \"ENCODE_tf-mirna\"             \"FANTOM4_DoRothEA\"            #>  [35] \"Fantom5_LRdb\"                \"Guide2Pharma\"                #>  [37] \"Guide2Pharma_CellPhoneDB\"    \"Guide2Pharma_Cellinker\"      #>  [39] \"Guide2Pharma_LRdb\"           \"Guide2Pharma_talklr\"         #>  [41] \"HOCOMOCO_DoRothEA\"           \"HPMR\"                        #>  [43] \"HPMR_Cellinker\"              \"HPMR_LRdb\"                   #>  [45] \"HPMR_talklr\"                 \"HPRD\"                        #>  [47] \"HPRD-phos\"                   \"HPRD_KEA\"                    #>  [49] \"HPRD_LRdb\"                   \"HPRD_MIMP\"                   #>  [51] \"HPRD_talklr\"                 \"HTRIdb\"                      #>  [53] \"HTRIdb_DoRothEA\"             \"HuRI\"                        #>  [55] \"I2D_CellPhoneDB\"             \"ICELLNET\"                    #>  [57] \"IMEx_CellPhoneDB\"            \"InnateDB\"                    #>  [59] \"InnateDB-All_CellPhoneDB\"    \"InnateDB_CellPhoneDB\"        #>  [61] \"InnateDB_SignaLink3\"         \"IntAct\"                      #>  [63] \"IntAct_CellPhoneDB\"          \"IntAct_DoRothEA\"             #>  [65] \"JASPAR_DoRothEA\"             \"KEA\"                         #>  [67] \"KEGG-MEDICUS\"                \"Kinexus_KEA\"                 #>  [69] \"Kirouac2010\"                 \"LMPID\"                       #>  [71] \"LRdb\"                        \"Li2012\"                      #>  [73] \"Lit-BM-17\"                   \"LncRNADisease\"               #>  [75] \"MIMP\"                        \"MINT_CellPhoneDB\"            #>  [77] \"MPPI\"                        \"Macrophage\"                  #>  [79] \"MatrixDB\"                    \"MatrixDB_CellPhoneDB\"        #>  [81] \"NCI-PID_ProtMapper\"          \"NFIRegulomeDB_DoRothEA\"      #>  [83] \"NRF2ome\"                     \"NetPath\"                     #>  [85] \"NetworKIN_KEA\"               \"ORegAnno\"                    #>  [87] \"ORegAnno_DoRothEA\"           \"PAZAR\"                       #>  [89] \"PAZAR_DoRothEA\"              \"PhosphoNetworks\"             #>  [91] \"PhosphoPoint\"                \"PhosphoSite\"                 #>  [93] \"PhosphoSite_KEA\"             \"PhosphoSite_MIMP\"            #>  [95] \"PhosphoSite_ProtMapper\"      \"PhosphoSite_noref\"           #>  [97] \"ProtMapper\"                  \"REACH_ProtMapper\"            #>  [99] \"RLIMS-P_ProtMapper\"          \"Ramilowski2015\"              #> [101] \"Ramilowski2015_Baccin2019\"   \"ReMap_DoRothEA\"              #> [103] \"Reactome_LRdb\"               \"Reactome_ProtMapper\"         #> [105] \"Reactome_SignaLink3\"         \"RegNetwork_DoRothEA\"         #> [107] \"SIGNOR\"                      \"SIGNOR_ProtMapper\"           #> [109] \"SPIKE\"                       \"STRING_talklr\"               #> [111] \"SignaLink3\"                  \"Sparser_ProtMapper\"          #> [113] \"TCRcuration_SignaLink3\"      \"TFactS_DoRothEA\"             #> [115] \"TFe_DoRothEA\"                \"TRED_DoRothEA\"               #> [117] \"TRIP\"                        \"TRRD_DoRothEA\"               #> [119] \"TRRUST_DoRothEA\"             \"TransmiR\"                    #> [121] \"UniProt_CellPhoneDB\"         \"UniProt_LRdb\"                #> [123] \"Wang\"                        \"Wojtowicz2020\"               #> [125] \"connectomeDB2020\"            \"dbPTM\"                       #> [127] \"iPTMnet\"                     \"iTALK\"                       #> [129] \"lncrnadb\"                    \"miR2Disease\"                 #> [131] \"miRDeathDB\"                  \"miRTarBase\"                  #> [133] \"miRecords\"                   \"ncRDeathDB\"                  #> [135] \"phosphoELM\"                  \"phosphoELM_KEA\"              #> [137] \"phosphoELM_MIMP\"             \"scConnect\"                   #> [139] \"talklr\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Categories in the intercell database of OmniPath — get_intercell_categories","title":"Categories in the intercell database of OmniPath — get_intercell_categories","text":"Retrieves list categories https://omnipath.org/intercell.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categories in the intercell database of OmniPath — get_intercell_categories","text":"","code":"get_intercell_categories()"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categories in the intercell database of OmniPath — get_intercell_categories","text":"character vector different intercell categories","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categories in the intercell database of OmniPath — get_intercell_categories","text":"","code":"get_intercell_categories() #>   [1] \"transmembrane\"                                                              #>   [2] \"transmembrane_phobius\"                                                      #>   [3] \"transmembrane_sosui\"                                                        #>   [4] \"transmembrane_tmhmm\"                                                        #>   [5] \"transmembrane_predicted\"                                                    #>   [6] \"lhfpl\"                                                                      #>   [7] \"peripheral\"                                                                 #>   [8] \"plasma_membrane\"                                                            #>   [9] \"basolateral_cell_membrane\"                                                  #>  [10] \"basal_cell_membrane\"                                                        #>  [11] \"apical_cell_membrane\"                                                       #>  [12] \"apicolateral_cell_membrane\"                                                 #>  [13] \"lateral_cell_membrane\"                                                      #>  [14] \"plasma_membrane_transmembrane\"                                              #>  [15] \"ifn_induced\"                                                                #>  [16] \"lhfpl_plasma_membrane\"                                                      #>  [17] \"plasma_membrane_regulator\"                                                  #>  [18] \"plasma_membrane_peripheral\"                                                 #>  [19] \"secreted\"                                                                   #>  [20] \"bpi_fold_containing\"                                                        #>  [21] \"histatin\"                                                                   #>  [22] \"proline_rich\"                                                               #>  [23] \"cell_surface\"                                                               #>  [24] \"glypican\"                                                                   #>  [25] \"syndecan\"                                                                   #>  [26] \"immunoglobulin_heavy\"                                                       #>  [27] \"immunoglobulin_kappa\"                                                       #>  [28] \"immunoglobulin_lambda\"                                                      #>  [29] \"ecm\"                                                                        #>  [30] \"collagen\"                                                                   #>  [31] \"glycoprotein\"                                                               #>  [32] \"proteoglycan\"                                                               #>  [33] \"mucin\"                                                                      #>  [34] \"basement_membrane\"                                                          #>  [35] \"fibril_associated_collagen_with_interrupted_triple_helices\"                 #>  [36] \"fibulin\"                                                                    #>  [37] \"hemostasis_related\"                                                         #>  [38] \"laminin\"                                                                    #>  [39] \"ligand\"                                                                     #>  [40] \"growth_factor\"                                                              #>  [41] \"cytokine\"                                                                   #>  [42] \"ccn_family\"                                                                 #>  [43] \"angiopoietin\"                                                               #>  [44] \"basigin\"                                                                    #>  [45] \"bmp\"                                                                        #>  [46] \"c1q\"                                                                        #>  [47] \"ccn\"                                                                        #>  [48] \"chemokine\"                                                                  #>  [49] \"chordin\"                                                                    #>  [50] \"cysteine_rich_bmp_regulator\"                                                #>  [51] \"dan\"                                                                        #>  [52] \"fgf\"                                                                        #>  [53] \"gdnf\"                                                                       #>  [54] \"growth_hormone\"                                                             #>  [55] \"hedgehog\"                                                                   #>  [56] \"igf\"                                                                        #>  [57] \"inhibin\"                                                                    #>  [58] \"interleukin6\"                                                               #>  [59] \"interleukin\"                                                                #>  [60] \"leucine_rich_glioma_inactivated\"                                            #>  [61] \"mia\"                                                                        #>  [62] \"netrin\"                                                                     #>  [63] \"neurotrophin\"                                                               #>  [64] \"oocyte_secreted\"                                                            #>  [65] \"prostate_and_testis_expressed\"                                              #>  [66] \"pregnancy_specific_glycoprotein\"                                            #>  [67] \"tafa_chemokine_like\"                                                        #>  [68] \"transforming_growth_factor_beta\"                                            #>  [69] \"tumor_necrosis_factor\"                                                      #>  [70] \"vascular_endothelial_growth_factor\"                                         #>  [71] \"wnt\"                                                                        #>  [72] \"hormone\"                                                                    #>  [73] \"hdgf\"                                                                       #>  [74] \"izumo\"                                                                      #>  [75] \"neuferricin_neudensin\"                                                      #>  [76] \"s100_calcium_binding\"                                                       #>  [77] \"scavenger_receptor_cysteine_rich\"                                           #>  [78] \"prosalusin\"                                                                 #>  [79] \"delta_like\"                                                                 #>  [80] \"ephrin_b\"                                                                   #>  [81] \"ig\"                                                                         #>  [82] \"jagged\"                                                                     #>  [83] \"neuroligin\"                                                                 #>  [84] \"nkg2dl\"                                                                     #>  [85] \"semaphorin\"                                                                 #>  [86] \"trem_like\"                                                                  #>  [87] \"tgf_beta\"                                                                   #>  [88] \"anosmin\"                                                                    #>  [89] \"growthfactor\"                                                               #>  [90] \"cellsignal_wnt\"                                                             #>  [91] \"cytokine_like\"                                                              #>  [92] \"immune-related\"                                                             #>  [93] \"notch_family\"                                                               #>  [94] \"antigen_binding\"                                                            #>  [95] \"checkpoint\"                                                                 #>  [96] \"receptor\"                                                                   #>  [97] \"gpcr\"                                                                       #>  [98] \"immunoglobulin_like\"                                                        #>  [99] \"adiponectin\"                                                                #> [100] \"adrenalin\"                                                                  #> [101] \"angiotensin\"                                                                #> [102] \"vasopressin_oxytocin\"                                                       #> [103] \"atypical_chemokine\"                                                         #> [104] \"bombesin\"                                                                   #> [105] \"bradykinin\"                                                                 #> [106] \"butyrophilin\"                                                               #> [107] \"cc_chemokine\"                                                               #> [108] \"cx3c_chemokine\"                                                             #> [109] \"cxc_chemokine\"                                                              #> [110] \"celsr_cadherin\"                                                             #> [111] \"5ht_gprotein\"                                                               #> [112] \"5ht_ionotropic\"                                                             #> [113] \"activating_leukocyte_ig_like\"                                               #> [114] \"adenosine\"                                                                  #> [115] \"calcitonin\"                                                                 #> [116] \"calcium\"                                                                    #> [117] \"cannabinoid\"                                                                #> [118] \"cholecystokinin\"                                                            #> [119] \"muscarinic_cholinergic\"                                                     #> [120] \"nicotinic_cholinergic\"                                                      #> [121] \"collectin\"                                                                  #> [122] \"complement_gpcr\"                                                            #> [123] \"crh\"                                                                        #> [124] \"dopamine\"                                                                   #> [125] \"ephrin\"                                                                     #> [126] \"endothelin\"                                                                 #> [127] \"erbb_rtk\"                                                                   #> [128] \"f2r\"                                                                        #> [129] \"formyl_peptide\"                                                             #> [130] \"free_fatty_acid\"                                                            #> [131] \"bile_acid\"                                                                  #> [132] \"estrogen_gpcr\"                                                              #> [133] \"gpcr_orphan\"                                                                #> [134] \"frizzled\"                                                                   #> [135] \"galanin\"                                                                    #> [136] \"gaba\"                                                                       #> [137] \"glucagon\"                                                                   #> [138] \"glutamate_ionotropic\"                                                       #> [139] \"glutamate_metabotropic\"                                                     #> [140] \"glycine\"                                                                    #> [141] \"glycoprotein_hormone\"                                                       #> [142] \"gonadotropin_releasing_hormone\"                                             #> [143] \"histamine\"                                                                  #> [144] \"orexin\"                                                                     #> [145] \"inhibitory_leukocyte_ig_like\"                                               #> [146] \"interferon\"                                                                 #> [147] \"killer_cell_ig_like\"                                                        #> [148] \"killer_cell_lectin_like\"                                                    #> [149] \"leukotriene\"                                                                #> [150] \"low_density_lipoprotein\"                                                    #> [151] \"lysophosphatidic_acid\"                                                      #> [152] \"melanin_concentrating_hormone\"                                              #> [153] \"melanocortin\"                                                               #> [154] \"melatonin\"                                                                  #> [155] \"neuromedin_u\"                                                               #> [156] \"neurotensin\"                                                                #> [157] \"notch\"                                                                      #> [158] \"olfactory\"                                                                  #> [159] \"opioid\"                                                                     #> [160] \"opsin\"                                                                      #> [161] \"oxoglutarate\"                                                               #> [162] \"p2y_purinergic\"                                                             #> [163] \"p2x_purinergic\"                                                             #> [164] \"parathyroid_hormone\"                                                        #> [165] \"peptide\"                                                                    #> [166] \"platelet_activating_factor\"                                                 #> [167] \"plexin\"                                                                     #> [168] \"progestin_and_adipoq\"                                                       #> [169] \"prokineticin\"                                                               #> [170] \"prostaglandin\"                                                              #> [171] \"receptor_tyrosine_phosphatase\"                                              #> [172] \"relt\"                                                                       #> [173] \"gpcr_activity_modifying\"                                                    #> [174] \"tyrosine_kinase\"                                                            #> [175] \"relaxin\"                                                                    #> [176] \"repulsive_guidance\"                                                         #> [177] \"slitrk\"                                                                     #> [178] \"scavenger\"                                                                  #> [179] \"sialic_acid_binding_lectin\"                                                 #> [180] \"somatostatin\"                                                               #> [181] \"sphingosine_phosphate\"                                                      #> [182] \"succinate\"                                                                  #> [183] \"t_cell\"                                                                     #> [184] \"tir_domain\"                                                                 #> [185] \"tachykinin\"                                                                 #> [186] \"taste\"                                                                      #> [187] \"toll_like\"                                                                  #> [188] \"trace_amin\"                                                                 #> [189] \"type1_serine_threonine_kinase\"                                              #> [190] \"type2_serine_threonine_kinase\"                                              #> [191] \"vomeronasal\"                                                                #> [192] \"xc_motif_chemokine\"                                                         #> [193] \"integrin\"                                                                   #> [194] \"natriuretic_peptide\"                                                        #> [195] \"guanilyn\"                                                                   #> [196] \"ly6_plaur\"                                                                  #> [197] \"pentraxin\"                                                                  #> [198] \"membrane_associated_progesterone\"                                           #> [199] \"pseudoautosomal_region\"                                                     #> [200] \"ige\"                                                                        #> [201] \"transforming_growth_factor\"                                                 #> [202] \"axl\"                                                                        #> [203] \"egf\"                                                                        #> [204] \"fc\"                                                                         #> [205] \"glutamate\"                                                                  #> [206] \"ig_like\"                                                                    #> [207] \"il17\"                                                                       #> [208] \"kinase\"                                                                     #> [209] \"leukocyte_ig_like\"                                                          #> [210] \"mannose\"                                                                    #> [211] \"neuropilin\"                                                                 #> [212] \"cd1\"                                                                        #> [213] \"cd300\"                                                                      #> [214] \"natural_cytotoxicity_triggering\"                                            #> [215] \"poliovirus\"                                                                 #> [216] \"roundabout\"                                                                 #> [217] \"triggering\"                                                                 #> [218] \"pdgf\"                                                                       #> [219] \"patched\"                                                                    #> [220] \"rhodopsin\"                                                                  #> [221] \"secretin\"                                                                   #> [222] \"teneurin\"                                                                   #> [223] \"transferrin\"                                                                #> [224] \"type1_ig_like_cytokine\"                                                     #> [225] \"type2_ig_like_cytokine\"                                                     #> [226] \"gaba_ach\"                                                                   #> [227] \"retinal_guanylyl_cyclase\"                                                   #> [228] \"chemokine_receptor_cx3cr1\"                                                  #> [229] \"interferon_receptor\"                                                        #> [230] \"cytokine_receptor\"                                                          #> [231] \"inhibitory_lilrs\"                                                           #> [232] \"chemokine_receptor_cxcr\"                                                    #> [233] \"kir\"                                                                        #> [234] \"hormone_receptor\"                                                           #> [235] \"chemokine_receptor\"                                                         #> [236] \"chemokine_receptor_xc\"                                                      #> [237] \"atipical_chemokine_receptor\"                                                #> [238] \"tnf_receptor\"                                                               #> [239] \"inflammation\"                                                               #> [240] \"tgfbeta_receptor\"                                                           #> [241] \"estrogen_receptor\"                                                          #> [242] \"cytokine_receptor_il6_family\"                                               #> [243] \"klr\"                                                                        #> [244] \"artipical_chemokine_receptor\"                                               #> [245] \"growth_factor_receptor\"                                                     #> [246] \"chemokine_receptor_ccr\"                                                     #> [247] \"hla\"                                                                        #> [248] \"plexins\"                                                                    #> [249] \"tnf_ngf\"                                                                    #> [250] \"cytokine_type_2\"                                                            #> [251] \"integrins\"                                                                  #> [252] \"receptor_like_protein_tyrosine_phosphatases_rptps\"                          #> [253] \"receptor_tyrosine_kinases_rtk\"                                              #> [254] \"lingo_coreceptors_for_nogo_p75\"                                             #> [255] \"interleukin_17\"                                                             #> [256] \"gpi_anchored\"                                                               #> [257] \"tetraspanins\"                                                               #> [258] \"neurexins\"                                                                  #> [259] \"seven_transmembrane_7tm\"                                                    #> [260] \"low_density_lipoprotein_ldl_receptor_and_ldl_receptor_related_proteins\"     #> [261] \"other_receptor_family\"                                                      #> [262] \"toll\"                                                                       #> [263] \"cytokine_type_1\"                                                            #> [264] \"lrr_ig\"                                                                     #> [265] \"guanylyl_cyclase\"                                                           #> [266] \"t13c_tnf_ngf\"                                                               #> [267] \"7tm_a\"                                                                      #> [268] \"discoidin_domain_receptor\"                                                  #> [269] \"ramp\"                                                                       #> [270] \"tm4sf5\"                                                                     #> [271] \"frizzled_&_smoothened\"                                                      #> [272] \"immune_cell\"                                                                #> [273] \"rptpt12\"                                                                    #> [274] \"il2ra\"                                                                      #> [275] \"rptpeta\"                                                                    #> [276] \"ngfr_ntr_trk\"                                                               #> [277] \"met\"                                                                        #> [278] \"tnr4_tnf_ngf\"                                                               #> [279] \"tr16_tnf_ngf\"                                                               #> [280] \"itam\"                                                                       #> [281] \"tnr9_tnf_ngf\"                                                               #> [282] \"tyr_mer_ufo\"                                                                #> [283] \"fgr\"                                                                        #> [284] \"tlr9_toll\"                                                                  #> [285] \"itb_4\"                                                                      #> [286] \"non_integrin_laminin_binding_proteins\"                                      #> [287] \"erbb_egf\"                                                                   #> [288] \"folate\"                                                                     #> [289] \"prolactin\"                                                                  #> [290] \"subfamily2_netrin\"                                                          #> [291] \"rptpoic\"                                                                    #> [292] \"dcc\"                                                                        #> [293] \"7tm_c\"                                                                      #> [294] \"il_1r2_cytokine_type_1\"                                                     #> [295] \"itab\"                                                                       #> [296] \"selectin\"                                                                   #> [297] \"tet3\"                                                                       #> [298] \"il2rg_cytokine_type_1\"                                                      #> [299] \"insulin_r\"                                                                  #> [300] \"7tm_b\"                                                                      #> [301] \"subfamily1_netrin\"                                                          #> [302] \"phagocytosis\"                                                               #> [303] \"trail_tnf_ngf\"                                                              #> [304] \"seven_tm_other\"                                                             #> [305] \"tgf_beta_serine_threonine_kinase\"                                           #> [306] \"osmr_cytokine_type_1\"                                                       #> [307] \"il_21r_cytokine_type_1\"                                                     #> [308] \"vegf_pdgf\"                                                                  #> [309] \"ghr_cytokine_type_1\"                                                        #> [310] \"ror\"                                                                        #> [311] \"rptpui5\"                                                                    #> [312] \"til_toll\"                                                                   #> [313] \"miscellaneous\"                                                              #> [314] \"syndecan_proteoglycan\"                                                      #> [315] \"cicytr_cytokine_type_1\"                                                     #> [316] \"rptpzeta\"                                                                   #> [317] \"tnr8_tnf_ngf\"                                                               #> [318] \"tr12_tnf_ngf\"                                                               #> [319] \"neuropilins\"                                                                #> [320] \"7tm_d\"                                                                      #> [321] \"cd63\"                                                                       #> [322] \"melanocortin_acth_msh_7tm_a\"                                                #> [323] \"udp_glucose_7tm_a\"                                                          #> [324] \"formyl_peptide_fmlp_7tm_a\"                                                  #> [325] \"metabotropic_glutamate_receptor_7tm_c\"                                      #> [326] \"type_2_receptor_serine_threonine_kinase_tgf_beta_serine_threonine_kinase\"   #> [327] \"dopamine_7tm_a\"                                                             #> [328] \"lgr_glycoprotein_hormones_relaxin_like_7tm_a\"                               #> [329] \"prostanoid_proataglandin_thromboxane_prostacycline_7tm_a\"                   #> [330] \"7tm_a_orphan_7tm_a\"                                                         #> [331] \"neuromedin_u_neurotensin_ghrelin_thyrotropin_releasing_7tm_a\"               #> [332] \"opsin_7tm_a\"                                                                #> [333] \"7tm_d_olfactory_7tm_d\"                                                      #> [334] \"angiogenesis_inhibitor_receptor_7tm_b\"                                      #> [335] \"leukotriene_b4_7tm_a\"                                                       #> [336] \"calcium_7tm_c\"                                                              #> [337] \"gpr56_114_64_112_7tm_b\"                                                     #> [338] \"killer_cell_lectin_like_receptor_immune_cell\"                               #> [339] \"histamine_7tm_a\"                                                            #> [340] \"gonadotropin_releasing_7tm_a\"                                               #> [341] \"adenosine_7tm_a\"                                                            #> [342] \"7tm_type_b_polypeptide_7tm_b\"                                               #> [343] \"alk_serine_threonine_kinase_tgf_beta_serine_threonine_kinase\"               #> [344] \"purinergic_uridine_7tm_a\"                                                   #> [345] \"fatty_acid_7tm_a\"                                                           #> [346] \"lysosphingolipid_lysophosphatidic_acid_edg_7tm_a\"                           #> [347] \"progestin_and_adiponectin_membrane_seven_tm_other\"                          #> [348] \"natural_killer_cell_inhibitory_immune_cell\"                                 #> [349] \"melatonin_7tm_a\"                                                            #> [350] \"serotonin_7tm_a\"                                                            #> [351] \"sreb_7tm_a\"                                                                 #> [352] \"natural_cytotoxicity_triggering_immune_cell\"                                #> [353] \"mannose_scavenger\"                                                          #> [354] \"7tm_a_ogr1_gpr4_7tm_a\"                                                      #> [355] \"melanin_concentrating_hormone_7tm_a\"                                        #> [356] \"proteinase_activated_thrombin_7tm_a\"                                        #> [357] \"gaba_7tm_c\"                                                                 #> [358] \"somatostatin_oprl_npw_7tm_a\"                                                #> [359] \"cysteinyl_leukotriene_ebv_induced_platelet_activating_factor_7tm_a\"         #> [360] \"other_amine_derivatives_7tm_a\"                                              #> [361] \"mas_related_7tm_a\"                                                          #> [362] \"t_cell_gamma_immune_cell\"                                                   #> [363] \"cholinergic_muscarinic_7tm_a\"                                               #> [364] \"galanin_kisseptin_urotensin_7tm_a\"                                          #> [365] \"c_lectinn_containing_scavenger_scavenger\"                                   #> [366] \"vasopressin_oxytocin_7tm_a\"                                                 #> [367] \"adrenergic_7tm_a\"                                                           #> [368] \"neuropeptidey_tachykinin_orexin_pancreatic_peptide_7tm_a\"                   #> [369] \"latrophilin_lectomedin_7tm_b\"                                               #> [370] \"cd97_antigen_egf_like_module_containing_mucin_like_emr2_7tm_b\"              #> [371] \"gpr110_111_113_115_116_7tm_b\"                                               #> [372] \"nectin_immune_cell\"                                                         #> [373] \"apelin_angiotensin_bradykinin_7tm_a\"                                        #> [374] \"endothelin_gastrin_releasing_peptide_7tm_a\"                                 #> [375] \"trace_amine_tyramine_beta_phenylethylamine_tryptamine_and_octopamine_7tm_a\" #> [376] \"chemokine_interleukin_8_7tm_a\"                                              #> [377] \"tnfngf\"                                                                     #> [378] \"tcr\"                                                                        #> [379] \"cytokiner\"                                                                  #> [380] \"netrinr\"                                                                    #> [381] \"receptortypephosphatases\"                                                   #> [382] \"contactinassprot\"                                                           #> [383] \"tas2r\"                                                                      #> [384] \"scar\"                                                                       #> [385] \"class_b\"                                                                    #> [386] \"fgfr\"                                                                       #> [387] \"v1r\"                                                                        #> [388] \"class_g\"                                                                    #> [389] \"olf\"                                                                        #> [390] \"pdgfr\"                                                                      #> [391] \"class_f\"                                                                    #> [392] \"adipo_paqr\"                                                                 #> [393] \"act_tgfb\"                                                                   #> [394] \"macrophagemannoser\"                                                         #> [395] \"putativeolfr\"                                                               #> [396] \"type2\"                                                                      #> [397] \"lilr\"                                                                       #> [398] \"class_a\"                                                                    #> [399] \"eph\"                                                                        #> [400] \"neurexin\"                                                                   #> [401] \"class_e\"                                                                    #> [402] \"rgc\"                                                                        #> [403] \"type1\"                                                                      #> [404] \"neutrophin\"                                                                 #> [405] \"vps10r\"                                                                     #> [406] \"ldlr\"                                                                       #> [407] \"egfr\"                                                                       #> [408] \"insr\"                                                                       #> [409] \"class_d\"                                                                    #> [410] \"fcr\"                                                                        #> [411] \"class_h\"                                                                    #> [412] \"adhesion\"                                                                   #> [413] \"other_gpcrs\"                                                                #> [414] \"class_t_taste_2\"                                                            #> [415] \"class_c_glutamate\"                                                          #> [416] \"class_b1_secretin\"                                                          #> [417] \"class_f_frizzled\"                                                           #> [418] \"class_a_rhodopsin\"                                                          #> [419] \"class_b2_adhesion\"                                                          #> [420] \"class_a_rhodopsin_nucleotide\"                                               #> [421] \"class_c_glutamate_sensory\"                                                  #> [422] \"class_b2_adhesion_adhesion\"                                                 #> [423] \"class_a_rhodopsin_orphan\"                                                   #> [424] \"class_a_rhodopsin_protein\"                                                  #> [425] \"class_c_glutamate_orphan\"                                                   #> [426] \"class_c_glutamate_amino_acid\"                                               #> [427] \"class_a_rhodopsin_olfactory\"                                                #> [428] \"class_a_rhodopsin_alicarboxylic_acid\"                                       #> [429] \"class_a_rhodopsin_aminergic\"                                                #> [430] \"other_gpcrs_orphan\"                                                         #> [431] \"class_a_rhodopsin_steroid\"                                                  #> [432] \"class_t_taste_2_sensory\"                                                    #> [433] \"class_c_glutamate_ion\"                                                      #> [434] \"class_a_rhodopsin_peptide\"                                                  #> [435] \"class_f_frizzled_protein\"                                                   #> [436] \"class_a_rhodopsin_sensory\"                                                  #> [437] \"class_a_rhodopsin_lipid\"                                                    #> [438] \"class_a_rhodopsin_melatonin\"                                                #> [439] \"class_b1_secretin_peptide\"                                                  #> [440] \"class_a_rhodopsin_peptide_melanocortin\"                                     #> [441] \"class_a_rhodopsin_peptide_neurotensin\"                                      #> [442] \"class_a_rhodopsin_lipid_lysophospholipid_lpa\"                               #> [443] \"class_a_rhodopsin_alicarboxylic_acid_succinate\"                             #> [444] \"class_a_rhodopsin_peptide_somatostatin\"                                     #> [445] \"class_a_rhodopsin_alicarboxylic_acid_oxoglutarate\"                          #> [446] \"class_a_rhodopsin_olfactory_olfactory\"                                      #> [447] \"class_a_rhodopsin_peptide_bombesin\"                                         #> [448] \"class_a_rhodopsin_orphan_class_a_orphans\"                                   #> [449] \"class_a_rhodopsin_peptide_opioid\"                                           #> [450] \"class_a_rhodopsin_peptide_orexin\"                                           #> [451] \"class_f_frizzled_protein_frizzled\"                                          #> [452] \"class_a_rhodopsin_peptide_bradykinin\"                                       #> [453] \"class_b2_adhesion_adhesion_adgrd\"                                           #> [454] \"class_a_rhodopsin_lipid_platelet_activating_factor\"                         #> [455] \"class_a_rhodopsin_lipid_leukotriene\"                                        #> [456] \"class_a_rhodopsin_peptide_peptide_p518\"                                     #> [457] \"class_a_rhodopsin_peptide_prolactin_releasing_peptide\"                      #> [458] \"class_a_rhodopsin_lipid_prostanoid\"                                         #> [459] \"class_a_rhodopsin_protein_glycoprotein_hormone\"                             #> [460] \"class_a_rhodopsin_lipid_lysophospholipid_s1p\"                               #> [461] \"class_a_rhodopsin_peptide_galanin\"                                          #> [462] \"class_b1_secretin_peptide_vip_and_pacap\"                                    #> [463] \"class_a_rhodopsin_peptide_neuropeptide_ff_neuropeptide_af\"                  #> [464] \"class_a_rhodopsin_peptide_apelin\"                                           #> [465] \"class_a_rhodopsin_peptide_neuromedin_u\"                                     #> [466] \"class_a_rhodopsin_lipid_cannabinoid\"                                        #> [467] \"other_gpcrs_orphan_other_gpcr_orphans\"                                      #> [468] \"class_a_rhodopsin_aminergic_dopamine\"                                       #> [469] \"class_a_rhodopsin_lipid_gpr18_gpr55_and_gpr119\"                             #> [470] \"class_a_rhodopsin_aminergic_5_hydroxytryptamine\"                            #> [471] \"class_a_rhodopsin_peptide_endothelin\"                                       #> [472] \"class_a_rhodopsin_peptide_formylpeptide\"                                    #> [473] \"class_b1_secretin_peptide_parathyroid_hormone\"                              #> [474] \"class_a_rhodopsin_peptide_tachykinin\"                                       #> [475] \"class_a_rhodopsin_peptide_motilin\"                                          #> [476] \"class_a_rhodopsin_peptide_gonadotrophin_releasing_hormone\"                  #> [477] \"class_a_rhodopsin_aminergic_histamine\"                                      #> [478] \"class_b2_adhesion_adhesion_adgrf\"                                           #> [479] \"class_b1_secretin_peptide_glucagon_receptor_family\"                         #> [480] \"class_a_rhodopsin_peptide_melanin_concentrating_hormone\"                    #> [481] \"class_c_glutamate_amino_acid_gaba<sub>b<_sub>\"                              #> [482] \"class_a_rhodopsin_steroid_bile_acid\"                                        #> [483] \"class_b2_adhesion_adhesion_adgrc\"                                           #> [484] \"class_a_rhodopsin_aminergic_acetylcholine_muscarinic\"                       #> [485] \"class_a_rhodopsin_peptide_neuropeptide_s\"                                   #> [486] \"class_a_rhodopsin_aminergic_trace_amine\"                                    #> [487] \"class_a_rhodopsin_peptide_neuropeptide_y\"                                   #> [488] \"class_b2_adhesion_adhesion_adgrl\"                                           #> [489] \"class_a_rhodopsin_nucleotide_p2y\"                                           #> [490] \"class_a_rhodopsin_protein_chemokine\"                                        #> [491] \"class_t_taste_2_sensory_taste_2\"                                            #> [492] \"class_b2_adhesion_adhesion_adgra\"                                           #> [493] \"class_c_glutamate_amino_acid_metabotropic_glutamate\"                        #> [494] \"class_a_rhodopsin_peptide_cholecystokinin\"                                  #> [495] \"class_a_rhodopsin_steroid_estrogen_g_protein_coupled\"                       #> [496] \"class_a_rhodopsin_alicarboxylic_acid_hydroxycarboxylic_acid\"                #> [497] \"class_a_rhodopsin_lipid_free_fatty_acid\"                                    #> [498] \"class_a_rhodopsin_peptide_urotensin\"                                        #> [499] \"class_a_rhodopsin_peptide_vasopressin_and_oxytocin\"                         #> [500] \"class_b2_adhesion_adhesion_adgre\"                                           #> [501] \"class_a_rhodopsin_peptide_kisspeptin\"                                       #> [502] \"class_b2_adhesion_adhesion_adgrg\"                                           #> [503] \"class_a_rhodopsin_peptide_complement_peptide\"                               #> [504] \"class_b1_secretin_peptide_calcitonin\"                                       #> [505] \"class_c_glutamate_ion_calcium_sensing\"                                      #> [506] \"class_c_glutamate_sensory_taste_1\"                                          #> [507] \"class_a_rhodopsin_protein_prokineticin\"                                     #> [508] \"class_a_rhodopsin_nucleotide_adenosine\"                                     #> [509] \"class_a_rhodopsin_aminergic_adrenoceptors\"                                  #> [510] \"class_a_rhodopsin_protein_chemerin_receptor\"                                #> [511] \"class_a_rhodopsin_peptide_neuropeptide_w_neuropeptide_b\"                    #> [512] \"class_a_rhodopsin_sensory_opsins\"                                           #> [513] \"class_c_glutamate_orphan_class_c_orphans\"                                   #> [514] \"class_a_rhodopsin_melatonin_melatonin\"                                      #> [515] \"class_a_rhodopsin_peptide_proteinase_activated\"                             #> [516] \"class_a_rhodopsin_peptide_relaxin_family_peptide\"                           #> [517] \"class_a_rhodopsin_peptide_angiotensin\"                                      #> [518] \"class_b1_secretin_peptide_corticotropin_releasing_factor\"                   #> [519] \"class_b2_adhesion_adhesion_adgrb\"                                           #> [520] \"class_b2_adhesion_adhesion_adgrv\"                                           #> [521] \"class_a_rhodopsin_peptide_thyrotropin_releasing_hormone\"                    #> [522] \"class_a_rhodopsin_peptide_ghrelin\"                                          #> [523] \"paraoxonase\"                                                                #> [524] \"ribonuclease\"                                                               #> [525] \"adamts\"                                                                     #> [526] \"adamts_like\"                                                                #> [527] \"heparanase\"                                                                 #> [528] \"immune_serin_protease\"                                                      #> [529] \"serine_protease\"                                                            #> [530] \"secreted_enzyme\"                                                            #> [531] \"phospholipase\"                                                              #> [532] \"glutathione_peroxidase\"                                                     #> [533] \"biotinidase\"                                                                #> [534] \"hyaluronidase\"                                                              #> [535] \"collagen_degrading\"                                                         #> [536] \"cathepsin\"                                                                  #> [537] \"secreted_peptidase\"                                                         #> [538] \"m14_carboxypeptidase\"                                                       #> [539] \"m1_metallopeptidase\"                                                        #> [540] \"m16_metallopeptidase\"                                                       #> [541] \"m10_metallopeptidase\"                                                       #> [542] \"matrix_matalloproteinase\"                                                   #> [543] \"stromelysin\"                                                                #> [544] \"carboxypeptidase\"                                                           #> [545] \"polyserase\"                                                                 #> [546] \"basement membrane\"                                                          #> [547] \"collagen_proteoglycan\"                                                      #> [548] \"emi\"                                                                        #> [549] \"fibrillin\"                                                                  #> [550] \"hyalectan_proteoglycan\"                                                     #> [551] \"matrilin\"                                                                   #> [552] \"sibling\"                                                                    #> [553] \"small_leucine_rich_repeat_proteoglycan\"                                     #> [554] \"zona_pellucida_glycoprotein\"                                                #> [555] \"extracellular\"                                                              #> [556] \"iglon5\"                                                                     #> [557] \"intracellular\"                                                              #> [558] \"short_pentraxin\"                                                            #> [559] \"receptor_transporter\"                                                       #> [560] \"ly6_plur\"                                                                   #> [561] \"peptidoglycan\"                                                              #> [562] \"galectin\"                                                                   #> [563] \"secreted_receptor\"                                                          #> [564] \"activating_cofactor\"                                                        #> [565] \"inhibitory_cofactor\"                                                        #> [566] \"receptor_activity_modifying\"                                                #> [567] \"receptor_regulator\"                                                         #> [568] \"sparc_ecm_regulator\"                                                        #> [569] \"ecm_regulator\"                                                              #> [570] \"ligand_agonist\"                                                             #> [571] \"ligand_antagonist\"                                                          #> [572] \"tgf_beta_binding\"                                                           #> [573] \"sparc\"                                                                      #> [574] \"frizzled_related\"                                                           #> [575] \"secretoglobin\"                                                              #> [576] \"igf_binding\"                                                                #> [577] \"growth_factor_binder\"                                                       #> [578] \"ligand_regulator\"                                                           #> [579] \"cell_surface_ligand\"                                                        #> [580] \"b7_family\"                                                                  #> [581] \"neuregulin\"                                                                 #> [582] \"nectin\"                                                                     #> [583] \"mhc\"                                                                        #> [584] \"7d_cadherin\"                                                                #> [585] \"cadherin_related\"                                                           #> [586] \"major_cadherin\"                                                             #> [587] \"non_clustered_protocadherin\"                                                #> [588] \"type1_classical_cadherin\"                                                   #> [589] \"type2_classical_cadherin\"                                                   #> [590] \"clarin\"                                                                     #> [591] \"protocadherin\"                                                              #> [592] \"igcam_cxadr_like\"                                                           #> [593] \"iglon\"                                                                      #> [594] \"adhesion_gprotein_coupled_receptor\"                                         #> [595] \"cas_scaffold_intracell\"                                                     #> [596] \"mpz\"                                                                        #> [597] \"matrix_adhesion\"                                                            #> [598] \"cell_adhesion\"                                                              #> [599] \"icam\"                                                                       #> [600] \"myelin_adhesion\"                                                            #> [601] \"beta_protocadherin\"                                                         #> [602] \"classical_cadherin\"                                                         #> [603] \"desmosomal_cadherin\"                                                        #> [604] \"focal_adhesion\"                                                             #> [605] \"sarcoglycan\"                                                                #> [606] \"matrix_adhesion_regulator\"                                                  #> [607] \"cell_surface_enzyme\"                                                        #> [608] \"ectonucleotide_phosphatase\"                                                 #> [609] \"m13_metallopeptidase\"                                                       #> [610] \"cell_surface_peptidase\"                                                     #> [611] \"insulin_degrading\"                                                          #> [612] \"defensin\"                                                                   #> [613] \"lysozym\"                                                                    #> [614] \"galactosidase\"                                                              #> [615] \"chymotrypsin_like_elastase\"                                                 #> [616] \"kallikrein\"                                                                 #> [617] \"pappalysin\"                                                                 #> [618] \"inter_alpha_trypsin_inhibitor\"                                              #> [619] \"cystatin\"                                                                   #> [620] \"serpin\"                                                                     #> [621] \"tissue_inhibitor_of_metallopeptidases\"                                      #> [622] \"serine_peptidase_inhibitor\"                                                 #> [623] \"wap_four_disulfide_core_domain_containing\"                                  #> [624] \"secreted_peptidase_inhibitor\"                                               #> [625] \"transporter\"                                                                #> [626] \"aquaporin\"                                                                  #> [627] \"bestrophin\"                                                                 #> [628] \"abcc\"                                                                       #> [629] \"abcg\"                                                                       #> [630] \"hk_atpase\"                                                                  #> [631] \"sodium_potassium_atpase\"                                                    #> [632] \"cnnm_metal\"                                                                 #> [633] \"pannexin\"                                                                   #> [634] \"abc\"                                                                        #> [635] \"abca\"                                                                       #> [636] \"solute_carrier\"                                                             #> [637] \"magnesium\"                                                                  #> [638] \"sphingolipid\"                                                               #> [639] \"xk\"                                                                         #> [640] \"auxiliary_transport_unit\"                                                   #> [641] \"tmem30_aminophospholipid_flippase\"                                          #> [642] \"tmem16_phospholipid_scramblase\"                                             #> [643] \"slc13\"                                                                      #> [644] \"slc40\"                                                                      #> [645] \"slc15\"                                                                      #> [646] \"pkd1\"                                                                       #> [647] \"slc41\"                                                                      #> [648] \"slc46\"                                                                      #> [649] \"slc10\"                                                                      #> [650] \"slc\"                                                                        #> [651] \"slc35\"                                                                      #> [652] \"slc39\"                                                                      #> [653] \"steap\"                                                                      #> [654] \"slc24\"                                                                      #> [655] \"auxillarytransportunit\"                                                     #> [656] \"aquaporins\"                                                                 #> [657] \"calciumchannels\"                                                            #> [658] \"slc34\"                                                                      #> [659] \"slc19\"                                                                      #> [660] \"slc17\"                                                                      #> [661] \"chloride_channels\"                                                          #> [662] \"slc7\"                                                                       #> [663] \"slc37\"                                                                      #> [664] \"abcb\"                                                                       #> [665] \"channels\"                                                                   #> [666] \"slc4\"                                                                       #> [667] \"slc8\"                                                                       #> [668] \"slc1\"                                                                       #> [669] \"slc26\"                                                                      #> [670] \"slc22\"                                                                      #> [671] \"slc14\"                                                                      #> [672] \"slc3\"                                                                       #> [673] \"slc18\"                                                                      #> [674] \"slc16\"                                                                      #> [675] \"slc28\"                                                                      #> [676] \"slc2\"                                                                       #> [677] \"slc31\"                                                                      #> [678] \"slc5\"                                                                       #> [679] \"tweety\"                                                                     #> [680] \"hiat\"                                                                       #> [681] \"p_atpase\"                                                                   #> [682] \"serinc\"                                                                     #> [683] \"slc9\"                                                                       #> [684] \"catsper_two_p\"                                                              #> [685] \"slc36\"                                                                      #> [686] \"atp1b\"                                                                      #> [687] \"slc44\"                                                                      #> [688] \"slc6\"                                                                       #> [689] \"nkain\"                                                                      #> [690] \"slc45\"                                                                      #> [691] \"slc32\"                                                                      #> [692] \"two_p_k_channels\"                                                           #> [693] \"apc\"                                                                        #> [694] \"slc11\"                                                                      #> [695] \"kcnmb\"                                                                      #> [696] \"nipa\"                                                                       #> [697] \"sv2\"                                                                        #> [698] \"active\"                                                                     #> [699] \"sodiumchannels\"                                                             #> [700] \"slc33\"                                                                      #> [701] \"slc38\"                                                                      #> [702] \"slc23\"                                                                      #> [703] \"dmt\"                                                                        #> [704] \"slc29\"                                                                      #> [705] \"mfs\"                                                                        #> [706] \"clc\"                                                                        #> [707] \"potassium_channels\"                                                         #> [708] \"slc42_rh\"                                                                   #> [709] \"inwardlyrectifyingkchannel\"                                                 #> [710] \"slc12\"                                                                      #> [711] \"slc30\"                                                                      #> [712] \"cys_loop\"                                                                   #> [713] \"cacng\"                                                                      #> [714] \"sodiumchannelbeta\"                                                          #> [715] \"slco\"                                                                       #> [716] \"cacna2d\"                                                                    #> [717] \"slc43\"                                                                      #> [718] \"spinster\"                                                                   #> [719] \"slc20\"                                                                      #> [720] \"trp_channels\"                                                               #> [721] \"ion_channel\"                                                                #> [722] \"acid_sensing\"                                                               #> [723] \"calcium_voltage_gated\"                                                      #> [724] \"catsper\"                                                                    #> [725] \"chloride\"                                                                   #> [726] \"cyclic_nucleotide_gated\"                                                    #> [727] \"hydrogen_voltage_gated\"                                                     #> [728] \"orai_calcium\"                                                               #> [729] \"calcium_activated_potassium\"                                                #> [730] \"sodium_activated_potassium\"                                                 #> [731] \"two_pore_domain_potassium\"                                                  #> [732] \"voltage_gated_potassium\"                                                    #> [733] \"epithelial_sodium\"                                                          #> [734] \"sodium_leak\"                                                                #> [735] \"voltage_gated_sodium\"                                                       #> [736] \"transient_receptor_potential_cation\"                                        #> [737] \"transmembrane_channel_like\"                                                 #> [738] \"tweety_chloride\"                                                            #> [739] \"volume_regulated_anion\"                                                     #> [740] \"zinc_activated\"                                                             #> [741] \"sperm_associated_voltage_gated\"                                             #> [742] \"polycystin_calcium\"                                                         #> [743] \"tmem63_osmosensitive_cation\"                                                #> [744] \"tmem16_calcium_dependent_chloride\"                                          #> [745] \"voltage_gated_calcium\"                                                      #> [746] \"voltage_gated_chloride\"                                                     #> [747] \"atp_gated\"                                                                  #> [748] \"inward_rectifier_potassium\"                                                 #> [749] \"calcium_activated_potassium_b\"                                              #> [750] \"ligand_gated\"                                                               #> [751] \"potassium\"                                                                  #> [752] \"beta_sodium\"                                                                #> [753] \"sodium\"                                                                     #> [754] \"sodium_potassium\"                                                           #> [755] \"voltage_gated\"                                                              #> [756] \"b_lymphocyte_calcium\"                                                       #> [757] \"ion_channel_regulator\"                                                      #> [758] \"gap_junction\"                                                               #> [759] \"tight_junction\"                                                             #> [760] \"claudin\"                                                                    #> [761] \"adherens_junction\"                                                          #> [762] \"desmosome\"                                                                  #> [763] \"small_molecule_ligand_synthase\"                                             #> [764] \"crumbs_complex\"                                                             #> [765] \"engulfment_motility\"                                                        #> [766] \"fbar_actin_dynamics_endocytosis\"                                            #> [767] \"ferm_domain\"                                                                #> [768] \"ferlin\"                                                                     #> [769] \"fermitin\"                                                                   #> [770] \"flotillin\"                                                                  #> [771] \"arc\"                                                                        #> [772] \"interferon_regulator\"                                                       #> [773] \"cavin_caveolae\"                                                             #> [774] \"clathrin_coated_pit\"                                                        #> [775] \"collagen_galactosyltransferase\"                                             #> [776] \"junctophilin\"                                                               #> [777] \"lims1_adhesion\"                                                             #> [778] \"maguk_tight_junction\"                                                       #> [779] \"parin_adhesion_regulator\"                                                   #> [780] \"plakophilin_adhesion_regulator\"                                             #> [781] \"actin_regulation_adhesome\"                                                  #> [782] \"adhesion_cytoskeleton_adaptor\"                                              #> [783] \"intracellular_intercellular_related\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_generic_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a list of the generic categories in the intercell database\nof OmniPath — get_intercell_generic_categories","title":"Retrieves a list of the generic categories in the intercell database\nof OmniPath — get_intercell_generic_categories","text":"Retrieves list generic categories https://omnipath.org/intercell.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_generic_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a list of the generic categories in the intercell database\nof OmniPath — get_intercell_generic_categories","text":"","code":"get_intercell_generic_categories()"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_generic_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a list of the generic categories in the intercell database\nof OmniPath — get_intercell_generic_categories","text":"character vector different intercell main classes","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_generic_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves a list of the generic categories in the intercell database\nof OmniPath — get_intercell_generic_categories","text":"","code":"get_intercell_generic_categories() #>  [1] \"transmembrane\"                       \"transmembrane_predicted\"             #>  [3] \"peripheral\"                          \"plasma_membrane\"                     #>  [5] \"plasma_membrane_transmembrane\"       \"plasma_membrane_regulator\"           #>  [7] \"plasma_membrane_peripheral\"          \"secreted\"                            #>  [9] \"cell_surface\"                        \"ecm\"                                 #> [11] \"ligand\"                              \"receptor\"                            #> [13] \"secreted_enzyme\"                     \"secreted_peptidase\"                  #> [15] \"extracellular\"                       \"intracellular\"                       #> [17] \"receptor_regulator\"                  \"secreted_receptor\"                   #> [19] \"sparc_ecm_regulator\"                 \"ecm_regulator\"                       #> [21] \"ligand_regulator\"                    \"cell_surface_ligand\"                 #> [23] \"cell_adhesion\"                       \"matrix_adhesion\"                     #> [25] \"adhesion\"                            \"matrix_adhesion_regulator\"           #> [27] \"cell_surface_enzyme\"                 \"cell_surface_peptidase\"              #> [29] \"secreted_enyzme\"                     \"extracellular_peptidase\"             #> [31] \"secreted_peptidase_inhibitor\"        \"transporter\"                         #> [33] \"ion_channel\"                         \"ion_channel_regulator\"               #> [35] \"gap_junction\"                        \"tight_junction\"                      #> [37] \"adherens_junction\"                   \"desmosome\"                           #> [39] \"intracellular_intercellular_related\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","title":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","text":"Retrieves list databases https://omnipath.org/intercell.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","text":"","code":"get_intercell_resources(dataset = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","text":"dataset ignored query type","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","text":"character vector names databases","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_intercell_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves a list of intercellular communication resources available in\nOmniPath — get_intercell_resources","text":"","code":"get_intercell_resources() #>  [1] \"Adhesome\"             \"Almen2009\"            \"Baccin2019\"           #>  [4] \"CSPA\"                 \"CellCall\"             \"CellCellInteractions\" #>  [7] \"CellChatDB\"           \"CellPhoneDB\"          \"CellTalkDB\"           #> [10] \"Cellinker\"            \"ComPPI\"               \"DGIdb\"                #> [13] \"EMBRACE\"              \"GO_Intercell\"         \"GPCRdb\"               #> [16] \"Guide2Pharma\"         \"HGNC\"                 \"HPA_secretome\"        #> [19] \"HPMR\"                 \"ICELLNET\"             \"Integrins\"            #> [22] \"Kirouac2010\"          \"LOCATE\"               \"LRdb\"                 #> [25] \"MCAM\"                 \"Matrisome\"            \"MatrixDB\"             #> [28] \"Membranome\"           \"OPM\"                  \"OmniPath\"             #> [31] \"Phobius\"              \"Ramilowski2015\"       \"Ramilowski_location\"  #> [34] \"SignaLink_function\"   \"Surfaceome\"           \"TopDB\"                #> [37] \"UniProt_keyword\"      \"UniProt_location\"     \"UniProt_topology\"     #> [40] \"Zhong2015\"            \"connectomeDB2020\"     \"iTALK\"                #> [43] \"scConnect\"            \"talklr\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_ontology_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Access an ontology database — get_ontology_db","title":"Access an ontology database — get_ontology_db","text":"Retrieves ontology database relations desired data structure. database automatically loaded requested data structure constructed necessary. databases stay loaded certain time period (see option omnipath.db_lifetime). Hence first one repeated calls function might take long subsequent ones really quick.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_ontology_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access an ontology database — get_ontology_db","text":"","code":"get_ontology_db(key, rel_fmt = \"tbl\", child_parents = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_ontology_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access an ontology database — get_ontology_db","text":"key Character: key ontology database. available keys see omnipath_show_db. rel_fmt Character: data structure ontology relations. Posible values 1) \"tbl\" data frame, 2) \"lst\" list 3) \"gra\" graph. child_parents Logical: whether ontology relations point child parents (TRUE) parent children (FALSE).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_ontology_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access an ontology database — get_ontology_db","text":"list following elements: 1) \"names\" table     term IDs names; 2) \"namespaces\" table connect term IDs     namespaces belong ; 3) \"relations\" table     relations terms parent terms; 4) \"subsets\"     table terms subsets part ; 5) \"obsolete\"     character vector terms labeled obsolete.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_ontology_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access an ontology database — get_ontology_db","text":"","code":"go <- get_ontology_db('go_basic', child_parents = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the available resources for a given query type — get_resources","title":"Retrieve the available resources for a given query type — get_resources","text":"Collects names resources available OmniPath certain query type optionally dataset within .","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the available resources for a given query type — get_resources","text":"","code":"get_resources(query_type, datasets = NULL, generic_categories = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the available resources for a given query type — get_resources","text":"query_type one query types `interactions`, `enz_sub`, `complexes`, `annotations` `intercell` datasets currently within `interactions` query type , multiple datasets available: `omnipath`, `kinaseextra`, `pathwayextra`, `ligrecextra`, `dorothea`, `tf_target`, `tf_mirna`, `mirnatarget` `lncrna_mrna`. generic_categories `intercell` query type, restrict search generic categories e.g. `ligand` `receptor`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the available resources for a given query type — get_resources","text":"character vector resource names","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the available resources for a given query type — get_resources","text":"","code":"get_resources(query_type = 'interactions') #>   [1] \"ABS\"                         \"ACSN\"                        #>   [3] \"ACSN_SignaLink3\"             \"ARACNe-GTEx_DoRothEA\"        #>   [5] \"ARN\"                         \"Adhesome\"                    #>   [7] \"AlzPathway\"                  \"BEL-Large-Corpus_ProtMapper\" #>   [9] \"Baccin2019\"                  \"BioGRID\"                     #>  [11] \"CA1\"                         \"CancerCellMap\"               #>  [13] \"CancerDrugsDB\"               \"CellCall\"                    #>  [15] \"CellChatDB\"                  \"CellChatDB-cofactors\"        #>  [17] \"CellPhoneDB\"                 \"CellPhoneDB_Cellinker\"       #>  [19] \"CellTalkDB\"                  \"Cellinker\"                   #>  [21] \"DEPOD\"                       \"DIP\"                         #>  [23] \"DLRP_Cellinker\"              \"DLRP_talklr\"                 #>  [25] \"DOMINO\"                      \"DeathDomain\"                 #>  [27] \"DoRothEA\"                    \"DoRothEA-reviews_DoRothEA\"   #>  [29] \"ELM\"                         \"EMBRACE\"                     #>  [31] \"ENCODE-distal\"               \"ENCODE-proximal\"             #>  [33] \"ENCODE_tf-mirna\"             \"FANTOM4_DoRothEA\"            #>  [35] \"Fantom5_LRdb\"                \"Guide2Pharma\"                #>  [37] \"Guide2Pharma_CellPhoneDB\"    \"Guide2Pharma_Cellinker\"      #>  [39] \"Guide2Pharma_LRdb\"           \"Guide2Pharma_talklr\"         #>  [41] \"HOCOMOCO_DoRothEA\"           \"HPMR\"                        #>  [43] \"HPMR_Cellinker\"              \"HPMR_LRdb\"                   #>  [45] \"HPMR_talklr\"                 \"HPRD\"                        #>  [47] \"HPRD-phos\"                   \"HPRD_KEA\"                    #>  [49] \"HPRD_LRdb\"                   \"HPRD_MIMP\"                   #>  [51] \"HPRD_talklr\"                 \"HTRIdb\"                      #>  [53] \"HTRIdb_DoRothEA\"             \"HuRI\"                        #>  [55] \"I2D_CellPhoneDB\"             \"ICELLNET\"                    #>  [57] \"IMEx_CellPhoneDB\"            \"InnateDB\"                    #>  [59] \"InnateDB-All_CellPhoneDB\"    \"InnateDB_CellPhoneDB\"        #>  [61] \"InnateDB_SignaLink3\"         \"IntAct\"                      #>  [63] \"IntAct_CellPhoneDB\"          \"IntAct_DoRothEA\"             #>  [65] \"JASPAR_DoRothEA\"             \"KEA\"                         #>  [67] \"KEGG-MEDICUS\"                \"Kinexus_KEA\"                 #>  [69] \"Kirouac2010\"                 \"LMPID\"                       #>  [71] \"LRdb\"                        \"Li2012\"                      #>  [73] \"Lit-BM-17\"                   \"LncRNADisease\"               #>  [75] \"MIMP\"                        \"MINT_CellPhoneDB\"            #>  [77] \"MPPI\"                        \"Macrophage\"                  #>  [79] \"MatrixDB\"                    \"MatrixDB_CellPhoneDB\"        #>  [81] \"NCI-PID_ProtMapper\"          \"NFIRegulomeDB_DoRothEA\"      #>  [83] \"NRF2ome\"                     \"NetPath\"                     #>  [85] \"NetworKIN_KEA\"               \"ORegAnno\"                    #>  [87] \"ORegAnno_DoRothEA\"           \"PAZAR\"                       #>  [89] \"PAZAR_DoRothEA\"              \"PhosphoNetworks\"             #>  [91] \"PhosphoPoint\"                \"PhosphoSite\"                 #>  [93] \"PhosphoSite_KEA\"             \"PhosphoSite_MIMP\"            #>  [95] \"PhosphoSite_ProtMapper\"      \"PhosphoSite_noref\"           #>  [97] \"ProtMapper\"                  \"REACH_ProtMapper\"            #>  [99] \"RLIMS-P_ProtMapper\"          \"Ramilowski2015\"              #> [101] \"Ramilowski2015_Baccin2019\"   \"ReMap_DoRothEA\"              #> [103] \"Reactome_LRdb\"               \"Reactome_ProtMapper\"         #> [105] \"Reactome_SignaLink3\"         \"RegNetwork_DoRothEA\"         #> [107] \"SIGNOR\"                      \"SIGNOR_ProtMapper\"           #> [109] \"SPIKE\"                       \"STRING_talklr\"               #> [111] \"SignaLink3\"                  \"Sparser_ProtMapper\"          #> [113] \"TCRcuration_SignaLink3\"      \"TFactS_DoRothEA\"             #> [115] \"TFe_DoRothEA\"                \"TRED_DoRothEA\"               #> [117] \"TRIP\"                        \"TRRD_DoRothEA\"               #> [119] \"TRRUST_DoRothEA\"             \"TransmiR\"                    #> [121] \"UniProt_CellPhoneDB\"         \"UniProt_LRdb\"                #> [123] \"Wang\"                        \"Wojtowicz2020\"               #> [125] \"connectomeDB2020\"            \"dbPTM\"                       #> [127] \"iPTMnet\"                     \"iTALK\"                       #> [129] \"lncrnadb\"                    \"miR2Disease\"                 #> [131] \"miRDeathDB\"                  \"miRTarBase\"                  #> [133] \"miRecords\"                   \"ncRDeathDB\"                  #> [135] \"phosphoELM\"                  \"phosphoELM_KEA\"              #> [137] \"phosphoELM_MIMP\"             \"scConnect\"                   #> [139] \"talklr\""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_signed_ptms.html","id":null,"dir":"Reference","previous_headings":"","what":"Signs for enzyme-substrate interactions — get_signed_ptms","title":"Signs for enzyme-substrate interactions — get_signed_ptms","text":"Enzyme-substrate data contain sign (activation/inhibition), generate information based interaction network.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_signed_ptms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signs for enzyme-substrate interactions — get_signed_ptms","text":"","code":"get_signed_ptms(   enzsub = import_omnipath_enzsub(),   interactions = import_omnipath_interactions() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/get_signed_ptms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signs for enzyme-substrate interactions — get_signed_ptms","text":"enzsub Enzyme-substrate data frame generated import_omnipath_enzsub interactions interaction data frame generated import_omnipath_interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/get_signed_ptms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signs for enzyme-substrate interactions — get_signed_ptms","text":"Data frame enzyme-substrate relationships is_inhibition     is_stimulation columns.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/get_signed_ptms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signs for enzyme-substrate interactions — get_signed_ptms","text":"","code":"enzsub <- import_omnipath_enzsub(resources = c('PhosphoSite', 'SIGNOR')) interactions <- import_omnipath_interactions() enzsub <- get_signed_ptms(enzsub, interactions)"},{"path":"https://saezlab.github.io/OmnipathR/reference/giant_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Giant component of a graph — giant_component","title":"Giant component of a graph — giant_component","text":"igraph graph object returns giant component.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/giant_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Giant component of a graph — giant_component","text":"","code":"giant_component(graph)"},{"path":"https://saezlab.github.io/OmnipathR/reference/giant_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Giant component of a graph — giant_component","text":"graph igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/giant_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Giant component of a graph — giant_component","text":"igraph graph object containing giant component.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/giant_component.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Giant component of a graph — giant_component","text":"","code":"interactions <- import_post_translational_interactions() graph <- interaction_graph(interactions) graph_gc <- giant_component(graph)"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene annotations from Gene Ontology — go_annot_download","title":"Gene annotations from Gene Ontology — go_annot_download","text":"Gene Ontology ontology gene subcellular localizations, molecular functions involvement biological processes. Gene products across many organisms annotated ontology terms. function downloads gene-ontology term associations certain model organisms organisms. description columns see http://geneontology.org/docs/go-annotation-file-gaf-format-2.2/.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene annotations from Gene Ontology — go_annot_download","text":"","code":"go_annot_download(organism = \"human\", aspects = c(\"C\", \"F\", \"P\"), slim = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene annotations from Gene Ontology — go_annot_download","text":"organism Character: either \"chicken\", \"cow\", \"dog\", \"human\", \"pig\" \"uniprot_all\". aspects Character vector following elements: \"C\" (cellular component), \"F\" (molecular function) \"P\" (biological process). Gene Ontology three separate ontologies called three aspects. parameter can control aspects include output. slim Character: NULL, name GOsubset (slim). instead full GO annotation, slim annotation returned. See details go_annot_slim. TRUE, \"generic\" slim used.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene annotations from Gene Ontology — go_annot_download","text":"tibble (data frame) annotations provided     database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene annotations from Gene Ontology — go_annot_download","text":"","code":"goa_data <- go_annot_download() goa_data #> # A tibble: 635,753 × 17 #>    db        db_ob…¹ db_ob…² quali…³ go_id db_ref evide…⁴ with_…⁵ aspect db_ob…⁶ #>    <fct>     <chr>   <chr>   <fct>   <chr> <chr>  <fct>   <chr>   <fct>  <chr>   #>  1 UniProtKB A0A024… NUDT4B  enables GO:0… GO_RE… IEA     UniPro… F      Diphos… #>  2 UniProtKB A0A024… NUDT4B  enables GO:0… GO_RE… IEA     UniPro… F      Diphos… #>  3 UniProtKB A0A024… NUDT4B  locate… GO:0… GO_RE… IDA     NA      C      Diphos… #>  4 UniProtKB A0A075… IGKV3-7 involv… GO:0… GO_RE… IEA     UniPro… P      Probab… #>  5 UniProtKB A0A075… IGKV3-7 locate… GO:0… GO_RE… IEA     UniPro… C      Probab… #>  6 UniProtKB A0A075… IGKV3-7 part_of GO:0… GO_RE… IEA     UniPro… C      Probab… #>  7 UniProtKB A0A075… IGKV1D… involv… GO:0… GO_RE… IEA     UniPro… P      Probab… #>  8 UniProtKB A0A075… IGKV1D… locate… GO:0… GO_RE… IEA     UniPro… C      Probab… #>  9 UniProtKB A0A075… IGKV1D… part_of GO:0… GO_RE… IEA     UniPro… C      Probab… #> 10 UniProtKB A0A075… IGLV4-… involv… GO:0… GO_RE… IEA     UniPro… P      Immuno… #> # … with 635,743 more rows, 7 more variables: db_object_synonym <chr>, #> #   db_object_type <fct>, taxon <fct>, date <date>, assigned_by <fct>, #> #   annotation_extension <chr>, gene_product_from_id <chr>, and abbreviated #> #   variable names ¹​db_object_id, ²​db_object_symbol, ³​qualifier, #> #   ⁴​evidence_code, ⁵​with_or_from, ⁶​db_object_name # # A tibble: 606,840 x 17 #    db       db_object_id db_object_symbol qualifier go_id   db_ref #    <fct>    <chr>        <chr>            <fct>     <chr>   <chr> #  1 UniProt. A0A024RBG1   NUDT4B           NA        GO:000. GO_REF:00. #  2 UniProt. A0A024RBG1   NUDT4B           NA        GO:000. GO_REF:00. #  3 UniProt. A0A024RBG1   NUDT4B           NA        GO:004. GO_REF:00. #  4 UniProt. A0A024RBG1   NUDT4B           NA        GO:005. GO_REF:00. #  5 UniProt. A0A024RBG1   NUDT4B           NA        GO:005. GO_REF:00. # # . with 606,830 more rows, and 11 more variables: # #   evidence_code <fct>, with_or_from <chr>, aspect <fct>, # #   db_object_name <chr>, db_object_synonym <chr>, # #   db_object_type <fct>, taxon <fct>, date <date>, # #   assigned_by <fct>, annotation_extension <chr>, # #   gene_product_from_id <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":null,"dir":"Reference","previous_headings":"","what":"GO slim gene annotations — go_annot_slim","title":"GO slim gene annotations — go_annot_slim","text":"GO slims subsets full GO \"give broad overview ontology content without detail specific fine grained terms\". order annotate genes GO slim terms, take annotations search ancestors terms root ontology tree. ancestors select terms part slim subset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GO slim gene annotations — go_annot_slim","text":"","code":"go_annot_slim(   organism = \"human\",   slim = \"generic\",   aspects = c(\"C\", \"F\", \"P\"),   cache = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GO slim gene annotations — go_annot_slim","text":"organism Character: either \"chicken\", \"cow\", \"dog\", \"human\", \"pig\" \"uniprot_all\". slim Character: GO subset (GO slim) name. Available GO slims : \"agr\" (Alliance Genomics Resources), \"generic\", \"aspergillus\", \"candida\", \"drosophila\", \"chembl\", \"metagenomic\", \"mouse\", \"plant\", \"pir\" (Protein Information Resource), \"pombe\" \"yeast\". aspects Character vector following elements: \"C\" (cellular component), \"F\" (molecular function) \"P\" (biological process). Gene Ontology three separate ontologies called three aspects. parameter can control aspects include output. cache Logical: Load result cache available.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GO slim gene annotations — go_annot_slim","text":"tibble (data frame) genes annotated ontology terms     GO slim (subset).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GO slim gene annotations — go_annot_slim","text":"Building GO slim resource intensive current implementation. human annotation generic GO slim might take around 20 minutes. result saved cache next time loading data really quick. cache option FALSE data built fresh (annotation ontology files still might come cache), newly build GO slim overwrite cache instance.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/go_annot_slim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GO slim gene annotations — go_annot_slim","text":"","code":"if (FALSE) { goslim <- go_annot_slim(organism = 'human', slim = 'generic') goslim # # A tibble: 276,371 x 8 #    db     db_object_id db_object_symbol go_id aspect db_object_name #    <fct>  <chr>        <chr>            <chr> <fct>  <chr> #  1 UniPr. A0A024RBG1   NUDT4B           GO:0. F      Diphosphoinosito. #  2 UniPr. A0A024RBG1   NUDT4B           GO:0. F      Diphosphoinosito. #  3 UniPr. A0A024RBG1   NUDT4B           GO:0. C      Diphosphoinosito. #  4 UniPr. A0A024RBG1   NUDT4B           GO:0. C      Diphosphoinosito. #  5 UniPr. A0A024RBG1   NUDT4B           GO:0. C      Diphosphoinosito. # # . with 276,366 more rows, and 2 more variables: # #   db_object_synonym <chr>, db_object_type <fct> }"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_ontology_download.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gene Ontology tree — go_ontology_download","title":"The Gene Ontology tree — go_ontology_download","text":"Gene Ontology tree","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_ontology_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gene Ontology tree — go_ontology_download","text":"","code":"go_ontology_download(   basic = TRUE,   tables = TRUE,   subset = NULL,   relations = c(\"is_a\", \"part_of\", \"occurs_in\", \"regulates\", \"positively_regulates\",     \"negatively_regulates\") )"},{"path":"https://saezlab.github.io/OmnipathR/reference/go_ontology_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gene Ontology tree — go_ontology_download","text":"basic Logical: use basic full version GO. written GO home page: \"basic version GO filtered graph guaranteed acyclic annotations can propagated graph. relations included , part , regulates, negatively regulates positively regulates. version excludes relationships cross 3 GO hierarchies. version used GO-based annotation tools.\" tables result return data frames nested lists. later can converted necessary. However converting table list faster. subset Character: GO subset (GO slim) name. GO slims subsets full GO \"give broad overview ontology content without detail specific fine grained terms\". option, NULL, overrides basic parameter. Available GO slims : \"agr\" (Alliance Genomics Resources), \"generic\", \"aspergillus\", \"candida\", \"drosophila\", \"chembl\", \"metagenomic\", \"mouse\", \"plant\", \"pir\" (Protein Information Resource), \"pombe\" \"yeast\". relations Character vector: relations include processed data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_ontology_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Gene Ontology tree — go_ontology_download","text":"list following elements: 1) \"names\" list     terms names names values; 2) \"namespaces\" list     terms names namespaces values; 3) \"relations\" list     relations terms: terms keys, values lists     relations names character vectors related terms     values; 4) \"subsets\" list terms keys character     vectors subset names values (NULL term     belong subset); 5) \"obsolete\" character vector     terms labeled obsolete. tables parameter TRUE, \"names\", \"namespaces\", \"relations\"     \"subsets\" data frames (tibbles).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/go_ontology_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Gene Ontology tree — go_ontology_download","text":"","code":"# retrieve the generic GO slim, a small subset of the full ontology go <- go_ontology_download(subset = 'generic')"},{"path":"https://saezlab.github.io/OmnipathR/reference/guide2pharma_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads interactions from the Guide to Pharmacology database — guide2pharma_download","title":"Downloads interactions from the Guide to Pharmacology database — guide2pharma_download","text":"Downloads ligand-receptor interactions Guide Pharmacology (IUPHAR/BPS) database (https://www.guidetopharmacology.org/).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/guide2pharma_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads interactions from the Guide to Pharmacology database — guide2pharma_download","text":"","code":"guide2pharma_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/guide2pharma_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads interactions from the Guide to Pharmacology database — guide2pharma_download","text":"tibble (data frame) interactions provided database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/guide2pharma_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads interactions from the Guide to Pharmacology database — guide2pharma_download","text":"","code":"g2p_data <- guide2pharma_download() g2p_data #> # A tibble: 22,785 × 41 #>    target        targe…¹ targe…² targe…³ targe…⁴ targe…⁵ targe…⁶ targe…⁷ targe…⁸ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 12S-LOX       1387    NA      ALOX12  P18054  ENSG00… NA      NA      NA      #>  2 15-LOX-1      1388    NA      ALOX15  P16050  ENSG00… NA      NA      NA      #>  3 15-LOX-1      1388    NA      ALOX15  P16050  ENSG00… NA      NA      NA      #>  4 15-LOX-1      1388    NA      ALOX15  P16050  ENSG00… NA      NA      NA      #>  5 15-LOX-1      1388    NA      ALOX15  P16050  ENSG00… NA      NA      NA      #>  6 15-LOX-2      1389    NA      ALOX15B O15296  ENSG00… NA      NA      NA      #>  7 15-LOX-2      1389    NA      ALOX15B O15296  ENSG00… NA      NA      NA      #>  8 3-Mercaptopy… 1446    NA      MPST    P25325  ENSG00… NA      NA      NA      #>  9 3-phosphoino… 1519    NA      PDPK1   O15530  ENSG00… NA      NA      NA      #> 10 3-phosphoino… 1519    NA      PDPK1   O15530  ENSG00… NA      NA      NA      #> # … with 22,775 more rows, 32 more variables: target_ligand_gene_symbol <chr>, #> #   target_ligand_uniprot_id <chr>, target_ligand_ensembl_gene_id <chr>, #> #   target_ligand_pubchem_sid <chr>, target_species <chr>, ligand <chr>, #> #   ligand_id <dbl>, ligand_subunit_ids <chr>, ligand_gene_symbol <chr>, #> #   ligand_species <chr>, ligand_pubchem_sid <chr>, approved <lgl>, type <chr>, #> #   action <chr>, action_comment <chr>, selectivity <chr>, endogenous <lgl>, #> #   primary_target <lgl>, concentration_range <chr>, affinity_units <chr>, … # # A tibble: 21,586 x 38 #    target target_id target_gene_sym. target_uniprot target_ensembl_. #    <chr>      <dbl> <chr>            <chr>          <chr> #  1 12S-L.      1387 ALOX12           P18054         ENSG00000108839 #  2 15-LO.      1388 ALOX15           P16050         ENSG00000161905 #  3 15-LO.      1388 ALOX15           P16050         ENSG00000161905 #  4 15-LO.      1388 ALOX15           P16050         ENSG00000161905 # # . with 21,576 more rows, and 33 more variables: target_ligand <chr>, # #   target_ligand_id <chr>, target_ligand_gene_symbol <chr>, # ... (truncated)"},{"path":"https://saezlab.github.io/OmnipathR/reference/harmonizome_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads a Harmonizome network dataset — harmonizome_download","title":"Downloads a Harmonizome network dataset — harmonizome_download","text":"Downloads single network dataset Harmonizome https://maayanlab.cloud/Harmonizome.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/harmonizome_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads a Harmonizome network dataset — harmonizome_download","text":"","code":"harmonizome_download(dataset)"},{"path":"https://saezlab.github.io/OmnipathR/reference/harmonizome_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads a Harmonizome network dataset — harmonizome_download","text":"dataset dataset part URL. Please refer download section Harmonizome webpage.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/harmonizome_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads a Harmonizome network dataset — harmonizome_download","text":"Data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/harmonizome_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads a Harmonizome network dataset — harmonizome_download","text":"","code":"harmonizome_data <- harmonizome_download('phosphositeplus') harmonizome_data #> # A tibble: 6,013 × 7 #>    source   source_desc source_id target target_desc target_id weight #>    <chr>    <chr>           <dbl> <chr>  <chr>           <dbl>  <dbl> #>  1 TP53     na               7157 STK17A na               9263      1 #>  2 TP53     na               7157 TP53RK na             112858      1 #>  3 TP53     na               7157 SMG1   na              23049      1 #>  4 UPF1     na               5976 SMG1   na              23049      1 #>  5 TP53     na               7157 TAF1   na               6872      1 #>  6 GTF2A1   na               2957 TAF1   na               6872      1 #>  7 TAF7     na               6879 TAF1   na               6872      1 #>  8 TP53     na               7157 NUAK1  na               9891      1 #>  9 PPP1R12A na               4659 NUAK1  na               9891      1 #> 10 CASP6    na                839 NUAK1  na               9891      1 #> # … with 6,003 more rows # # A tibble: 6,013 x 7 #    source   source_desc source_id target target_desc target_id weight #    <chr>    <chr>           <dbl> <chr>  <chr>           <dbl>  <dbl> #  1 TP53     na               7157 STK17A na               9263      1 #  2 TP53     na               7157 TP53RK na             112858      1 #  3 TP53     na               7157 SMG1   na              23049      1 #  4 UPF1     na               5976 SMG1   na              23049      1 # # . with 6,003 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/has_extra_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","title":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","text":"Tells interaction data frame extra_attrs column","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/has_extra_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","text":"","code":"has_extra_attrs(data)"},{"path":"https://saezlab.github.io/OmnipathR/reference/has_extra_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","text":"data interaction data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/has_extra_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","text":"Logical: TRUE data frame \"extra_attrs\" column.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/has_extra_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tells if an interaction data frame has an extra_attrs column — has_extra_attrs","text":"","code":"i <- import_omnipath_interactions(fields = 'extra_attrs') has_extra_attrs(i) #> [1] TRUE"},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthology table for a pair of organisms — homologene_download","title":"Orthology table for a pair of organisms — homologene_download","text":"Orthologous pairs genes pair organisms NCBI HomoloGene, using one identifier type.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthology table for a pair of organisms — homologene_download","text":"","code":"homologene_download(   target = 10090L,   source = 9606L,   id_type = \"genesymbol\",   hgroup_size = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthology table for a pair of organisms — homologene_download","text":"target Character integer: name ID target organism. source Character integer: name ID source organism. id_type Symbol character: identifier type, possible values \"genesymbol\", \"entrez\", \"refseqp\" \"gi\". hgroup_size Logical: include column size homology groups. column distinguishes one--one one--many many--many mappings.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthology table for a pair of organisms — homologene_download","text":"data frame orthologous identifiers two organisms.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orthology table for a pair of organisms — homologene_download","text":"operation function symmetric, *source* *target* interchangeable determine column layout output. column \"hgroup\" numberic identifier homology groups. groups consist one pair orthologous genes (one--one mapping), multiple ones (one--many many--many mappings).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthology table for a pair of organisms — homologene_download","text":"","code":"chimp_human <- homologene_download(chimpanzee, human, refseqp) chimp_human #> # A tibble: 17,737 × 3 #>    hgroup refseqp_source refseqp_target #>     <int> <chr>          <chr>          #>  1      3 NP_000007.1    NP_001104286.1 #>  2      5 NP_000009.1    XP_003315394.1 #>  3      6 NP_000010.1    XP_508738.2    #>  4      7 NP_001096.1    XP_001145316.1 #>  5      9 NP_000014.1    XP_523792.2    #>  6     12 NP_000017.1    XP_003317301.1 #>  7     13 NP_000018.2    XP_517545.2    #>  8     14 NP_000020.1    NP_001009032.1 #>  9     16 NP_000022.3    XP_001152445.2 #> 10     17 NP_000023.2    XP_528998.2    #> # … with 17,727 more rows # # A tibble: 17,737 × 3 #    hgroup refseqp_source refseqp_target #     <int> <chr>          <chr> #  1      3 NP_000007.1    NP_001104286.1 #  2      5 NP_000009.1    XP_003315394.1 #  3      6 NP_000010.1    XP_508738.2 #  4      7 NP_001096.1    XP_001145316.1 #  5      9 NP_000014.1    XP_523792.2 # # . with 17,732 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthology data from NCBI HomoloGene — homologene_raw","title":"Orthology data from NCBI HomoloGene — homologene_raw","text":"Retrieves NCBI HomoloGene data without processing. Processed tables useful purposes, see functions provide . Genes various organisms grouped homology groups (\"hgroup\" column). Organisms identified NCBI Taxonomy IDs, genes identified four different identifier types.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthology data from NCBI HomoloGene — homologene_raw","text":"","code":"homologene_raw()"},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthology data from NCBI HomoloGene — homologene_raw","text":"data frame provided NCBI HomoloGene.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthology data from NCBI HomoloGene — homologene_raw","text":"","code":"hg <- homologene_raw() hg #> # A tibble: 275,237 × 6 #>    hgroup ncbi_taxid entrez  genesymbol      gi        refseqp        #>     <int>      <int> <chr>   <chr>           <chr>     <chr>          #>  1      3       9606 34      ACADM           4557231   NP_000007.1    #>  2      3       9598 469356  ACADM           160961497 NP_001104286.1 #>  3      3       9544 705168  ACADM           109008502 XP_001101274.1 #>  4      3       9615 490207  ACADM           545503811 XP_005622188.1 #>  5      3       9913 505968  ACADM           115497690 NP_001068703.1 #>  6      3      10090 11364   Acadm           6680618   NP_031408.1    #>  7      3      10116 24158   Acadm           292494885 NP_058682.2    #>  8      3       7955 406283  acadm           390190229 NP_998175.2    #>  9      3       7227 38864   CG12262         24660351  NP_648149.1    #> 10      3       7165 1276346 AgaP_AGAP005662 58387602  XP_315683.2    #> # … with 275,227 more rows # # A tibble: 275,237 × 6 #    hgroup ncbi_taxid entrez  genesymbol  gi        refseqp #     <int>      <int> <chr>   <chr>       <chr>     <chr> #  1      3       9606 34      ACADM       4557231   NP_000007.1 #  2      3       9598 469356  ACADM       160961497 NP_001104286.1 #  3      3       9544 705168  ACADM       109008502 XP_001101274.1 #  4      3       9615 490207  ACADM       545503811 XP_005622188.1 #  5      3       9913 505968  ACADM       115497690 NP_001068703.1 # # . with 275,232 more rows  # which organisms are available? common_name(unique(hg$ncbi_taxid)) #>  [1] \"Human\"                               \"Chimpanzee\"                          #>  [3] \"Macaque\"                             \"Dog\"                                 #>  [5] \"Cow\"                                 \"Mouse\"                               #>  [7] \"Rat\"                                 \"Zebrafish\"                           #>  [9] \"D. melanogaster\"                     NA                                    #> [11] \"Caenorhabditis elegans (PRJNA13758)\" \"Tropical clawed frog\"                #> [13] \"Chicken (Red Jungle fowl)\"           NA                                    #> [15] NA                                    NA                                    #> [17] NA                                    NA                                    #> [19] NA                                    NA                                    #> [21] NA                                    #  [1] \"Human\" \"Chimpanzee\" \"Macaque\" \"Dog\" \"Cow\" \"Mouse\" \"Rat\" \"Zebrafish\" #  [9] \"D. melanogaster\" \"Caenorhabditis elegans (PRJNA13758)\" # [11] \"Tropical clawed frog\" \"Chicken\" # ...and 9 more organisms with missing English names."},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_uniprot_orthology.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthology table with UniProt IDs — homologene_uniprot_orthology","title":"Orthology table with UniProt IDs — homologene_uniprot_orthology","text":"Orthologous pairs UniProt IDs pair organisms, based NCBI HomoloGene data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_uniprot_orthology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthology table with UniProt IDs — homologene_uniprot_orthology","text":"","code":"homologene_uniprot_orthology(target = 10090L, source = 9606L, by = entrez, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_uniprot_orthology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthology table with UniProt IDs — homologene_uniprot_orthology","text":"target Character integer: name ID target organism. source Character integer: name ID source organism. Symbol character: identifier type NCBI HomoloGene use. Possible values \"refseqp\", \"entrez\", \"genesymbol\", \"gi\". ... arguments passed translate_ids.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_uniprot_orthology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthology table with UniProt IDs — homologene_uniprot_orthology","text":"data frame orthologous pairs UniProt IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homologene_uniprot_orthology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthology table with UniProt IDs — homologene_uniprot_orthology","text":"","code":"homologene_uniprot_orthology(by = genesymbol) #> # A tibble: 14,236 × 2 #>    source target #>    <chr>  <chr>  #>  1 P11310 P45952 #>  2 P49748 P50544 #>  3 P24752 Q8QZT1 #>  4 Q04771 P37172 #>  5 Q16586 P82350 #>  6 P30566 P54822 #>  7 P20933 Q64191 #>  8 P01019 P11859 #>  9 P13716 P10518 #> 10 P22557 P08680 #> # … with 14,226 more rows # # A tibble: 14,235 × 2 #    source target #    <chr>  <chr> #  1 P11310 P45952 #  2 P49748 P50544 #  3 P24752 Q8QZT1 #  4 Q04771 P37172 #  5 Q16586 P82350 # # . with 14,230 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/homology_translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Homology translation — homology_translate","title":"Homology translation — homology_translate","text":"Translates identifiers organisms using orthology data Ensembl.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homology_translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Homology translation — homology_translate","text":"","code":"homology_translate(   d,   ...,   target = 10090,   source = 9606,   ensembl_orthology_types = c(\"one2one\", \"one2many\"),   ensembl_min_orthology_confidence = 1L )"},{"path":"https://saezlab.github.io/OmnipathR/reference/homology_translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Homology translation — homology_translate","text":"d Data frame character vector. ... Column specification: zero three arguments, without names. NSE supported. Arguments beyond third one ignored. name arguments column names,         values identifier types, either character symbols. Arguments without names assumed column names         identifier types, e.g. column called \"uniprot\" containing         UniProt IDs. first column spefication describes source column,         identifiers source organism. column must         exist data input homology         translation. column removed returned         data frame. case \"uniprot\", source column name can anything,         contains UniProt IDs handled accordingly. case \"genesymbol\", enough source column name         contains word \"genesymbol\", e.g. \"ligand_genesymbol\". second column spefication describes target column,         name identifier type. provided,         column name type source Optionally third column can specified another         identifier type. convenient want, example         also Gene Symbols along UniProt IDs. specification provided, input assumed         column named either \"uniprot\" \"genesymbol\",         character vector UniProt IDs Gene Symbols. target Character integer: name identifier target organism (one translate ). default target organism mouse. source Character integer: name identifier source organism (one IDs input data belong ). default source organism human. ensembl_orthology_types Character vector: use orthology relationship types. Possible values \"one2one\", \"one2many\" \"many2many\". ensembl_min_orthology_confidence Integer: use orthology relations least level confidence. Ensembl confidence can either 0 1, values make sense. 0, orthology records used, 1, ones higher confidence.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homology_translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Homology translation — homology_translate","text":"Data frame translated columns character vector     translated identifiers.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/homology_translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Homology translation — homology_translate","text":"","code":"if (FALSE) { # these proteins are ULK1, IFNG, EGFR, TGFB1, IL1R1 human_uniprots <- c(\"O75385\", \"P01579\", \"P00533\", \"P01137\", \"P14778\") homology_translate(human_uniprots) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/hpo_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads protein annotations from Human Phenotype Ontology — hpo_download","title":"Downloads protein annotations from Human Phenotype Ontology — hpo_download","text":"Human Phenotype Ontology (HPO) provides standardized vocabulary phenotypic abnormalities encountered human disease. term HPO describes phenotypic abnormality. HPO currently contains 13,000 terms 156,000 annotations hereditary diseases. See https://hpo.jax.org/app/.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/hpo_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads protein annotations from Human Phenotype Ontology — hpo_download","text":"","code":"hpo_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/hpo_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads protein annotations from Human Phenotype Ontology — hpo_download","text":"tibble (data frame) annotations provided database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/hpo_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads protein annotations from Human Phenotype Ontology — hpo_download","text":"","code":"hpo_data <- hpo_download() hpo_data #> # A tibble: 269,994 × 9 #>    entrez_gene…¹ entre…² hpo_t…³ hpo_t…⁴ frequ…⁵ frequ…⁶ info_…⁷ gd_so…⁸ disea…⁹ #>            <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1          8192 CLPP    HP:000… Microc… NA      HP:004… NA      mim2ge… OMIM:6… #>  2          8192 CLPP    HP:000… Hyperg… NA      NA      NA      mim2ge… OMIM:6… #>  3          8192 CLPP    HP:000… Short … NA      HP:004… NA      mim2ge… OMIM:6… #>  4          8192 CLPP    HP:000… Seizure NA      HP:004… NA      mim2ge… OMIM:6… #>  5          8192 CLPP    HP:000… Hypopl… NA      NA      NA      mim2ge… OMIM:6… #>  6          8192 CLPP    HP:000… Autoso… NA      NA      NA      mim2ge… OMIM:6… #>  7          8192 CLPP    HP:000… Primar… NA      NA      NA      mim2ge… OMIM:6… #>  8          8192 CLPP    HP:000… Congen… NA      NA      NA      mim2ge… OMIM:6… #>  9          8195 MKKS    HP:000… Extern… NA      NA      NA      mim2ge… OMIM:6… #> 10          8195 MKKS    HP:000… Autoso… NA      NA      NA      mim2ge… OMIM:6… #> # … with 269,984 more rows, and abbreviated variable names ¹​entrez_gene_id, #> #   ²​entrez_gene_symbol, ³​hpo_term_id, ⁴​hpo_term_name, ⁵​frequency_raw, #> #   ⁶​frequency_hpo, ⁷​info_gd_source, ⁸​gd_source, ⁹​disease_id # # A tibble: 231,738 x 9 #    entrez_gene_id entrez_gene_symb. hpo_term_id hpo_term_name #             <dbl> <chr>             <chr>       <chr> #  1           8192 CLPP              HP:0000013  Hypoplasia of the ute. #  2           8192 CLPP              HP:0004322  Short stature #  3           8192 CLPP              HP:0000786  Primary amenorrhea #  4           8192 CLPP              HP:0000007  Autosomal recessive i. #  5           8192 CLPP              HP:0000815  Hypergonadotropic hyp. # # . with 231,733 more rows, and 5 more variables: # #   frequency_raw <chr>, frequency_hpo <chr>, info_gd_source <chr>, # #   gd_source <chr>, disease_id <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/htridb_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads TF-target interactions from HTRIdb — htridb_download","title":"Downloads TF-target interactions from HTRIdb — htridb_download","text":"HTRIdb (https://www.lbbc.ibb.unesp.br/htri/) database literature curated human TF-target interactions. database recently offline, data distributed OmniPath rescued data repository (https://rescued.omnipathdb.org/).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/htridb_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads TF-target interactions from HTRIdb — htridb_download","text":"","code":"htridb_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/htridb_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads TF-target interactions from HTRIdb — htridb_download","text":"Data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/htridb_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads TF-target interactions from HTRIdb — htridb_download","text":"","code":"htridb_data <- htridb_download() htridb_data #> # A tibble: 18,630 × 8 #>      OID GENEID_TF SYMBOL_TF GENEID_TG SYMBOL_TG TECHNIQUE         PUBME…¹ ...8  #>    <dbl>     <dbl> <chr>         <dbl> <chr>     <chr>               <dbl> <lgl> #>  1 32399       142 PARP1           675 BRCA2     Electrophoretic …  1.90e7 NA    #>  2 32399       142 PARP1           675 BRCA2     Chromatin Immuno…  1.90e7 NA    #>  3 28907       196 AHR            1543 CYP1A1    Chromatin Immuno…  1.70e7 NA    #>  4 29466       196 AHR            1543 CYP1A1    Electrophoretic …  1.04e7 NA    #>  5 28911       196 AHR            1543 CYP1A1    Chromatin Immuno…  1.78e7 NA    #>  6 34590       196 AHR            1543 CYP1A1    Electrophoretic …  9.70e6 NA    #>  7 34466       196 AHR            1544 CYP1A2    Chromatin Immuno…  1.78e7 NA    #>  8 34467       196 AHR            1545 CYP1B1    Chromatin Immuno…  1.78e7 NA    #>  9 34485       196 AHR            1545 CYP1B1    Electrophoretic …  1.28e7 NA    #> 10 34470       196 AHR            2353 FOS       Electrophoretic …  1.05e7 NA    #> # … with 18,620 more rows, and abbreviated variable name ¹​PUBMED_ID # # A tibble: 18,630 x 7 #      OID GENEID_TF SYMBOL_TF GENEID_TG SYMBOL_TG TECHNIQUE #    <dbl>     <dbl> <chr>         <dbl> <chr>     <chr> #  1 32399       142 PARP1           675 BRCA2     Electrophoretic Mobi. #  2 32399       142 PARP1           675 BRCA2     Chromatin Immunoprec. #  3 28907       196 AHR            1543 CYP1A1    Chromatin Immunoprec. #  4 29466       196 AHR            1543 CYP1A1    Electrophoretic Mobi. #  5 28911       196 AHR            1543 CYP1A1    Chromatin Immunoprec. # # . with 18,620 more rows, and 1 more variable: PUBMED_ID <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports all interaction datasets available in OmniPath — import_all_interactions","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"interaction datasets currently available OmniPath:","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"","code":"import_all_interactions(   resources = NULL,   organism = 9606,   dorothea_levels = c(\"A\", \"B\"),   exclude = NULL,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   ... )  import_AllInteractions(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse dorothea_levels confidence levels dorothea interactions (TF-target) range D. Set B default. exclude Character: datasets resources exclude. fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. ... Passed import_all_interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"dataframe containing datasets interactions query","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"omnipath: OmniPath data defined paper, arbitrary optimum coverage quality pathwayextra: activity flow interactions without literature reference kinaseextra: enzyme-substrate interactions without literature reference ligrecextra: ligand-receptor interactions without literature reference dorothea: transcription factor (TF)-target interactions DoRothEA tf_target: transcription factor (TF)-target interactions resources mirnatarget: miRNA-mRNA interactions tf_mirna: TF-miRNA interactions lncrna_mrna: lncRNA-mRNA interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_all_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports all interaction datasets available in OmniPath — import_all_interactions","text":"","code":"interactions <- import_all_interactions(     resources = c('HPRD', 'BioGRID'),     organism = 9606 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_dorothea_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","title":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=dorothea contains transcription factor (TF)-target interactions DoRothEA https://github.com/saezlab/DoRothEA","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_dorothea_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","text":"","code":"import_dorothea_interactions(   resources = NULL,   organism = 9606,   dorothea_levels = c(\"A\", \"B\"),   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_dorothea_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse dorothea_levels Vector detailing confidence levels interactions downloaded. dorothea, every TF-target interaction confidence score ranging E, reliable interactions. default take B level interactions (c(, B)). note E interactions available OmnipathR. fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_dorothea_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","text":"dataframe containing TF-target interactions DoRothEA","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_dorothea_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From the OmniPath webservice imports interactions from the\nDoRothEA dataset — import_dorothea_interactions","text":"","code":"interactions <- import_dorothea_interactions(     resources = c('DoRothEA', 'ARACNe-GTEx_DoRothEA'),     organism = 9606,     dorothea_levels = c('A', 'B', 'C') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Intercellular communication network — import_intercell_network","title":"Intercellular communication network — import_intercell_network","text":"Imports intercellular network combining intercellular annotations protein interactions. First imports network protein-protein interactions. , retrieves annotations proteins intercellular communication roles, transmitter (delivering information expressing cell) second, receiver (receiving signal relaying towards expressing cell) side. 3 queries can customized providing parameters lists passed respective methods (import_omnipath_interactions network import_omnipath_intercell annotations). Finally 3 data frames combined way source proteins interaction annotated transmitter, target proteins receiver categories. undirected interactions present (disabled default) duplicated, .e. partners can receiver transmitter.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intercellular communication network — import_intercell_network","text":"","code":"import_intercell_network(   interactions_param = list(),   transmitter_param = list(),   receiver_param = list(),   resources = NULL,   entity_types = NULL,   ligand_receptor = FALSE,   high_confidence = FALSE,   simplify = FALSE,   unique_pairs = FALSE,   consensus_percentile = NULL,   loc_consensus_percentile = NULL,   omnipath = TRUE,   ligrecextra = TRUE,   kinaseextra = !high_confidence,   pathwayextra = !high_confidence,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intercellular communication network — import_intercell_network","text":"interactions_param list arguments interactions query: import_omnipath_interactions, import_pathwayextra_interactions, import_kinaseextra_interactions, import_ligrecextra_interactions transmitter_param list arguments import_omnipath_intercell, define transmitter side intercellular connections receiver_param list arguments import_omnipath_intercell, define receiver side intercellular connections resources character vector resources applied interactions annotations. example, resources = 'CellChatDB' download transmitters receivers defined CellChatDB, connected connections CellChatDB. entity_types Character, possible values \"protein\", \"complex\" . ligand_receptor Logical. TRUE, ligand receptor annotations used instead generic transmitter receiver categories. high_confidence Logical: shortcut filtering order include higher confidence interactions. intercell database OmniPath covers broad range possible ways cell cell communication, pieces information, localization, topology, function interaction, combined many, often independent sources. unavoidably result weird unexpected combinations false positives context intercellular communication. option sets minimum criteria remove (definitely !) wrong connections. criteria followings: 1) receiver must plasma membrane transmembrane; 2) curation effort interactions must larger one; 3) consensus score annotations must larger 50 percentile within generic category (can override consensus_percentile). 4) transmitter must secreted exposed plasma membrane. 5) major localizations supported least 30 percent relevant resources ( can override loc_consensus_percentile). 6) datasets lower level curation (kinaseextra  pathwayextra) disabled. criteria medium stringency, can always tune relaxed stringent filtering manually, using filter_intercell_network. simplify Logical: keep often used columns. function combines network data frame two copies intercell annotation data frames, already quite columns. option keep names interacting pair, intercellular communication roles, minimal information origin interaction annotations. unique_pairs Logical: instead separate rows pair annotations, drop annotations reduce data frame unique interacting pairs. See unique_intercell_network details. consensus_percentile Numeric: percentile cut consensus score generic categories intercell annotations. consensus score number resources supporting classification entity category based combined information many resources. can apply cut-, keeping annotations supported higher number resources certain percentile category. NULL filtering performed. value either 0-1 range, divided 100 greater 1. percentiles calculated generic composite categories applied resource specific annotations specific child categories. loc_consensus_percentile Numeric: similar consensus_percentile major localizations. example, value 50, secreted, plasma membrane transmembrane peripheral attributes TRUE least 50 percent resources support . omnipath Logical: shortcut include omnipath dataset interactions query. ligrecextra Logical: shortcut include ligrecextra dataset interactions query. kinaseextra Logical: shortcut include kinaseextra dataset interactions query. pathwayextra Logical: shortcut include pathwayextra dataset interactions query. ... simplify unique_pairs TRUE, additional column  names can passed dplyr::select final data frame. Otherwise ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intercellular communication network — import_intercell_network","text":"dataframe containing information protein-protein interactions inter-cellular roles protiens involved interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intercellular communication network — import_intercell_network","text":"default function creates almost largest possible network intercellular interactions. However, might contain large number false positives. Please refer documentation arguments, especially high_confidence,  filter_intercell_network function. Note: restrict query certain intercell annotation resources small categories, recommended use consensus_percentile high_confidence options, instead filter network  filter_intercell_network consistent results.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_intercell_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intercellular communication network — import_intercell_network","text":"","code":"intercell_network <- import_intercell_network(     interactions_param = list(datasets = 'ligrecextra'),     receiver_param = list(categories = c('receptor', 'transporter')),     transmitter_param = list(categories = c('ligand', 'secreted_enzyme')) )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_kinaseextra_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","title":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=kinaseextra, contains enzyme-substrate interactions without literature reference. enzyme-substrate interactions supported literature references part `omnipath` dataset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_kinaseextra_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","text":"","code":"import_kinaseextra_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_kinaseextra_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... Optional additional arguments.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_kinaseextra_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","text":"dataframe containing enzyme-substrate interactions without literature reference","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_kinaseextra_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the `kinase extra` dataset of OmniPath — import_kinaseextra_interactions","text":"","code":"interactions <-    import_kinaseextra_interactions(        resources = c('PhosphoPoint', 'PhosphoSite'),        organism = 9606    )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_ligrecextra_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","title":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=ligrecextra, contains ligand-receptor interactions without literature reference. ligand-receptor interactions supported literature references part `omnipath` dataset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_ligrecextra_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","text":"","code":"import_ligrecextra_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_ligrecextra_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_ligrecextra_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","text":"dataframe containing ligand-receptor interactions including ones without literature references","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_ligrecextra_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the `ligrec extra` dataset of OmniPath — import_ligrecextra_interactions","text":"","code":"interactions <- import_ligrecextra_interactions(     resources = c('HPRD', 'Guide2Pharma'),     organism = 9606 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_lncrna_mrna_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","title":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=lncrna_mrna, contains lncRNA-mRNA interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_lncrna_mrna_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","text":"","code":"import_lncrna_mrna_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_lncrna_mrna_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_lncrna_mrna_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","text":"dataframe containing lncRNA-mRNA interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_lncrna_mrna_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the lncRNA-mRNA dataset of OmniPath — import_lncrna_mrna_interactions","text":"","code":"interactions <-     import_lncrna_mrna_interactions(         resources = c('ncRDeathDB')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_mirnatarget_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","title":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=mirnatarget, contains miRNA-mRNA interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_mirnatarget_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","text":"","code":"import_mirnatarget_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_mirnatarget_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_mirnatarget_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","text":"dataframe containing miRNA-mRNA interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_mirnatarget_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the miRNA-target dataset of OmniPath — import_mirnatarget_interactions","text":"","code":"interactions <-     import_mirnatarget_interactions(         resources = c('miRTarBase', 'miRecords')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports annotations from OmniPath — import_omnipath_annotations","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"Imports protein annotations function, localization, expression, structure properties proteins OmniPath https://omnipathdb.org/annotations. Note: might also miRNAs annotated; vast majority protein complex annotations inferred annotations members: members carry annotation complex inherits.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"","code":"import_omnipath_annotations(   proteins = NULL,   resources = NULL,   wide = FALSE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"proteins Vector containing genes proteins annotations retrieved (UniProt IDs HGNC Gene Symbols miRBase IDs). also possible donwload annotations protein complexes. , write 'COMPLEX:' right genesymbols genes integrating complex. Check vignette examples. resources Load annotations databases. See get_annotation_resources possible values. wide Convert annotation table wide format, corresponds less original resource. data comes one resource list wide tables returned. See examples pivot_annotations. ... Additional arguments.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"data frame containing different gene complex annotations.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"Downloading full annotations dataset disabled default size data around 1GB. recommend retrieve annotations set proteins resources, depending interest. can always download full database https://archive.omnipathdb.org/omnipath_webservice_annotations__recent.tsv using standard R readr method.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports annotations from OmniPath — import_omnipath_annotations","text":"","code":"annotations <- import_omnipath_annotations(     proteins = c('TP53', 'LMNA'),     resources = c('HPA_subcellular') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_complexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports protein complexes from OmniPath — import_omnipath_complexes","title":"Imports protein complexes from OmniPath — import_omnipath_complexes","text":"Imports complexes stored Omnipath database https://omnipathdb.org/complexes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_complexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports protein complexes from OmniPath — import_omnipath_complexes","text":"","code":"import_omnipath_complexes(resources = NULL, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_complexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports protein complexes from OmniPath — import_omnipath_complexes","text":"resources complexes reported databases removed. See get_complexes_databases information. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_complexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports protein complexes from OmniPath — import_omnipath_complexes","text":"dataframe containing information complexes","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_complexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports protein complexes from OmniPath — import_omnipath_complexes","text":"","code":"complexes = import_omnipath_complexes(     resources = c('CORUM', 'hu.MAP') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_enzsub.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","title":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","text":"Imports enzyme-substrate (exactly, enzyme-PTM) relationship database https://omnipathdb.org/enzsub","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_enzsub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","text":"","code":"import_omnipath_enzsub(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_enzsub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","text":"resources PTMs reported databases removed. See get_ptms_databases information. organism PTMs available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields can define additional fields added result. used, set next argument, default_fields, FALSE. default_fields Whether include default fields (columns) query type. FALSE, fields defined user fields argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... Optional additional arguments.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_enzsub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","text":"data frame containing information ptms","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_enzsub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports enzyme-substrate relationships from OmniPath — import_omnipath_enzsub","text":"","code":"enzsub <- import_omnipath_enzsub(     resources = c('PhosphoSite', 'SIGNOR'),     organism = 9606 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","title":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","text":"Imports database https://omnipathdb.org/interactions, contains interactions supported literature references. part interaction database compiled similar way presented first paper describing OmniPath (Turei et al. 2016).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","text":"","code":"import_omnipath_interactions(   resources = NULL,   organism = 9606,   datasets = \"omnipath\",   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse datasets Names interaction datasets download: omnipath (default). possiblites : pathwayextra, kinaseextra, ligrecextra, dorothea,tf_target, mirnatarget, tf_mirna, lncrna_mrna. user can select multiple datasets example: c('omnipath', 'pathwayextra', 'kinaseextra') fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","text":"dataframe protein-protein interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the `omnipath` dataset of Omnipath — import_omnipath_interactions","text":"","code":"interactions = import_omnipath_interactions(     resources = c('SignaLink3'),     organism = 9606 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_intercell.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports OmniPath intercell annotations — import_omnipath_intercell","title":"Imports OmniPath intercell annotations — import_omnipath_intercell","text":"Imports OmniPath intercellular communication role annotation database https://omnipathdb.org/intercell. provides information roles inter-cellular signaling. E.g. protein ligand, receptor, extracellular matrix (ECM) component, etc.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_intercell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports OmniPath intercell annotations — import_omnipath_intercell","text":"","code":"import_omnipath_intercell(   categories = NULL,   resources = NULL,   parent = NULL,   scope = NULL,   aspect = NULL,   source = NULL,   transmitter = NULL,   receiver = NULL,   secreted = NULL,   plasma_membrane_peripheral = NULL,   plasma_membrane_transmembrane = NULL,   proteins = NULL,   topology = NULL,   causality = NULL,   consensus_percentile = NULL,   loc_consensus_percentile = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_intercell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports OmniPath intercell annotations — import_omnipath_intercell","text":"categories vector containing categories retrieved. genes belonging categories returned. information categories see codeget_intercell_categories. resources limit query certain resources; see available resources get_intercell_resources. parent vector containing parent classes retrieved. genes belonging classes returned. furter information main classes see get_intercell_categories. scope either `specific` `generic` aspect either `locational` `functional` source either `resource_specific` `composite` transmitter logical, include transmitters .e. proteins delivering signal cell environment. receiver logical, include receivers .e. proteins delivering signal cell environment. secreted logical, include secreted proteins plasma_membrane_peripheral logical, include plasma membrane peripheral membrane proteins. plasma_membrane_transmembrane logical, include plasma membrane transmembrane proteins. proteins limit query certain proteins topology topology categories: one `secreted` (sec), `plasma_membrane_peripheral` (pmp), `plasma_membrane_transmembrane` (pmtm) (short long notation can used). causality `transmitter` (trans), `receiver` (rec) `` (short long notation can used). consensus_percentile Numeric: percentile cut consensus score generic categories. consensus score number resources supporting classification entity category based combined information many resources. can apply cut-, keeping annotations supported higher number resources certain percentile category. NULL filtering performed. value either 0-1 range, divided 100 greater 1. percentiles calculated generic composite categories applied resource specific annotations specific child categories. loc_consensus_percentile Numeric: similar codeconsensus_percentile major localizations. example, value 50, secreted, plasma membrane transmembrane peripheral attributes true least 50 percent resources support . ... Additional optional arguments, ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_intercell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports OmniPath intercell annotations — import_omnipath_intercell","text":"dataframe cotaining information roles intercellular signaling.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_omnipath_intercell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports OmniPath intercell annotations — import_omnipath_intercell","text":"","code":"intercell <- import_omnipath_intercell(categories = 'ecm')"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_pathwayextra_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","title":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=pathwayextra, contains activity flow interactions without literature reference. activity flow interactions supported literature references part `omnipath` dataset.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_pathwayextra_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","text":"","code":"import_pathwayextra_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_pathwayextra_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose one : 9606 human (default), 10116 rat 10090 Mouse. fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_pathwayextra_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","text":"dataframe containing activity flow interactions proteins without literature reference","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_pathwayextra_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the `pathway extra` dataset of Omnipath — import_pathwayextra_interactions","text":"","code":"interactions <-     import_pathwayextra_interactions(         resources = c('BioGRID', 'IntAct'),         organism = 9606     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_post_translational_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"All post-translational interactions from OmniPath — import_post_translational_interactions","title":"All post-translational interactions from OmniPath — import_post_translational_interactions","text":"Imports interactions post-translational datasets OmniPath. datasets \"omnipath\", \"kinaseextra\", \"pathwayextra\" \"ligrecextra\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_post_translational_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All post-translational interactions from OmniPath — import_post_translational_interactions","text":"","code":"import_post_translational_interactions(   resources = NULL,   organism = 9606,   exclude = NULL,   references_by_resource = TRUE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_post_translational_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All post-translational interactions from OmniPath — import_post_translational_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse exclude Character: datasets resources exclude. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_post_translational_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All post-translational interactions from OmniPath — import_post_translational_interactions","text":"dataframe containing post-translational interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_post_translational_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All post-translational interactions from OmniPath — import_post_translational_interactions","text":"","code":"interactions <-     import_post_translational_interactions(         resources = c('BioGRID')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_small_molecule_protein_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","title":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=small_molecule, contains small molecule-protein interactions. Small molecules can metabolites, intrinsic ligands drug compounds.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_small_molecule_protein_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","text":"","code":"import_small_molecule_protein_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_small_molecule_protein_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse. fields Optional fields added. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_small_molecule_protein_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","text":"dataframe small molecule-protein interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_small_molecule_protein_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from the small molecule-protein dataset of OmniPath — import_small_molecule_protein_interactions","text":"","code":"# What are the targets of aspirin? interactions <-     import_small_molecule_protein_interactions(         sources = 'ASPIRIN'     ) # The prostaglandin synthases: interactions #> # A tibble: 2 × 15 #>   source target source…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <dbl> <chr>  <chr>    <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1   2244 P23219 ASPIRIN  PTGS1         1       0       1       1       0       1 #> 2   2244 P35354 ASPIRIN  PTGS2         1       0       1       1       0       1 #> # … with 5 more variables: sources <chr>, references <chr>, #> #   curation_effort <dbl>, n_references <int>, n_resources <int>, and #> #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, #> #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, #> #   ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_mirna_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","title":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=tf_mirna, contains transcription factor-miRNA gene interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_mirna_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","text":"","code":"import_tf_mirna_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_mirna_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_mirna_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","text":"dataframe containing TF-miRNA interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_mirna_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the TF-miRNA dataset of OmniPath — import_tf_mirna_interactions","text":"","code":"interactions <-     import_tf_mirna_interactions(         resources = c('TransmiR')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_target_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","title":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=tf_target, contains transcription factor-target protein coding gene interactions. Note: TF-target dataset OmniPath, `dorothea` one `tf_mirna` dataset provides TF-miRNA gene interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_target_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","text":"","code":"import_tf_target_interactions(   resources = NULL,   organism = 9606,   fields = NULL,   default_fields = TRUE,   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_target_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse fields user can define fields added. used, set next argument, `default_fields`, FALSE. default_fields whether include default fields (columns) query type. FALSE, fields defined user `fields` argument added. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... Optional additional arguments","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_target_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","text":"dataframe containing TF-target interactions","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_tf_target_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports interactions from the TF-target dataset of OmniPath — import_tf_target_interactions","text":"","code":"interactions <-     import_tf_target_interactions(         resources = c('DoRothEA', 'SIGNOR')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_transcriptional_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","title":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","text":"Imports dataset : https://omnipathdb.org/interactions?datasets=tf_target,dorothea, contains transcription factor-target protein coding gene interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_transcriptional_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","text":"","code":"import_transcriptional_interactions(   resources = NULL,   organism = 9606,   dorothea_levels = c(\"A\", \"B\"),   references_by_resource = TRUE,   exclude = NULL,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/import_transcriptional_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","text":"resources interactions reported databases removed. See get_interaction_resources information. organism Interactions available human, mouse rat. Choose among: 9606 human (default), 10116 rat 10090 Mouse dorothea_levels Vector detailing confidence levels interactions downloaded. dorothea, every TF-target interaction confidence score ranging E, reliable interactions. default take B level interactions (c(, B)). note E interactions available OmnipathR. references_by_resource FALSE, removes resource name prefixes references (PubMed IDs); way information reference comes resource lost PubMed IDs unique. exclude Character: datasets resources exclude. ... Optional additional arguments.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/import_transcriptional_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","text":"dataframe containing TF-target interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/import_transcriptional_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports all TF-target interactions from OmniPath — import_transcriptional_interactions","text":"","code":"interactions <-     import_transcriptional_interactions(         resources = c('PAZAR', 'ORegAnno', 'DoRothEA')     )"},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","title":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","text":"Downloads data inbiomap_raw, extracts UniProt IDs, Gene Symbols scores removes irrelevant columns.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","text":"","code":"inbiomap_download(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","text":"... Passed inbiomap_raw.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","text":"data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads and preprocesses network data from InWeb InBioMap — inbiomap_download","text":"","code":"if (FALSE) { inbiomap_interactions <- inbiomap_download() inbiomap_interactions } # # A tibble: 625,641 x 7 #    uniprot_a uniprot_b genesymbol_a genesymbol_b inferred score1 score2 #    <chr>     <chr>     <chr>        <chr>        <lgl>     <dbl>  <dbl> #  1 A0A5B9    P01892    TRBC2        HLA-A        FALSE     0.417 0.458 #  2 A0AUZ9    Q96CV9    KANSL1L      OPTN         FALSE     0.155 0.0761 #  3 A0AV02    P24941    SLC12A8      CDK2         TRUE      0.156 0.0783 #  4 A0AV02    Q00526    SLC12A8      CDK3         TRUE      0.157 0.0821 #  5 A0AV96    P0CG48    RBM47        UBC          FALSE     0.144 0.0494 # # . with 625,631 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads network data from InWeb InBioMap — inbiomap_raw","title":"Downloads network data from InWeb InBioMap — inbiomap_raw","text":"Downloads data https://inbio-discover.com/map.html#downloads tar.gz format, extracts PSI MITAB table returns data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads network data from InWeb InBioMap — inbiomap_raw","text":"","code":"inbiomap_raw(curl_verbose = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads network data from InWeb InBioMap — inbiomap_raw","text":"curl_verbose Logical. Perform CURL requests verbose mode debugging purposes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads network data from InWeb InBioMap — inbiomap_raw","text":"data frame (tibble) extracted interaction table.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/inbiomap_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads network data from InWeb InBioMap — inbiomap_raw","text":"","code":"if (FALSE) { inbiomap_psimitab <- inbiomap_raw() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/interaction_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Omnipath interaction graph — interaction_graph","title":"Build Omnipath interaction graph — interaction_graph","text":"Transforms interactions data frame igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/interaction_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Omnipath interaction graph — interaction_graph","text":"","code":"interaction_graph(interactions = interactions)"},{"path":"https://saezlab.github.io/OmnipathR/reference/interaction_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Omnipath interaction graph — interaction_graph","text":"interactions data.frame created import_omnipath_enzsub import_omnipath_interactions import_pathwayextra_interactions import_kinaseextra_interactions import_ligrecextra_interactions import_post_translational_interactions import_dorothea_interactions import_tf_target_interactions import_transcriptional_interactions import_mirnatarget_interactions import_all_interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/interaction_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Omnipath interaction graph — interaction_graph","text":"igraph graph object.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/interaction_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Omnipath interaction graph — interaction_graph","text":"","code":"interactions <- import_omnipath_interactions(resources = c('SignaLink3')) g <- interaction_graph(interactions)"},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Full list of intercell categories and resources — intercell_categories","title":"Full list of intercell categories and resources — intercell_categories","text":"Full list intercell categories resources","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full list of intercell categories and resources — intercell_categories","text":"","code":"intercell_categories()"},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full list of intercell categories and resources — intercell_categories","text":"data frame categories resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full list of intercell categories and resources — intercell_categories","text":"","code":"ic_cat <- intercell_categories() ic_cat #> # A tibble: 1,097 × 3 #>    category                parent                  database         #>    <chr>                   <chr>                   <chr>            #>  1 transmembrane           transmembrane           UniProt_location #>  2 transmembrane           transmembrane           UniProt_topology #>  3 transmembrane           transmembrane           UniProt_keyword  #>  4 transmembrane           transmembrane_predicted Phobius          #>  5 transmembrane_phobius   transmembrane_predicted Almen2009        #>  6 transmembrane_sosui     transmembrane_predicted Almen2009        #>  7 transmembrane_tmhmm     transmembrane_predicted Almen2009        #>  8 transmembrane_predicted transmembrane           OmniPath         #>  9 transmembrane           transmembrane           GO_Intercell     #> 10 transmembrane           transmembrane           CellPhoneDB      #> # … with 1,087 more rows # # A tibble: 1,125 x 3 #    category                parent                  database #    <chr>                   <chr>                   <chr> #  1 transmembrane           transmembrane           UniProt_location #  2 transmembrane           transmembrane           UniProt_topology #  3 transmembrane           transmembrane           UniProt_keyword #  4 transmembrane           transmembrane_predicted Phobius #  5 transmembrane_phobius   transmembrane_predicted Almen2009 # # . with 1,120 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_consensus_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality filter for intercell annotations — intercell_consensus_filter","title":"Quality filter for intercell annotations — intercell_consensus_filter","text":"Quality filter intercell annotations","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_consensus_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality filter for intercell annotations — intercell_consensus_filter","text":"","code":"intercell_consensus_filter(   data,   percentile = NULL,   loc_percentile = NULL,   topology = NULL )"},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_consensus_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality filter for intercell annotations — intercell_consensus_filter","text":"data data frame intercell annotations, provided import_omnipath_intercell. percentile Numeric: percentile cut consensus score composite categories. consensus score number resources supporting classification entity category based combined information many resources. can apply cut-, keeping annotations supported higher number resources certain percentile category. NULL filtering performed. value either 0-1 range, divided 100 greater 1. percentiles calculated generic composite categories applied resource specific annotations specific child categories. loc_percentile Numeric: similar percentile major localizations. example, value 50, secreted, plasma membrane transmembrane peripheral attributes TRUE least 50 percent resources support . topology Character vector: list allowed topologies, possible values *\"secreted\"*, *\"plasma_membrane_peripheral\"* *\"plasma_membrane_transmembrane\"*.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_consensus_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality filter for intercell annotations — intercell_consensus_filter","text":"data frame data filtered consensus scores.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/intercell_consensus_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality filter for intercell annotations — intercell_consensus_filter","text":"","code":"intercell <- import_omnipath_intercell(parent = c('ligand', 'receptor')) nrow(intercell) #> [1] 60805 # [1] 50174 intercell_q50 <- intercell_consensus_filter(intercell, 50) nrow(intercell_q50) #> [1] 58423 # [1] 42863"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_ontology_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Looks like an ontology ID — is_ontology_id","title":"Looks like an ontology ID — is_ontology_id","text":"Tells input typical format ontology IDs, .e. code capital letters, colon, followed numeric code.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_ontology_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Looks like an ontology ID — is_ontology_id","text":"","code":"is_ontology_id(terms)"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_ontology_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Looks like an ontology ID — is_ontology_id","text":"terms Character vector strings check.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_ontology_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Looks like an ontology ID — is_ontology_id","text":"logical vector length input.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_ontology_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Looks like an ontology ID — is_ontology_id","text":"","code":"is_ontology_id(c('GO:0000001', 'reproduction')) #> [1]  TRUE FALSE # [1]  TRUE FALSE"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_swissprot.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for SwissProt IDs — is_swissprot","title":"Check for SwissProt IDs — is_swissprot","text":"Check SwissProt IDs","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_swissprot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for SwissProt IDs — is_swissprot","text":"","code":"is_swissprot(uniprots, organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_swissprot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for SwissProt IDs — is_swissprot","text":"uniprots Character vector UniProt IDs. organism Character integer: name identifier organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_swissprot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for SwissProt IDs — is_swissprot","text":"Logical vector TRUE SwissProt IDs FALSE     element.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_swissprot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for SwissProt IDs — is_swissprot","text":"","code":"is_swissprot(c(\"Q05BL1\", \"A0A654IBU3\", \"P00533\")) #> [1] FALSE FALSE  TRUE # [1] FALSE FALSE TRUE"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_trembl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for TrEMBL IDs — is_trembl","title":"Check for TrEMBL IDs — is_trembl","text":"Check TrEMBL IDs","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_trembl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for TrEMBL IDs — is_trembl","text":"","code":"is_trembl(uniprots, organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_trembl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for TrEMBL IDs — is_trembl","text":"uniprots Character vector UniProt IDs. organism Character integer: name identifier organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_trembl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for TrEMBL IDs — is_trembl","text":"Logical vector TRUE TrEMBL IDs FALSE     element.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_trembl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for TrEMBL IDs — is_trembl","text":"","code":"is_trembl(c(\"Q05BL1\", \"A0A654IBU3\", \"P00533\")) #> [1]  TRUE  TRUE FALSE # [1] TRUE TRUE FALSE"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_uniprot.html","id":null,"dir":"Reference","previous_headings":"","what":"Looks like a UniProt ID? — is_uniprot","title":"Looks like a UniProt ID? — is_uniprot","text":"function checks format IDs, guarantee IDs exist UniProt.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_uniprot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Looks like a UniProt ID? — is_uniprot","text":"","code":"is_uniprot(identifiers)"},{"path":"https://saezlab.github.io/OmnipathR/reference/is_uniprot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Looks like a UniProt ID? — is_uniprot","text":"identifiers Character: one identifiers (typically single string, vector data frame column).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_uniprot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Looks like a UniProt ID? — is_uniprot","text":"Logical: true elements input (except NAs) looks like     valid UniProt IDs. input character vector, `FALSE`     returned.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/is_uniprot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Looks like a UniProt ID? — is_uniprot","text":"","code":"is_uniprot(all_uniprot_acs()) #> [1] TRUE # [1] TRUE is_uniprot(\"P00533\") #> [1] TRUE # [1] TRUE is_uniprot(\"pizza\") #> [1] FALSE # [1] FALSE"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Information about a KEGG Pathway — kegg_info","title":"Information about a KEGG Pathway — kegg_info","text":"Information KEGG Pathway","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information about a KEGG Pathway — kegg_info","text":"","code":"kegg_info(pathway_id)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information about a KEGG Pathway — kegg_info","text":"pathway_id Character: KEGG Pathway identifier, e.g. \"hsa04710\". complete list IDs see kegg_pathway_list.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information about a KEGG Pathway — kegg_info","text":"List pathway information.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information about a KEGG Pathway — kegg_info","text":"","code":"kegg_info('map00563') #> $id #> [1] \"map00563\" #>  #> $name #> [1] \"Glycosylphosphatidylinositol (GPI)-anchor biosynthesis\" #>  #> $desc #> [1] \"Cell surface proteins can be attached to the cell membrane via the glycolipid structure called glycosylphosphatidylinositol (GPI) anchor. Hundreds of GPI-anchored proteins have been identified in many eukaryotes ranging from protozoa and fungi to mammals. All protein-linked GPI anchors share a common core structure, characterized by the substructure Man (a1-4) GlcN (a1-6) myo-inositol-1P-lipid. Biosynthesis of GPI anchors proceeds in three stages: (i) preassembly of a GPI precursor in the ER membrane, (ii) attachment of the GPI to the C-terminus of a newly synthesized protein in the lumen of the ER, and (iii) lipid remodeling and/or carbohydrate side-chain modifications in the ER and the Golgi. Defects of GPI anchor biosynthesis gene result in a genetic disorder, paroxysmal nocturnal hemoglobinuria.\" #>  #> $pubmed #>  [1] \"12655644\" \"11102867\" \"8253761\"  \"14517336\" \"10329735\" \"14734546\" #>  [7] \"12802054\" \"12807000\" \"15623507\" \"15635094\" \"24364251\" \"25509331\" #> [13] \"19837036\" \"26563290\" #>  #> $diseases #> NULL #>  #> $rel_pathways #> [1] \"N-Glycan biosynthesis\"          \"Glycerophospholipid metabolism\" #>  #> $module #> [1] \"GPI-anchor biosynthesis, core oligosaccharide [PATH:map00563]\" #>"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a KEGG Pathway diagram in the browser — kegg_open","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"Open KEGG Pathway diagram browser","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"","code":"kegg_open(pathway_id)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"pathway_id Character: KEGG Pathway identifier, e.g. \"hsa04710\". complete list IDs see kegg_pathway_list.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"Returns NULL.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"open URLs web browser \"browser\" option must set valid executable. can check value option getOption(\"browser\"). browser firefox executable located system path, can set option point : options(browser = \"firefox\"). make permanent setting, can also include .Rprofile file.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a KEGG Pathway diagram in the browser — kegg_open","text":"","code":"if(any(getOption('browser') != '')) kegg_open('hsa04710')"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein pathway annotations — kegg_pathway_annotations","title":"Protein pathway annotations — kegg_pathway_annotations","text":"Downloads KEGG pathways creates table protein-pathway annotations.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein pathway annotations — kegg_pathway_annotations","text":"","code":"kegg_pathway_annotations(pathways = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein pathway annotations — kegg_pathway_annotations","text":"pathways table KEGG pathways produced  kegg_pathways_download.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein pathway annotations — kegg_pathway_annotations","text":"data frame (tibble) UniProt IDs pathway names.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein pathway annotations — kegg_pathway_annotations","text":"","code":"if (FALSE) { kegg_pw_annot <- kegg_pathway_annotations() kegg_pw_annot # # A tibble: 7,341 x 4 #    uniprot genesymbol pathway                pathway_id #    <chr>   <chr>      <chr>                  <chr> #  1 Q03113  GNA12      MAPK signaling pathway hsa04010 #  2 Q9Y4G8  RAPGEF2    MAPK signaling pathway hsa04010 #  3 Q13972  RASGRF1    MAPK signaling pathway hsa04010 #  4 O95267  RASGRP1    MAPK signaling pathway hsa04010 #  5 P62834  RAP1A      MAPK signaling pathway hsa04010 # # . with 7,336 more rows }"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download one KEGG pathway — kegg_pathway_download","title":"Download one KEGG pathway — kegg_pathway_download","text":"Downloads one pathway diagram KEGG Pathways database KGML format processes XML extract interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download one KEGG pathway — kegg_pathway_download","text":"","code":"kegg_pathway_download(   pathway_id,   process = TRUE,   max_expansion = NULL,   simplify = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download one KEGG pathway — kegg_pathway_download","text":"pathway_id Character: KEGG pathway identifier, example \"hsa04350\". process Logical: process data return raw format. processing means joining entries relations single data frame adding UniProt IDs. max_expansion Numeric: maximum number relations derived single relation record. one entry might represent one molecular entities, one relation might yield large number relations processing. happens combinatorial way, e.g. two entries represent 3 4 entities, results 12 relations. NULL, relations expanded. simplify Logical: remove KEGG's internal identifiers pathway annotations, keep unique interactions direction effect sign.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download one KEGG pathway — kegg_pathway_download","text":"data frame (tibble) interactions process  TRUE, otherwise list two data frames: \"entries\"     raw table entries \"relations\" table relations     extracted KGML file.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download one KEGG pathway — kegg_pathway_download","text":"","code":"tgf_pathway <- kegg_pathway_download('hsa04350') tgf_pathway #> # A tibble: 50 × 12 #>    source target type  effect     arrow relati…¹ kegg_…² genes…³ unipr…⁴ kegg_…⁵ #>    <chr>  <chr>  <chr> <chr>      <chr> <chr>    <chr>   <chr>   <chr>   <chr>   #>  1 51     49     PPrel activation -->   hsa0435… hsa:70… TGFB1   P01137  hsa:70… #>  2 57     55     PPrel activation -->   hsa0435… hsa:15… GDF7    Q7Z4P5  hsa:26… #>  3 34     32     PPrel activation -->   hsa0435… hsa:36… INHBA   P08476  hsa:92… #>  4 20     17     PPrel activation -->   hsa0435… hsa:48… NODAL   Q96S42  hsa:92… #>  5 60     46     PPrel activation -->   hsa0435… hsa:40… SMAD1   Q15797  hsa:40… #>  6 43     41     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  7 22     16     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  8 19     15     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  9 27     26     PPrel inhibition --|   hsa0435… hsa:46… MYC     P01106  hsa:10… #> 10 47     43     PPrel inhibition --|   hsa0435… hsa:40… SMAD6   O43541  hsa:40… #> # … with 40 more rows, 2 more variables: genesymbol_target <chr>, #> #   uniprot_target <chr>, and abbreviated variable names ¹​relation_id, #> #   ²​kegg_id_source, ³​genesymbol_source, ⁴​uniprot_source, ⁵​kegg_id_target # # A tibble: 50 x 12 #    source target type  effect arrow relation_id kegg_id_source #    <chr>  <chr>  <chr> <chr>  <chr> <chr>       <chr> #  1 51     49     PPrel activ. -->   hsa04350:1  hsa:7040 hsa:. #  2 57     55     PPrel activ. -->   hsa04350:2  hsa:151449 hs. #  3 34     32     PPrel activ. -->   hsa04350:3  hsa:3624 hsa:. #  4 20     17     PPrel activ. -->   hsa04350:4  hsa:4838 #  5 60     46     PPrel activ. -->   hsa04350:5  hsa:4086 hsa:. # # . with 45 more rows, and 5 more variables: genesymbol_source <chr>, # #   uniprot_source <chr>, kegg_id_target <chr>, # #   genesymbol_target <chr>, uniprot_target <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of KEGG pathways — kegg_pathway_list","title":"List of KEGG pathways — kegg_pathway_list","text":"Retrieves list available KEGG pathways.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of KEGG pathways — kegg_pathway_list","text":"","code":"kegg_pathway_list()"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of KEGG pathways — kegg_pathway_list","text":"Data frame pathway names identifiers.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathway_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of KEGG pathways — kegg_pathway_list","text":"","code":"kegg_pws <- kegg_pathway_list() kegg_pws #> # A tibble: 533 × 2 #>    id       name                                         #>    <chr>    <chr>                                        #>  1 map01100 Metabolic pathways                           #>  2 map01110 Biosynthesis of secondary metabolites        #>  3 map01120 Microbial metabolism in diverse environments #>  4 map01200 Carbon metabolism                            #>  5 map01210 2-Oxocarboxylic acid metabolism              #>  6 map01212 Fatty acid metabolism                        #>  7 map01230 Biosynthesis of amino acids                  #>  8 map01232 Nucleotide metabolism                        #>  9 map01250 Biosynthesis of nucleotide sugars            #> 10 map01240 Biosynthesis of cofactors                    #> # … with 523 more rows # # A tibble: 521 x 2 #    id       name #    <chr>    <chr> #  1 map01100 Metabolic pathways #  2 map01110 Biosynthesis of secondary metabolites #  3 map01120 Microbial metabolism in diverse environments #  4 map01200 Carbon metabolism #  5 map01210 2-Oxocarboxylic acid metabolism #  6 map01212 Fatty acid metabolism #  7 map01230 Biosynthesis of amino acids # # . with 514 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathways_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the KEGG Pathways database — kegg_pathways_download","title":"Download the KEGG Pathways database — kegg_pathways_download","text":"Downloads pathway diagrams KEGG Pathways database KGML format processes XML extract interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathways_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the KEGG Pathways database — kegg_pathways_download","text":"","code":"kegg_pathways_download(max_expansion = NULL, simplify = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathways_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the KEGG Pathways database — kegg_pathways_download","text":"max_expansion Numeric: maximum number relations derived single relation record. one entry might represent one molecular entities, one relation might yield large number relations processing. happens combinatorial way, e.g. two entries represent 3 4 entities, results 12 relations. NULL, relations expanded. simplify Logical: remove KEGG's internal identifiers pathway annotations, keep unique interactions direction effect sign.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathways_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the KEGG Pathways database — kegg_pathways_download","text":"data frame (tibble) interactions.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_pathways_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the KEGG Pathways database — kegg_pathways_download","text":"","code":"if (FALSE) { kegg_pw <- kegg_pathways_download(simplify = TRUE) kegg_pw # # A tibble: 6,765 x 6 #    uniprot_source uniprot_target type  effect genesymbol_source #    <chr>          <chr>          <chr> <chr>  <chr> #  1 Q03113         Q15283         PPrel activ. GNA12 #  2 Q9Y4G8         P62070         PPrel activ. RAPGEF2 #  3 Q13972         P62070         PPrel activ. RASGRF1 #  4 O95267         P62070         PPrel activ. RASGRP1 #  5 P62834         P15056         PPrel activ. RAP1A # # . with 6,760 more rows, and 1 more variable: genesymbol_target <chr> }"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_picture.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a pathway diagram as a picture — kegg_picture","title":"Download a pathway diagram as a picture — kegg_picture","text":"Downloads KEGG Pathway diagram PNG image.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_picture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a pathway diagram as a picture — kegg_picture","text":"","code":"kegg_picture(pathway_id, path = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_picture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a pathway diagram as a picture — kegg_picture","text":"pathway_id Character: KEGG Pathway identifier, e.g. \"hsa04710\". complete list IDs see kegg_pathway_list. path Character: save image path. NULL, image saved current directory name <pathway_id>.png.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_picture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a pathway diagram as a picture — kegg_picture","text":"Invisibly returns path downloaded file.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_picture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a pathway diagram as a picture — kegg_picture","text":"","code":"kegg_picture('hsa04710') kegg_picture('hsa04710', path = 'foo/bar') kegg_picture('hsa04710', path = 'foo/bar/circadian.png')"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from KGML — kegg_process","title":"Interactions from KGML — kegg_process","text":"Processes KEGG Pathways data extracted KGML file. Joins entries relations single data frame translates Gene Symbols UniProt IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from KGML — kegg_process","text":"","code":"kegg_process(entries, relations, max_expansion = NULL, simplify = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions from KGML — kegg_process","text":"entries data frames entries extracted KGML file kegg_pathway_download. relations data frames relations extracted KGML file kegg_pathway_download. max_expansion Numeric: maximum number relations derived single relation record. one entry might represent one molecular entities, one relation might yield large number relations processing. happens combinatorial way, e.g. two entries represent 3 4 entities, results 12 relations. NULL, relations expanded. simplify Logical: remove KEGG's internal identifiers pathway annotations, keep unique interactions direction effect sign.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from KGML — kegg_process","text":"data frame (tibble) interactions. rare cases     pathway contain relation, returns NULL.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/kegg_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from KGML — kegg_process","text":"","code":"hsa04350 <- kegg_pathway_download('hsa04350', process = FALSE) tgf_pathway <- kegg_process(hsa04350$entries, hsa04350$relations) tgf_pathway #> # A tibble: 50 × 12 #>    source target type  effect     arrow relati…¹ kegg_…² genes…³ unipr…⁴ kegg_…⁵ #>    <chr>  <chr>  <chr> <chr>      <chr> <chr>    <chr>   <chr>   <chr>   <chr>   #>  1 51     49     PPrel activation -->   hsa0435… hsa:70… TGFB1   P01137  hsa:70… #>  2 57     55     PPrel activation -->   hsa0435… hsa:15… GDF7    Q7Z4P5  hsa:26… #>  3 34     32     PPrel activation -->   hsa0435… hsa:36… INHBA   P08476  hsa:92… #>  4 20     17     PPrel activation -->   hsa0435… hsa:48… NODAL   Q96S42  hsa:92… #>  5 60     46     PPrel activation -->   hsa0435… hsa:40… SMAD1   Q15797  hsa:40… #>  6 43     41     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  7 22     16     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  8 19     15     PPrel activation -->   hsa0435… hsa:40… SMAD2   Q15796  hsa:40… #>  9 27     26     PPrel inhibition --|   hsa0435… hsa:46… MYC     P01106  hsa:10… #> 10 47     43     PPrel inhibition --|   hsa0435… hsa:40… SMAD6   O43541  hsa:40… #> # … with 40 more rows, 2 more variables: genesymbol_target <chr>, #> #   uniprot_target <chr>, and abbreviated variable names ¹​relation_id, #> #   ²​kegg_id_source, ³​genesymbol_source, ⁴​uniprot_source, ⁵​kegg_id_target # # A tibble: 50 x 12 #    source target type  effect arrow relation_id kegg_id_source #    <chr>  <chr>  <chr> <chr>  <chr> <chr>       <chr> #  1 51     49     PPrel activ. -->   hsa04350:1  hsa:7040 hsa:. #  2 57     55     PPrel activ. -->   hsa04350:2  hsa:151449 hs. #  3 34     32     PPrel activ. -->   hsa04350:3  hsa:3624 hsa:. #  4 20     17     PPrel activ. -->   hsa04350:4  hsa:4838 #  5 60     46     PPrel activ. -->   hsa04350:5  hsa:4086 hsa:. # # . with 45 more rows, and 5 more variables: genesymbol_source <chr>, # #   uniprot_source <chr>, kegg_id_target <chr>, # #   genesymbol_target <chr>, uniprot_target <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/latin_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Latin (scientific) names of organisms — latin_name","title":"Latin (scientific) names of organisms — latin_name","text":"Latin (scientific) names organisms","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/latin_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latin (scientific) names of organisms — latin_name","text":"","code":"latin_name(name)"},{"path":"https://saezlab.github.io/OmnipathR/reference/latin_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latin (scientific) names of organisms — latin_name","text":"name Vector kind organism name identifier, can also mixed type.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/latin_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Latin (scientific) names of organisms — latin_name","text":"Character vector latin (scientific) names, NA name     input found.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/latin_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Latin (scientific) names of organisms — latin_name","text":"","code":"latin_name(c(9606, \"cat\", \"dog\")) #> [1] \"Homo sapiens\"           \"Felis catus\"            \"Canis lupus familiaris\" # [1] \"Homo sapiens\" \"Felis catus\" \"Canis lupus familiaris\" latin_name(c(9606, \"cat\", \"doggy\")) #> [1] \"Homo sapiens\" \"Felis catus\"  NA             # [1] \"Homo sapiens\" \"Felis catus\"  NA"},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a built in database — load_db","title":"Load a built in database — load_db","text":"Load built database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a built in database — load_db","text":"","code":"load_db(key, param = list())"},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a built in database — load_db","text":"key Character: key database load. list available keys see omnipath_show_db. param List: override defaults pass parameters database loader function. See loader functions default parameters omnipath_show_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a built in database — load_db","text":"Returns NULL.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load a built in database — load_db","text":"function loads database stored within package namespace expiry. loaded database accessible get_db loading process typically initiated get_db, users directly.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/load_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a built in database — load_db","text":"","code":"load_db('go_slim') omnipath_show_db() #> # A tibble: 19 × 10 #>    name     last_used           lifet…¹ package loader loader_param latest_param #>    <chr>    <dttm>                <dbl> <chr>   <chr>  <list>       <list>       #>  1 Gene On… 2022-10-16 16:11:42     300 Omnipa… go_on… <named list> <named list> #>  2 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  3 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  4 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  5 Gene On… 2022-10-16 16:12:53     300 Omnipa… go_on… <named list> <named list> #>  6 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  7 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  8 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  9 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 10 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 11 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 12 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 13 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 14 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 15 GO anno… NA                      300 Omnipa… go_an… <named list> <lgl [1]>    #> 16 UniProt… 2022-10-16 16:12:51     300 Omnipa… unipr… <named list> <named list> #> 17 Ensembl… 2022-10-16 16:12:52   10800 Omnipa… taxon… <NULL>       <NULL>       #> 18 All Swi… 2022-10-16 16:12:42   10800 Omnipa… all_u… <named list> <named list> #> 19 All TrE… 2022-10-16 16:12:43   10800 Omnipa… all_u… <named list> <named list> #> # … with 3 more variables: loaded <lgl>, db <list>, key <chr>, and abbreviated #> #   variable name ¹​lifetime"},{"path":"https://saezlab.github.io/OmnipathR/reference/ncbi_taxid.html","id":null,"dir":"Reference","previous_headings":"","what":"NCBI Taxonomy IDs of organisms — ncbi_taxid","title":"NCBI Taxonomy IDs of organisms — ncbi_taxid","text":"NCBI Taxonomy IDs organisms","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ncbi_taxid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCBI Taxonomy IDs of organisms — ncbi_taxid","text":"","code":"ncbi_taxid(name)"},{"path":"https://saezlab.github.io/OmnipathR/reference/ncbi_taxid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NCBI Taxonomy IDs of organisms — ncbi_taxid","text":"name Vector kind organism name identifier, can also mixed type.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ncbi_taxid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NCBI Taxonomy IDs of organisms — ncbi_taxid","text":"Integer vector NCBI Taxonomy IDs, NA name     input found.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/ncbi_taxid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NCBI Taxonomy IDs of organisms — ncbi_taxid","text":"","code":"ncbi_taxid(c(\"Homo sapiens\", \"cat\", \"dog\")) #> [1] 9606 9685 9615 # [1] 9606 9685 9615 ncbi_taxid(c(9606, \"cat\", \"doggy\")) #> [1] 9606 9685   NA # [1] 9606 9685   NA"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_build_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a NicheNet ligand-target model — nichenet_build_model","title":"Construct a NicheNet ligand-target model — nichenet_build_model","text":"Construct NicheNet ligand-target model","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_build_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a NicheNet ligand-target model — nichenet_build_model","text":"","code":"nichenet_build_model(optimization_results, networks, use_weights = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_build_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a NicheNet ligand-target model — nichenet_build_model","text":"optimization_results outcome NicheNet parameter optimization produced nichenet_optimization. networks list NicheNet format signaling, ligand-receptor gene regulatory networks produced nichenet_networks. use_weights Logical: whether use optimized weights.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_build_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a NicheNet ligand-target model — nichenet_build_model","text":"named list two elements: `weighted_networks`     `optimized_parameters`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_build_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a NicheNet ligand-target model — nichenet_build_model","text":"","code":"if (FALSE) { expression <- nichenet_expression_data() networks <- nichenet_networks() optimization_results <- nichenet_optimization(networks, expression) nichenet_model <- nichenet_build_model(optimization_results, networks) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_expression_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression data from ligand-receptor perturbation experiments used by\nNicheNet — nichenet_expression_data","title":"Expression data from ligand-receptor perturbation experiments used by\nNicheNet — nichenet_expression_data","text":"NicheNet uses expression data collection published ligand receptor KO perturbation experiments build model. function retrieves original expression data, deposited Zenodo (https://zenodo.org/record/3260758).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_expression_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression data from ligand-receptor perturbation experiments used by\nNicheNet — nichenet_expression_data","text":"","code":"nichenet_expression_data()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_expression_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expression data from ligand-receptor perturbation experiments used by\nNicheNet — nichenet_expression_data","text":"Nested list, element contains data frame processed     expression data key variables experiment.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_expression_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression data from ligand-receptor perturbation experiments used by\nNicheNet — nichenet_expression_data","text":"","code":"if (FALSE) { exp_data <- nichenet_expression_data() head(names(exp_data)) # [1] \"bmp4_tgfb\"     \"tgfb_bmp4\"     \"nodal_Nodal\"   \"spectrum_Il4\" # [5] \"spectrum_Tnf\"  \"spectrum_Ifng\" purrr::map_chr(head(exp_data), 'from') #     bmp4_tgfb     tgfb_bmp4   nodal_Nodal  spectrum_Il4  spectrum_Tnf #       \"BMP4\"       \"TGFB1\"       \"NODAL\"         \"IL4\"         \"TNF\" # spectrum_Ifng #       \"IFNG\" }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a NicheNet gene regulatory network — nichenet_gr_network","title":"Builds a NicheNet gene regulatory network — nichenet_gr_network","text":"Builds gene regulatory network prior knowledge NicheNet using multiple resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a NicheNet gene regulatory network — nichenet_gr_network","text":"","code":"nichenet_gr_network(   omnipath = list(),   harmonizome = list(),   regnetwork = list(),   htridb = list(),   remap = list(),   evex = list(),   pathwaycommons = list(),   trrust = list(),   only_omnipath = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a NicheNet gene regulatory network — nichenet_gr_network","text":"omnipath List paramaters passed nichenet_gr_network_omnipath. harmonizome List paramaters passed nichenet_gr_network_harmonizome. regnetwork List paramaters passed nichenet_gr_network_regnetwork. htridb List paramaters passed nichenet_gr_network_htridb. remap List paramaters passed nichenet_gr_network_remap. evex List paramaters passed nichenet_gr_network_evex. pathwaycommons List paramaters passed nichenet_gr_network_pathwaycommons. trrust List paramaters passed nichenet_gr_network_trrust. only_omnipath Logical: shortcut use OmniPath network resource.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a NicheNet gene regulatory network — nichenet_gr_network","text":"network data frame (tibble) gene regulatory interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a NicheNet gene regulatory network — nichenet_gr_network","text":"","code":"if (FALSE) { # load everything with the default parameters: gr_network <- nichenet_gr_network()  # less targets from ReMap, not using RegNetwork: gr_network <- nichenet_gr_network(     # I needed to disable ReMap here due to some issues     # of one of the Bioconductor build servers     # remap = list(top_targets = 200),     remap = NULL,     regnetwork = NULL, ) }  # use only OmniPath: gr_network_omnipath <- nichenet_gr_network(only_omnipath = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_evex.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","title":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","text":"Builds gene regulatory network using data EVEX database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_evex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","text":"","code":"nichenet_gr_network_evex(   top_confidence = 0.75,   indirect = FALSE,   regulation_of_expression = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_evex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","text":"top_confidence Double, 0 1. Threshold based quantile confidence score. indirect Logical: whether include indirect interactions. regulation_of_expression Logical: whether include also \"regulation expression\" type interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_evex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","text":"Data frame interactions NicheNet format. Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_evex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from EVEX — nichenet_gr_network_evex","text":"","code":"# use only the 10% with the highest confidence: evex_gr_network <- nichenet_gr_network_evex(top_confidence = .9)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_harmonizome.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","title":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","text":"Builds gene regulatory network prior knowledge NicheNet using Harmonizome","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_harmonizome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","text":"","code":"nichenet_gr_network_harmonizome(   datasets = c(\"cheappi\", \"encodetfppi\", \"jasparpwm\", \"transfac\", \"transfacpwm\",     \"motifmap\", \"geotf\", \"geokinase\", \"geogene\"),   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_harmonizome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","text":"datasets datasets use. possible values please refer default value Harmonizome webpage. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_harmonizome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_harmonizome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from Harmonizome — nichenet_gr_network_harmonizome","text":"","code":"# use only JASPAR and TRANSFAC: hz_gr_network <- nichenet_gr_network_harmonizome(     datasets = c('jasparpwm', 'transfac', 'transfacpwm') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_htridb.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from HTRIdb — nichenet_gr_network_htridb","title":"NicheNet gene regulatory network from HTRIdb — nichenet_gr_network_htridb","text":"Builds gene regulatory network using data HTRIdb database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_htridb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from HTRIdb — nichenet_gr_network_htridb","text":"","code":"nichenet_gr_network_htridb()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_htridb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from HTRIdb — nichenet_gr_network_htridb","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_htridb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from HTRIdb — nichenet_gr_network_htridb","text":"","code":"htri_gr_network <- nichenet_gr_network_htridb()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_omnipath.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","title":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","text":"Retrieves network prior knowledge OmniPath provides format suitable NicheNet. method never downloads `ligrecextra` dataset ligand-receptor interactions supposed come  nichenet_lr_network_omnipath.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_omnipath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","text":"","code":"nichenet_gr_network_omnipath(min_curation_effort = 0, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_omnipath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","text":"min_curation_effort Lower threshold curation effort ... Passed import_transcriptional_interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_omnipath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","text":"network data frame (tibble) gene regulatory interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_omnipath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds gene regulatory network for NicheNet using OmniPath — nichenet_gr_network_omnipath","text":"","code":"# use interactions up to confidence level \"C\" from DoRothEA: op_gr_network <- nichenet_gr_network_omnipath(     dorothea_levels = c('A', 'B', 'C') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_pathwaycommons.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","title":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","text":"Builds gene regulation prior knowledge NicheNet using PathwayCommons.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_pathwaycommons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","text":"","code":"nichenet_gr_network_pathwaycommons(   interaction_types = \"controls-expression-of\",   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_pathwaycommons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","text":"interaction_types Character vector PathwayCommons interaction types. Please refer default value PathwayCommons webpage. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_pathwaycommons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_pathwaycommons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from PathwayCommons — nichenet_gr_network_pathwaycommons","text":"","code":"pc_gr_network <- nichenet_gr_network_pathwaycommons()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_regnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from RegNetwork — nichenet_gr_network_regnetwork","title":"NicheNet gene regulatory network from RegNetwork — nichenet_gr_network_regnetwork","text":"Builds gene regulatory network using data RegNetwork database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_regnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from RegNetwork — nichenet_gr_network_regnetwork","text":"","code":"nichenet_gr_network_regnetwork()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_regnetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from RegNetwork — nichenet_gr_network_regnetwork","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_regnetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from RegNetwork — nichenet_gr_network_regnetwork","text":"","code":"regn_gr_network <- nichenet_gr_network_regnetwork()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_remap.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","title":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","text":"Builds gene regulatory network using data ReMap database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_remap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","text":"","code":"nichenet_gr_network_remap(   score = 100,   top_targets = 500,   only_known_tfs = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_remap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","text":"score Numeric: minimum score 0 1000, records lower scores excluded. NULL filtering performed. top_targets Numeric: number top scoring targets TF. Essentially maximum number targets per TF. NULL number targets restricted. only_known_tfs Logical: whether exclude TFs TF census.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_remap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_remap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from ReMap — nichenet_gr_network_remap","text":"","code":"if (FALSE) { # use only max. top 100 targets for each TF: remap_gr_network <- nichenet_gr_network_remap(top_targets = 100) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_trrust.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet gene regulatory network from TRRUST — nichenet_gr_network_trrust","title":"NicheNet gene regulatory network from TRRUST — nichenet_gr_network_trrust","text":"Builds gene regulatory network using data TRRUST database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_trrust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet gene regulatory network from TRRUST — nichenet_gr_network_trrust","text":"","code":"nichenet_gr_network_trrust()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_trrust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet gene regulatory network from TRRUST — nichenet_gr_network_trrust","text":"Data frame gene regulatory interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_gr_network_trrust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet gene regulatory network from TRRUST — nichenet_gr_network_trrust","text":"","code":"trrust_gr_network <- nichenet_gr_network_trrust()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","title":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","text":"Calls NicheNet ligand activity analysis","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","text":"","code":"nichenet_ligand_activities(   ligand_target_matrix,   lr_network,   expressed_genes_transmitter,   expressed_genes_receiver,   genes_of_interest,   background_genes = NULL,   n_top_ligands = 42,   n_top_targets = 250 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","text":"ligand_target_matrix matrix rows columns corresponding ligands targets, respectively. Produced nichenet_ligand_target_matrix nichenetr::construct_ligand_target_matrix. lr_network data frame ligand-receptor interactions, produced nichenet_lr_network. expressed_genes_transmitter Character vector gene symbols genes expressed cells transmitting signal. expressed_genes_receiver Character vector gene symbols genes expressed cells receiving signal. genes_of_interest Character vector gene symbols genes interest. genes receiver cell population potentially affected ligands expressed interacting cells (e.g. genes differentially expressed upon cell-cell interaction). background_genes Character vector gene symbols genes used background. n_top_ligands many top ligands include ligand-target table. n_top_targets ligand, many top targets include ligand-target table.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_activities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","text":"named list `ligand_activities` (tibble giving several     ligand activity scores; following columns tibble: $test_ligand,     $auroc, $aupr $pearson) `ligand_target_links` (tibble     columns ligand, target weight (.e. regulatory potential score)).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_activities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calls the NicheNet ligand activity analysis — nichenet_ligand_activities","text":"","code":"if (FALSE) { networks <- nichenet_networks() expression <- nichenet_expression_data() optimization_results <- nichenet_optimization(networks, expression) nichenet_model <- nichenet_build_model(optimization_results, networks) lt_matrix <- nichenet_ligand_target_matrix(     nichenet_model$weighted_networks,     networks$lr_network,     nichenet_model$optimized_parameters ) ligand_activities <- nichenet_ligand_activities(     ligand_target_matrix = lt_matrix,     lr_network = networks$lr_network,     # the rest of the parameters should come     # from your transcriptomics data:     expressed_genes_transmitter = expressed_genes_transmitter,     expressed_genes_receiver = expressed_genes_receiver,     genes_of_interest = genes_of_interest ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","title":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","text":"wrapper around nichenetr::get_weighted_ligand_target_links compile data frame weighted links top ligands top targets.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","text":"","code":"nichenet_ligand_target_links(   ligand_activities,   ligand_target_matrix,   genes_of_interest,   n_top_ligands = 42,   n_top_targets = 250 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","text":"ligand_activities Ligand activity table produced nichenetr::predict_ligand_activities. ligand_target_matrix Ligand-target matrix produced nichenetr::construct_ligand_target_matrix wrapper around current package: nichenet_ligand_target_matrix. genes_of_interest Character vector gene symbols genes interest. genes receiver cell population potentially affected ligands expressed interacting cells (e.g. genes differentially expressed upon cell-cell interaction). n_top_ligands many top ligands include ligand-target table. n_top_targets ligand, many top targets include ligand-target table.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","text":"tibble columns ligand, target weight (.e. regulatory     potential score).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compiles a table with weighted ligand-target links — nichenet_ligand_target_links","text":"","code":"if (FALSE) { networks <- nichenet_networks() expression <- nichenet_expression_data() optimization_results <- nichenet_optimization(networks, expression) nichenet_model <- nichenet_build_model(optimization_results, networks) lt_matrix <- nichenet_ligand_target_matrix(     nichenet_model$weighted_networks,     networks$lr_network,     nichenet_model$optimized_parameters ) ligand_activities <- nichenet_ligand_activities(     ligand_target_matrix = lt_matrix,     lr_network = networks$lr_network,     # the rest of the parameters should come     # from your transcriptomics data:     expressed_genes_transmitter = expressed_genes_transmitter,     expressed_genes_receiver = expressed_genes_receiver,     genes_of_interest = genes_of_interest ) lt_links <- nichenet_ligand_target_links(     ligand_activities = ligand_activities,     ligand_target_matrix = lt_matrix,     genes_of_interest = genes_of_interest,     n_top_ligands = 20,     n_top_targets = 100 ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","title":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","text":"Creates NicheNet ligand-target matrix","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","text":"","code":"nichenet_ligand_target_matrix(   weighted_networks,   lr_network,   optimized_parameters,   use_weights = TRUE,   construct_ligand_target_matrix_param = list() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","text":"weighted_networks Weighted networks provided nichenet_build_model. lr_network data frame ligand-receptor interactions, produced nichenet_lr_network. optimized_parameters outcome NicheNet parameter optimization produced nichenet_build_model. use_weights Logical: wether network sources weighted. function affects output file name. construct_ligand_target_matrix_param Override parameters nichenetr::construct_ligand_target_matrix.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","text":"matrix containing ligand-target probability scores.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_ligand_target_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a NicheNet ligand-target matrix — nichenet_ligand_target_matrix","text":"","code":"if (FALSE) { networks <- nichenet_networks() expression <- nichenet_expression_data() optimization_results <- nichenet_optimization(networks, expression) nichenet_model <- nichenet_build_model(optimization_results, networks) lt_matrix <- nichenet_ligand_target_matrix(     nichenet_model$weighted_networks,     networks$lr_network,     nichenet_model$optimized_parameters ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","title":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","text":"Builds ligand-receptor network prior knowledge NicheNet using multiple resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","text":"","code":"nichenet_lr_network(   omnipath = list(),   guide2pharma = list(),   ramilowski = list(),   only_omnipath = FALSE,   quality_filter_param = list() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","text":"omnipath List paramaters passed nichenet_lr_network_omnipath. guide2pharma List paramaters passed nichenet_lr_network_guide2pharma. ramilowski List paramaters passed nichenet_lr_network_ramilowski. only_omnipath Logical: shortcut use OmniPath network resource. quality_filter_param Arguments  filter_intercell_network (quality filtering OmniPath ligand-receptor network). recommended check parameters apply quality filtering. defaults already ensure certain filtering, might want relaxed stringent options.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","text":"network data frame (tibble) ligand-receptor interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a NicheNet ligand-receptor network — nichenet_lr_network","text":"","code":"# load everything with the default parameters: lr_network <- nichenet_lr_network()  # don't use Ramilowski: lr_network <- nichenet_lr_network(ramilowski = NULL)  # use only OmniPath: lr_network_omnipath <- nichenet_lr_network(only_omnipath = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_guide2pharma.html","id":null,"dir":"Reference","previous_headings":"","what":"Ligand-receptor network from Guide to Pharmacology — nichenet_lr_network_guide2pharma","title":"Ligand-receptor network from Guide to Pharmacology — nichenet_lr_network_guide2pharma","text":"Downloads ligand-receptor interactions Guide Pharmacology database converts format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_guide2pharma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ligand-receptor network from Guide to Pharmacology — nichenet_lr_network_guide2pharma","text":"","code":"nichenet_lr_network_guide2pharma()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_guide2pharma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ligand-receptor network from Guide to Pharmacology — nichenet_lr_network_guide2pharma","text":"Data frame ligand-receptor interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_guide2pharma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ligand-receptor network from Guide to Pharmacology — nichenet_lr_network_guide2pharma","text":"","code":"g2p_lr_network <- nichenet_lr_network_guide2pharma()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_omnipath.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","title":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","text":"Retrieves network prior knowledge OmniPath provides format suitable NicheNet. method never downloads `ligrecextra` dataset ligand-receptor interactions supposed come  nichenet_lr_network_omnipath.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_omnipath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","text":"","code":"nichenet_lr_network_omnipath(quality_filter_param = list(), ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_omnipath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","text":"quality_filter_param List arguments  filter_intercell_network. recommended check parameters apply quality filtering. defaults already ensure certain  filtering, might want relaxed stringent options. ... Passed import_intercell_network","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_omnipath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","text":"network data frame (tibble) ligand-receptor interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_omnipath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds ligand-receptor network for NicheNet using OmniPath — nichenet_lr_network_omnipath","text":"","code":"# use only ligand-receptor interactions (not for example ECM-adhesion): op_lr_network <- nichenet_lr_network_omnipath(ligand_receptor = TRUE)  # use only CellPhoneDB and Guide to Pharmacology: op_lr_network <- nichenet_lr_network_omnipath(     resources = c('CellPhoneDB', 'Guide2Pharma') )  # only interactions where the receiver is a transporter: op_lr_network <- nichenet_lr_network_omnipath(     receiver_param = list(parent = 'transporter') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_ramilowski.html","id":null,"dir":"Reference","previous_headings":"","what":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","title":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","text":"Downloads ligand-receptor interactions Supplementary Table 2 paper 'draft network ligand–receptor-mediated multicellular signalling human' (Ramilowski et al. 2015, https://www.nature.com/articles/ncomms8866). converts downloaded table format suitable NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_ramilowski.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","text":"","code":"nichenet_lr_network_ramilowski(   evidences = c(\"literature supported\", \"putative\") )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_ramilowski.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","text":"evidences Character: evidence types, \"literature supported\", \"putative\" .","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_ramilowski.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","text":"Data frame ligand-receptor interactions NicheNet format.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_lr_network_ramilowski.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ligand-receptor network from Ramilowski 2015 — nichenet_lr_network_ramilowski","text":"","code":"# use only the literature supported data: rami_lr_network <- nichenet_lr_network_ramilowski(     evidences = 'literature supported' )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes the full NicheNet pipeline — nichenet_main","title":"Executes the full NicheNet pipeline — nichenet_main","text":"Builds prior knowledge data required NicheNet. calls multitude methods download combine data various databases according settings. content prior knowledge data highly customizable, see documentation related functions. prior knowledge ready, performs parameter optimization build NicheNet model. results weighted ligand- target matrix. , considering expressed genes user provided data, gene set interest background genes, executes NicheNet ligand activity analysis.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes the full NicheNet pipeline — nichenet_main","text":"","code":"nichenet_main(   only_omnipath = FALSE,   expressed_genes_transmitter = NULL,   expressed_genes_receiver = NULL,   genes_of_interest = NULL,   background_genes = NULL,   use_weights = TRUE,   n_top_ligands = 42,   n_top_targets = 250,   signaling_network = list(),   lr_network = list(),   gr_network = list(),   small = FALSE,   tiny = FALSE,   make_multi_objective_function_param = list(),   objective_function_param = list(),   mlrmbo_optimization_param = list(),   construct_ligand_target_matrix_param = list(),   results_dir = NULL,   quality_filter_param = list() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes the full NicheNet pipeline — nichenet_main","text":"only_omnipath Logical: use OmniPath network knowledge. simple switch convenience, options available arguments. default use available resources. networks can customized resource resource basis, well providing custom parameters individual resources, using parameters `signaling_network`, `lr_network` `gr_network`. expressed_genes_transmitter Character vector gene symbols genes expressed cells transmitting signal. expressed_genes_receiver Character vector gene symbols genes expressed cells receiving signal. genes_of_interest Character vector gene symbols genes interest. genes receiver cell population potentially affected ligands expressed interacting cells (e.g. genes differentially expressed upon cell-cell interaction). background_genes Character vector gene symbols genes used background. use_weights Logical: calculate use optimized weights resources (.e. one resource seems better another, hence former considered higher weight). n_top_ligands many top ligands include ligand-target table. n_top_targets many top targets (top ligands) consider ligand-target table. signaling_network list parameters building signaling network, passed nichenet_signaling_network. lr_network list parameters building ligand-receptor network, passed nichenet_lr_network. gr_network list parameters building gene regulatory network, passed nichenet_gr_network. small Logical: build small network testing purposes, using OmniPath data. also high quality network, reasonable try analysis small network. tiny Logical: build even smaller network testing purposes. involves random subsetting, recommended use network analysis. make_multi_objective_function_param Override parameters smoof::makeMultiObjectiveFunction. objective_function_param Override additional arguments passed objective function. mlrmbo_optimization_param Override arguments nichenetr::mlrmbo_optimization. construct_ligand_target_matrix_param Override parameters nichenetr::construct_ligand_target_matrix. results_dir Character: path directory save intermediate final outputs NicheNet methods. quality_filter_param Arguments  filter_intercell_network (quality filtering OmniPath ligand-receptor network). recommended check parameters apply quality filtering. defaults already ensure certain filtering, might want relaxed stringent options.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes the full NicheNet pipeline — nichenet_main","text":"named list intermediate final outputs     pipeline: `networks`, `expression`, `optimized_parameters`,     `weighted_networks` `ligand_target_matrix`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Executes the full NicheNet pipeline — nichenet_main","text":"small tiny networks: Building NicheNet model computationally demanding, taking several hours run. related enormous size networks, speed testing can use smaller networks, around 1,000 times smaller, thousands interactions instead millions. Random subsetting whole network result disjunct fragments, instead load resources. run whole pipeline tiny networks use  nichenet_test.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Executes the full NicheNet pipeline — nichenet_main","text":"","code":"if (FALSE) { nichenet_results <- nichenet_main(     # altering some network resource parameters, the rest     # of the resources will be loaded according to the defaults     signaling_network = list(         cpdb = NULL, # this resource will be excluded         inbiomap = NULL,         evex = list(min_confidence = 1.0) # override some parameters     ),     gr_network = list(only_omnipath = TRUE),     n_top_ligands = 20,     # override the default number of CPU cores to use     mlrmbo_optimization_param = list(ncores = 4) ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds NicheNet network prior knowledge — nichenet_networks","title":"Builds NicheNet network prior knowledge — nichenet_networks","text":"Builds network knowledge required NicheNet. calls multitude methods download combine data various databases according settings. content prior knowledge data highly customizable, see documentation related functions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds NicheNet network prior knowledge — nichenet_networks","text":"","code":"nichenet_networks(   signaling_network = list(),   lr_network = list(),   gr_network = list(),   only_omnipath = FALSE,   small = FALSE,   tiny = FALSE,   quality_filter_param = list() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds NicheNet network prior knowledge — nichenet_networks","text":"signaling_network list parameters building signaling network, passed nichenet_signaling_network lr_network list parameters building ligand-receptor network, passed nichenet_lr_network gr_network list parameters building gene regulatory network, passed nichenet_gr_network only_omnipath Logical: shortcut use OmniPath network resource. small Logical: build small network testing purposes, using OmniPath data. also high quality network, reasonable try analysis small network. tiny Logical: build even smaller network testing purposes. involves random subsetting, recommended use network analysis. quality_filter_param Arguments  filter_intercell_network (quality filtering OmniPath ligand-receptor network). recommended check parameters apply quality filtering. defaults already ensure certain filtering, might want relaxed stringent options.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds NicheNet network prior knowledge — nichenet_networks","text":"named list three network data frames (tibbles):     signaling, ligand-receptor (lr) gene regulatory (gr)     networks.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_networks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds NicheNet network prior knowledge — nichenet_networks","text":"","code":"if (FALSE) { networks <- nichenet_networks() dplyr::sample_n(networks$gr_network, 10) # # A tibble: 10 x 4 #    from    to       source               database #    <chr>   <chr>    <chr>                <chr> #  1 MAX     ALG3     harmonizome_ENCODE   harmonizome #  2 MAX     IMPDH1   harmonizome_ENCODE   harmonizome #  3 SMAD5   LCP1     Remap_5              Remap #  4 HNF4A   TNFRSF19 harmonizome_CHEA     harmonizome #  5 SMC3    FAP      harmonizome_ENCODE   harmonizome #  6 E2F6    HIST1H1B harmonizome_ENCODE   harmonizome #  7 TFAP2C  MAT2B    harmonizome_ENCODE   harmonizome #  8 USF1    TBX4     harmonizome_TRANSFAC harmonizome #  9 MIR133B FETUB    harmonizome_TRANSFAC harmonizome # 10 SP4     HNRNPH2  harmonizome_ENCODE   harmonizome }  # use only OmniPath: omnipath_networks <- nichenet_networks(only_omnipath = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_optimization.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimizes NicheNet model parameters — nichenet_optimization","title":"Optimizes NicheNet model parameters — nichenet_optimization","text":"Optimize NicheNet method parameters, .e. PageRank parameters source weights, basedon collection experiments effect ligand gene expression measured.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_optimization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizes NicheNet model parameters — nichenet_optimization","text":"","code":"nichenet_optimization(   networks,   expression,   make_multi_objective_function_param = list(),   objective_function_param = list(),   mlrmbo_optimization_param = list() )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_optimization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimizes NicheNet model parameters — nichenet_optimization","text":"networks list NicheNet format signaling, ligand-receptor gene regulatory networks produced nichenet_networks. expression list expression data ligand perturbation experiments, produced nichenet_expression_data. make_multi_objective_function_param Override parameters smoof::makeMultiObjectiveFunction. objective_function_param Override additional arguments passed objective function. mlrmbo_optimization_param Override arguments nichenetr::mlrmbo_optimization.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_optimization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimizes NicheNet model parameters — nichenet_optimization","text":"result object function ‘mlrMBO::mbo’. Among     things, contains optimal parameter settings, output     corresponding every input etc.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_optimization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimizes NicheNet model parameters — nichenet_optimization","text":"","code":"if (FALSE) { networks <- nichenet_networks() expression <- nichenet_expression_data() optimization_results <- nichenet_optimization(networks, expression) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_remove_orphan_ligands.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","title":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","text":"Removes expression data perturbation experiments involving ligands without connections.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_remove_orphan_ligands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","text":"","code":"nichenet_remove_orphan_ligands(expression, lr_network)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_remove_orphan_ligands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","text":"expression Expression data returned nichenet_expression_data. lr_network NicheNet format ligand-recptor network data frame produced nichenet_lr_network.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_remove_orphan_ligands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","text":"list `expression` certain elements removed.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_remove_orphan_ligands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes experiments with orphan ligands — nichenet_remove_orphan_ligands","text":"","code":"if (FALSE) { lr_network <- nichenet_lr_network() expression <- nichenet_expression_data() expression <- nichenet_remove_orphan_ligands(expression, lr_network) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_results_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the current NicheNet results directory — nichenet_results_dir","title":"Path to the current NicheNet results directory — nichenet_results_dir","text":"Path directory save intermediate final outputs NicheNet methods.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_results_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the current NicheNet results directory — nichenet_results_dir","text":"","code":"nichenet_results_dir()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_results_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to the current NicheNet results directory — nichenet_results_dir","text":"Character: path NicheNet results directory.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_results_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to the current NicheNet results directory — nichenet_results_dir","text":"","code":"nichenet_results_dir() #> [1] \"nichenet_results\" # [1] \"nichenet_results\""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a NicheNet signaling network — nichenet_signaling_network","title":"Builds a NicheNet signaling network — nichenet_signaling_network","text":"Builds signaling network prior knowledge NicheNet using multiple resources.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a NicheNet signaling network — nichenet_signaling_network","text":"","code":"nichenet_signaling_network(   omnipath = list(),   pathwaycommons = list(),   harmonizome = list(),   vinayagam = list(),   cpdb = list(),   evex = list(),   inbiomap = list(),   only_omnipath = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a NicheNet signaling network — nichenet_signaling_network","text":"omnipath List paramaters passed nichenet_signaling_network_omnipath. pathwaycommons List paramaters passed nichenet_signaling_network_pathwaycommons. harmonizome List paramaters passed nichenet_signaling_network_harmonizome. vinayagam List paramaters passed nichenet_signaling_network_vinayagam. cpdb List paramaters passed nichenet_signaling_network_cpdb. evex List paramaters passed nichenet_signaling_network_evex. inbiomap List paramaters passed nichenet_signaling_network_inbiomap. only_omnipath Logical: shortcut use OmniPath network resource.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a NicheNet signaling network — nichenet_signaling_network","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a NicheNet signaling network — nichenet_signaling_network","text":"","code":"# load everything with the default parameters: # we don't load inBio Map due to the - hopefully # temporary - issues of their server sig_network <- nichenet_signaling_network(inbiomap = NULL, cpdb = NULL)  # override parameters for some resources: sig_network <- nichenet_signaling_network(     omnipath = list(resources = c('SIGNOR', 'SignaLink3', 'SPIKE')),     pathwaycommons = NULL,     harmonizome = list(datasets = c('phosphositeplus', 'depod')),     # we can not include this in everyday tests as it takes too long:     # cpdb = list(complex_max_size = 1, min_score = .98),     cpdb = NULL,     evex = list(min_confidence = 1.5),     inbiomap = NULL )  # use only OmniPath: sig_network_omnipath <- nichenet_signaling_network(only_omnipath = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_cpdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","title":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","text":"Builds signaling network prior knowledge using ConsensusPathDB (CPDB) data. Note, interactions CPDB directed many comes complex expansion. Find http://cpdb.molgen.mpg.de/.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_cpdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","text":"","code":"nichenet_signaling_network_cpdb(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_cpdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","text":"... Passed consensuspathdb_download.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_cpdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_cpdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds signaling network for NicheNet using ConsensusPathDB — nichenet_signaling_network_cpdb","text":"","code":"if (FALSE) { # use some parameters stricter than default: cpdb_signaling_network <- nichenet_signaling_network_cpdb(     complex_max_size = 2,     min_score = .99 ) }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_evex.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","title":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","text":"Builds signaling network prior knowledge NicheNet EVEX database.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_evex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","text":"","code":"nichenet_signaling_network_evex(top_confidence = 0.75, indirect = FALSE, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_evex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","text":"top_confidence Double, 0 1. Threshold based quantile confidence score. indirect Logical: whether include indirect interactions. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_evex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_evex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet signaling network from EVEX — nichenet_signaling_network_evex","text":"","code":"ev_signaling_network <- nichenet_signaling_network_evex(     top_confidence = .9 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_harmonizome.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","title":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","text":"Builds signaling network prior knowledge NicheNet using Harmonizome","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_harmonizome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","text":"","code":"nichenet_signaling_network_harmonizome(   datasets = c(\"phosphositeplus\", \"kea\", \"depod\"),   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_harmonizome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","text":"datasets datasets use. possible values please refer default value Harmonizome webpage. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_harmonizome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_harmonizome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet signaling network from Harmonizome — nichenet_signaling_network_harmonizome","text":"","code":"# use only KEA and PhosphoSite: hz_signaling_network <- nichenet_signaling_network_harmonizome(     datasets = c('kea', 'phosphositeplus') )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_inbiomap.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","title":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","text":"Builds signaling network prior knowledge NicheNet InWeb InBioMap database.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_inbiomap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","text":"","code":"nichenet_signaling_network_inbiomap(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_inbiomap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","text":"... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_inbiomap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_inbiomap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet signaling network from InWeb InBioMap — nichenet_signaling_network_inbiomap","text":"","code":"if (FALSE) { ib_signaling_network <- nichenet_signaling_network_inbiomap() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_omnipath.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","title":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","text":"Retrieves network prior knowledge OmniPath provides format suitable NicheNet. method never downloads `ligrecextra` dataset ligand-receptor interactions supposed come  nichenet_lr_network_omnipath.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_omnipath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","text":"","code":"nichenet_signaling_network_omnipath(min_curation_effort = 0, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_omnipath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","text":"min_curation_effort Lower threshold curation effort ... Passed import_post_translational_interactions","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_omnipath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_omnipath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds signaling network for NicheNet using OmniPath — nichenet_signaling_network_omnipath","text":"","code":"# use interactions with at least 2 evidences (reference or database) op_signaling_network <- nichenet_signaling_network_omnipath(     min_curation_effort = 2 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_pathwaycommons.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","title":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","text":"Builds signaling network prior knowledge NicheNet using PathwayCommons.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_pathwaycommons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","text":"","code":"nichenet_signaling_network_pathwaycommons(   interaction_types = c(\"catalysis-precedes\", \"controls-phosphorylation-of\",     \"controls-state-change-of\", \"controls-transport-of\", \"in-complex-with\",     \"interacts-with\"),   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_pathwaycommons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","text":"interaction_types Character vector PathwayCommons interaction types. Please refer default value PathwayCommons webpage. ... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_pathwaycommons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_pathwaycommons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet signaling network from PathwayCommons — nichenet_signaling_network_pathwaycommons","text":"","code":"# use only the \"controls-transport-of\" interactions: pc_signaling_network <- nichenet_signaling_network_pathwaycommons(     interaction_types = 'controls-transport-of' )"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_vinayagam.html","id":null,"dir":"Reference","previous_headings":"","what":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","title":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","text":"Builds signaling network prior knowledge NicheNet using Vinayagam 2011 Supplementary Table S6. Find https://doi.org/10.1126/scisignal.2001699.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_vinayagam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","text":"","code":"nichenet_signaling_network_vinayagam(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_vinayagam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","text":"... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_vinayagam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","text":"network data frame (tibble) signaling interactions     suitable use NicheNet.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_signaling_network_vinayagam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NicheNet signaling network from Vinayagam — nichenet_signaling_network_vinayagam","text":"","code":"vi_signaling_network <- nichenet_signaling_network_vinayagam()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the NicheNet pipeline with a little dummy network — nichenet_test","title":"Run the NicheNet pipeline with a little dummy network — nichenet_test","text":"Loads tiny network runs NicheNet pipeline low number iterations optimization process. way pipeline runs reasonable time order test code. Due random subsampling disconnected networks might produced sometimes. see error like \"Error (sd(prediction_vector) == 0) ... missing value TRUE/FALSE needed\", random subsampled input appropriate. case just interrupt call . test ensures computational integrity pipeline. fails optimization process, try start several times, even restarting R. unpredictability related codemlrMBO nichenetr prepared handle certain conditions, also difficult find conditions lead errors. least 3 different errors appear time time, depending input. also seems like restarting R sometimes helps, suggesting entire system might somehow stateful. can ignore  Parallelization stopped warnings repeated runs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the NicheNet pipeline with a little dummy network — nichenet_test","text":"","code":"nichenet_test(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the NicheNet pipeline with a little dummy network — nichenet_test","text":"... Passed nichenet_main.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the NicheNet pipeline with a little dummy network — nichenet_test","text":"named list intermediate final outputs     pipeline: `networks`, `expression`, `optimized_parameters`,     `weighted_networks` `ligand_target_matrix`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the NicheNet pipeline with a little dummy network — nichenet_test","text":"","code":"if (FALSE) { nnt <- nichenet_test() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_workarounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Workarounds using NicheNet without attaching the package — nichenet_workarounds","title":"Workarounds using NicheNet without attaching the package — nichenet_workarounds","text":"NicheNet requires availability lazy loaded external data available package loaded attached. Also, BBmisc::convertToShortString used error reporting mlrMBO::evalTargetFun.OptState patched print longer error messages. Maybe better solution attach nichenetr running NicheNet pipeline. Alternatively can try call function beginning. call automatically just want load datasets another package without user knowing .","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_workarounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workarounds using NicheNet without attaching the package — nichenet_workarounds","text":"","code":"nichenet_workarounds()"},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_workarounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Workarounds using NicheNet without attaching the package — nichenet_workarounds","text":"Returns NULL.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/nichenet_workarounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workarounds using NicheNet without attaching the package — nichenet_workarounds","text":"","code":"if (FALSE) { nichenet_workarounds() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/obo_parser.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic OBO parser — obo_parser","title":"Generic OBO parser — obo_parser","text":"Reads contents OBO file processes data frames list based data structure.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/obo_parser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic OBO parser — obo_parser","text":"","code":"obo_parser(   path,   relations = c(\"is_a\", \"part_of\", \"occurs_in\", \"regulates\", \"positively_regulates\",     \"negatively_regulates\"),   shorten_namespace = TRUE,   tables = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/obo_parser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic OBO parser — obo_parser","text":"path Path OBO file. relations Character vector: process relations. shorten_namespace Logical: shorten namespace single letter code (usual Gene Ontology, e.g. cellular_component = \"C\"). tables Logical: return data frames (tibbles) instead nested lists.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/obo_parser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic OBO parser — obo_parser","text":"list following elements: 1) \"names\" list     terms names names values; 2) \"namespaces\" list     terms names namespaces values; 3) \"relations\" list     relations terms: terms keys, values lists     relations names character vectors related terms     values; 4) \"subsets\" list terms keys character     vectors subset names values (NULL term     belong subset); 5) \"obsolete\" character vector     terms labeled obsolete. tables parameter TRUE, \"names\", \"namespaces\", \"relations\"     \"subsets\" data frames (tibbles).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/obo_parser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic OBO parser — obo_parser","text":"","code":"goslim_url <-     \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\" path <- tempfile() httr::GET(goslim_url, httr::write_disk(path, overwrite = TRUE)) #> Response [http://current.geneontology.org/ontology/subsets/goslim_generic.obo] #>   Date: 2022-10-15 18:56 #>   Status: 200 #>   Content-Type: text/obo #>   Size: 114 kB #> <ON DISK>  /tmp/Rtmpvmm0Vg/file2269a01ed29c61 obo <- obo_parser(path, tables = FALSE) unlink(path) names(obo) #> [1] \"names\"       \"namespaces\"  \"relations\"   \"subsets\"     \"obsolete\"    #> [6] \"rel_lst_c2p\" # [1] \"names\"      \"namespaces\" \"relations\"  \"subsets\"    \"obsolete\" head(obo$relations, n = 2) #> $`GO:0000228` #> $`GO:0000228`$is_a #> [1] \"GO:0005694\" #>  #> $`GO:0000228`$part_of #> [1] \"GO:0005634\" #>  #>  #> $`GO:0000278` #> $`GO:0000278`$has_part #> [1] \"GO:0140014\" #>  #>  # $`GO:0000001` # $`GO:0000001`$is_a # [1] \"GO:0048308\" \"GO:0048311\" # # $`GO:0000002` # $`GO:0000002`$is_a # [1] \"GO:0007005\""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_autoclean.html","id":null,"dir":"Reference","previous_headings":"","what":"Keeps only the latest versions of complete downloads — omnipath_cache_autoclean","title":"Keeps only the latest versions of complete downloads — omnipath_cache_autoclean","text":"Removes old versions, failed downloads files cache directory missing database. flexible operations use omnipath_cache_remove omnipath_cache_clean.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_autoclean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keeps only the latest versions of complete downloads — omnipath_cache_autoclean","text":"","code":"omnipath_cache_autoclean()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_autoclean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keeps only the latest versions of complete downloads — omnipath_cache_autoclean","text":"Invisibl returns cache database (list cache records).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_autoclean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keeps only the latest versions of complete downloads — omnipath_cache_autoclean","text":"","code":"if (FALSE) { omnipath_cache_autoclean() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the items from the cache directory which are unknown by the cache\ndatabase — omnipath_cache_clean","title":"Removes the items from the cache directory which are unknown by the cache\ndatabase — omnipath_cache_clean","text":"Removes items cache directory unknown cache database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the items from the cache directory which are unknown by the cache\ndatabase — omnipath_cache_clean","text":"","code":"omnipath_cache_clean()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the items from the cache directory which are unknown by the cache\ndatabase — omnipath_cache_clean","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes the items from the cache directory which are unknown by the cache\ndatabase — omnipath_cache_clean","text":"","code":"omnipath_cache_clean()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the cache database entries without existing files — omnipath_cache_clean_db","title":"Removes the cache database entries without existing files — omnipath_cache_clean_db","text":"Removes cache database entries without existing files","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the cache database entries without existing files — omnipath_cache_clean_db","text":"","code":"omnipath_cache_clean_db(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes the cache database entries without existing files — omnipath_cache_clean_db","text":"... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the cache database entries without existing files — omnipath_cache_clean_db","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_clean_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes the cache database entries without existing files — omnipath_cache_clean_db","text":"","code":"omnipath_cache_clean_db()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_download_ready.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","title":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","text":"Sets download status ready cache item","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_download_ready.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","text":"","code":"omnipath_cache_download_ready(version, key = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_download_ready.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","text":"version Version cache item. exist new version item created key Key cache item","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_download_ready.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","text":"Character: invisibly returns version number cache     version item.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_download_ready.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the download status to ready for a cache item — omnipath_cache_download_ready","text":"","code":"bioc_url <- 'https://bioconductor.org/' # request a new version item (or retrieve the latest) new_version <- omnipath_cache_latest_or_new(url = bioc_url) # check if the version item is not a finished download new_version$status #> [1] \"unknown\" # [1] \"unknown\" # download the file httr::GET(bioc_url, httr::write_disk(new_version$path, overwrite = TRUE)) #> Response [https://bioconductor.org/] #>   Date: 2022-10-16 14:13 #>   Status: 200 #>   Content-Type: text/html #>   Size: 18.3 kB #> <ON DISK>  /home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1 # report to the cache database that the download is ready omnipath_cache_download_ready(new_version) # now the status is ready: version <- omnipath_cache_latest_or_new(url = bioc_url) version$status #> [1] \"ready\" # \"ready\" version$dl_finished #> [1] \"2022-10-16 16:18:33 CEST\" # [1] \"2021-03-09 16:48:38 CET\" omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_filter_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters the versions from one cache record — omnipath_cache_filter_versions","title":"Filters the versions from one cache record — omnipath_cache_filter_versions","text":"Filters versions based multiple conditions: age status","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_filter_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the versions from one cache record — omnipath_cache_filter_versions","text":"","code":"omnipath_cache_filter_versions(   record,   latest = FALSE,   max_age = NULL,   min_age = NULL,   status = CACHE_STATUS$READY )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_filter_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the versions from one cache record — omnipath_cache_filter_versions","text":"record cache record latest Return recent version max_age maximum age days (e.g. 5: 5 days old recent) min_age minimum age days (e.g. 5: 5 days old older) status Character vector status codes. default versions `ready` (completed download) status selected","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_filter_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters the versions from one cache record — omnipath_cache_filter_versions","text":"Character vector version IDs, NA version satisfies     conditions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_filter_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters the versions from one cache record — omnipath_cache_filter_versions","text":"","code":"# creating an example cache record bioc_url <- 'https://bioconductor.org/' version <- omnipath_cache_latest_or_new(url = bioc_url) httr::GET(bioc_url, httr::write_disk(version$path, overwrite = TRUE)) #> Response [https://bioconductor.org/] #>   Date: 2022-10-16 14:13 #>   Status: 200 #>   Content-Type: text/html #>   Size: 18.3 kB #> <ON DISK>  /home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1 omnipath_cache_download_ready(version) record <- dplyr::first(omnipath_cache_search('biocond'))  # only the versions with status \"ready\" version_numbers <- omnipath_cache_filter_versions(record, status = 'ready') omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves one item from the cache directory — omnipath_cache_get","title":"Retrieves one item from the cache directory — omnipath_cache_get","text":"Retrieves one item cache directory","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves one item from the cache directory — omnipath_cache_get","text":"","code":"omnipath_cache_get(   key = NULL,   url = NULL,   post = NULL,   payload = NULL,   create = TRUE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves one item from the cache directory — omnipath_cache_get","text":"key key cache record url URL pointing resource post HTTP POST parameters list payload HTTP data payload create Create new entry exist yet ... Passed omnipath_cache_record (internal function)","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves one item from the cache directory — omnipath_cache_get","text":"Cache record: existing record entry already exists,     otherwise newly created inserted record","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves one item from the cache directory — omnipath_cache_get","text":"","code":"# create an example cache record bioc_url <- 'https://bioconductor.org/' version <- omnipath_cache_latest_or_new(url = bioc_url) omnipath_cache_remove(url = bioc_url) # cleaning up  # retrieve the cache record record <- omnipath_cache_get(url = bioc_url) record$key #> [1] \"41346a00fb20d2a9df03aa70cf4d50bf88ab154a\" # [1] \"41346a00fb20d2a9df03aa70cf4d50bf88ab154a\" record$url #> [1] \"https://bioconductor.org/\" # [1] \"https://bioconductor.org/\""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","title":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","text":"Generates hash identifies element cache database","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","text":"","code":"omnipath_cache_key(url, post = NULL, payload = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","text":"url Character vector URLs post List HTTP POST parameters list lists url vector longer 1. NULL queries without POST parameters. payload HTTP data payload. List multiple items url vector longer 1. NULL queries without data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","text":"Character vector cache record keys.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a hash which identifies an element in the cache database — omnipath_cache_key","text":"","code":"bioc_url <- 'https://bioconductor.org/' omnipath_cache_key(bioc_url) #> [1] \"41346a00fb20d2a9df03aa70cf4d50bf88ab154a\" # [1] \"41346a00fb20d2a9df03aa70cf4d50bf88ab154a\""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_or_new.html","id":null,"dir":"Reference","previous_headings":"","what":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","title":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","text":"Looks record cache returns latest valid version. record exist valid version available, creates new one.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_or_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","text":"","code":"omnipath_cache_latest_or_new(   key = NULL,   url = NULL,   post = NULL,   payload = NULL,   create = TRUE,   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_or_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","text":"key key cache record url URL pointing resource post HTTP POST parameters list payload HTTP data payload create Logical: whether create return new version. FALSE latest existing valid version returned, available. ... Passed omnipath_cache_get","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_or_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","text":"cache version item.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_or_new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The latest or a new version of a cache record — omnipath_cache_latest_or_new","text":"","code":"if (FALSE) { # retrieve the latest version of the first cache record # found by the search keyword \"bioplex\" latest_bioplex <-     omnipath_cache_latest_or_new(         names(omnipath_cache_search('bioplex'))[1]     )  latest_bioplex$dl_finished # [1] \"2021-03-09 14:28:50 CET\" latest_bioplex$path # [1] \"/home/denes/.cache/OmnipathR/378e0def2ac97985f629-1.rds\" }  # create an example cache record bioc_url <- 'https://bioconductor.org/' version <- omnipath_cache_latest_or_new(url = bioc_url) omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the most recent version in a cache record — omnipath_cache_latest_version","title":"Finds the most recent version in a cache record — omnipath_cache_latest_version","text":"Finds recent version cache record","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the most recent version in a cache record — omnipath_cache_latest_version","text":"","code":"omnipath_cache_latest_version(record)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the most recent version in a cache record — omnipath_cache_latest_version","text":"record cache record","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_latest_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the most recent version in a cache record — omnipath_cache_latest_version","text":"Character: version ID recent download finished     time","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads an R object from the cache — omnipath_cache_load","title":"Loads an R object from the cache — omnipath_cache_load","text":"Loads object RDS format.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads an R object from the cache — omnipath_cache_load","text":"","code":"omnipath_cache_load(   key = NULL,   version = NULL,   url = NULL,   post = NULL,   payload = NULL )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads an R object from the cache — omnipath_cache_load","text":"key Key cache item version Version cache item. exist NULL, latest version retrieved url URL downloaded resource post HTTP POST parameters list payload HTTP data payload","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads an R object from the cache — omnipath_cache_load","text":"Object loaded cache RDS file.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads an R object from the cache — omnipath_cache_load","text":"","code":"url <- paste0(     'https://omnipathdb.org/intercell?resources=Adhesome,Almen2009,',     'Baccin2019,CSPA,CellChatDB&license=academic' ) result <- read.delim(url, sep = '\\t') omnipath_cache_save(result, url = url) # works only if you have already this item in the cache intercell_data <- omnipath_cache_load(url = url) class(intercell_data) #> [1] \"data.frame\" # [1] \"data.frame\" nrow(intercell_data) #> [1] 17172 # [1] 16622 attr(intercell_data, 'origin') #> [1] \"cache\" # [1] \"cache\"  # basic example of saving and loading to and from the cache: bioc_url <- 'https://bioconductor.org/' bioc_html <- readChar(url(bioc_url), nchars = 99999) omnipath_cache_save(bioc_html, url = bioc_url) bioc_html <- omnipath_cache_load(url = bioc_url)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_move_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Moves an existing file into the cache — omnipath_cache_move_in","title":"Moves an existing file into the cache — omnipath_cache_move_in","text":"Either key URL (POST payload) must provided.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_move_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moves an existing file into the cache — omnipath_cache_move_in","text":"","code":"omnipath_cache_move_in(   path,   key = NULL,   version = NULL,   url = NULL,   post = NULL,   payload = NULL,   keep_original = FALSE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_move_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moves an existing file into the cache — omnipath_cache_move_in","text":"path Path source file key Key cache item version Version cache item. exist new version item created url URL downloaded resource post HTTP POST parameters list payload HTTP data payload keep_original Whether keep remove original file","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_move_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moves an existing file into the cache — omnipath_cache_move_in","text":"Character: invisibly returns version number cache     version item.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_move_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moves an existing file into the cache — omnipath_cache_move_in","text":"","code":"path <- tempfile() saveRDS(rnorm(100), file = path) omnipath_cache_move_in(path, url = 'the_download_address')  # basic example of moving a file to the cache:  bioc_url <- 'https://bioconductor.org/' html_file <- tempfile(fileext = '.html') httr::GET(bioc_url, httr::write_disk(html_file, overwrite = TRUE)) #> Response [https://bioconductor.org/] #>   Date: 2022-10-16 14:13 #>   Status: 200 #>   Content-Type: text/html #>   Size: 18.3 kB #> <ON DISK>  /tmp/Rtmpvmm0Vg/file2269a06258710d.html omnipath_cache_move_in(path = html_file, url = bioc_url) omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes contents from the cache directory — omnipath_cache_remove","title":"Removes contents from the cache directory — omnipath_cache_remove","text":"According parameters, can remove contents older certain age, contents recent version, one specific item, wipe entire cache.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes contents from the cache directory — omnipath_cache_remove","text":"","code":"omnipath_cache_remove(key = NULL, url = NULL, post = NULL,     payload = NULL, max_age = NULL, min_age = NULL, status = NULL,     only_latest = FALSE, wipe = FALSE, autoclean = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes contents from the cache directory — omnipath_cache_remove","text":"key key cache record url URL pointing resource post HTTP POST parameters list payload HTTP data payload max_age Age cache items days. Remove everything older age min_age Age cache items days. Remove everything recent age status Remove items states listed only_latest Keep latest version wipe Logical: TRUE, removes files cache cache database. calling omnipath_cache_wipe. autoclean Remove entries failed downloads, files cache directory missing cache database, entries without existing files cache directory","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes contents from the cache directory — omnipath_cache_remove","text":"Invisibly returns cache database (list cache records).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes contents from the cache directory — omnipath_cache_remove","text":"","code":"if (FALSE) { # remove all cache data from the BioPlex database cache_records <- omnipath_cache_search(     'bioplex',     ignore.case = TRUE ) omnipath_cache_remove(names(cache_records))  # remove a record by its URL regnetwork_url <- 'http://www.regnetworkweb.org/download/human.zip' omnipath_cache_remove(url = regnetwork_url)  # remove all records older than 30 days omnipath_cache_remove(max_age = 30)  # for each record, remove all versions except the latest omnipath_cache_remove(only_latest = TRUE) }  bioc_url <- 'https://bioconductor.org/' version <- omnipath_cache_latest_or_new(url = bioc_url) httr::GET(bioc_url, httr::write_disk(version$path, overwrite = TRUE)) #> Response [https://bioconductor.org/] #>   Date: 2022-10-16 14:13 #>   Status: 200 #>   Content-Type: text/html #>   Size: 18.3 kB #> <ON DISK>  /home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1 omnipath_cache_download_ready(version) key <- omnipath_cache_key(bioc_url) omnipath_cache_remove(key = key)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves an R object to the cache — omnipath_cache_save","title":"Saves an R object to the cache — omnipath_cache_save","text":"Exports object RDS format, creates new cache record necessary.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves an R object to the cache — omnipath_cache_save","text":"","code":"omnipath_cache_save(   data,   key = NULL,   version = NULL,   url = NULL,   post = NULL,   payload = NULL )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves an R object to the cache — omnipath_cache_save","text":"data object key Key cache item version Version cache item. exist new version item created url URL downloaded resource post HTTP POST parameters list payload HTTP data payload","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves an R object to the cache — omnipath_cache_save","text":"Returns invisibly data . Invisibly returns `data`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves an R object to the cache — omnipath_cache_save","text":"","code":"mydata <- data.frame(a = c(1, 2, 3), b = c('a', 'b', 'c')) omnipath_cache_save(mydata, url = 'some_dummy_address') from_cache <- omnipath_cache_load(url = 'some_dummy_address') from_cache #>   a b #> 1 1 a #> 2 2 b #> 3 3 c #   a b # 1 1 a # 2 2 b # 3 3 c attr(from_cache, 'origin') #> [1] \"cache\" # [1] \"cache\"  # basic example of saving and loading to and from the cache: bioc_url <- 'https://bioconductor.org/' bioc_html <- readChar(url(bioc_url), nchars = 99999) omnipath_cache_save(bioc_html, url = bioc_url) bioc_html <- omnipath_cache_load(url = bioc_url)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches for cache items — omnipath_cache_search","title":"Searches for cache items — omnipath_cache_search","text":"Searches cache records matching URL string regexp.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches for cache items — omnipath_cache_search","text":"","code":"omnipath_cache_search(pattern, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches for cache items — omnipath_cache_search","text":"pattern String regular expression. ... Passed grep","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches for cache items — omnipath_cache_search","text":"List cache records matching pattern.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches for cache items — omnipath_cache_search","text":"","code":"# find all cache records from the BioPlex database bioplex_cache_records <- omnipath_cache_search(     'bioplex',     ignore.case = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_set_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the file extension for a cache record — omnipath_cache_set_ext","title":"Sets the file extension for a cache record — omnipath_cache_set_ext","text":"Sets file extension cache record","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_set_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the file extension for a cache record — omnipath_cache_set_ext","text":"","code":"omnipath_cache_set_ext(key, ext)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_set_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the file extension for a cache record — omnipath_cache_set_ext","text":"key Character: key cache item, alternatively version entry. ext Character: file extension, e.g. \"zip\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_set_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the file extension for a cache record — omnipath_cache_set_ext","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_set_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the file extension for a cache record — omnipath_cache_set_ext","text":"","code":"bioc_url <- 'https://bioconductor.org/' version <- omnipath_cache_latest_or_new(url = bioc_url) version$path #> [1] \"/home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1.rds\" # [1] \"/home/denes/.cache/OmnipathR/41346a00fb20d2a9df03-1\" httr::GET(bioc_url, httr::write_disk(version$path, overwrite = TRUE)) #> Response [https://bioconductor.org/] #>   Date: 2022-10-16 14:13 #>   Status: 200 #>   Content-Type: text/html #>   Size: 18.3 kB #> <ON DISK>  /home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1.rds key <- omnipath_cache_key(url = bioc_url) omnipath_cache_set_ext(key = key, ext = 'html') version <- omnipath_cache_latest_or_new(url = bioc_url) version$path #> [1] \"/home/denes/.cache/OmnipathR/41346a00fb20d2a9df03aa70cf4d50bf88ab154a-1.html\" # [1] \"/home/denes/.cache/OmnipathR/41346a00fb20d2a9df03-1.html\" record <- omnipath_cache_get(url = bioc_url) record$ext #> [1] \"html\" # [1] \"html\" omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_update_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the status of an existing cache record — omnipath_cache_update_status","title":"Updates the status of an existing cache record — omnipath_cache_update_status","text":"Updates status existing cache record","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_update_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the status of an existing cache record — omnipath_cache_update_status","text":"","code":"omnipath_cache_update_status(key, version, status,     dl_finished = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_update_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates the status of an existing cache record — omnipath_cache_update_status","text":"key Key cache item version Version cache item. exist new version item created status updated status value dl_finished Timestamp time download finished, `NULL` value remains unchanged","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_update_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates the status of an existing cache record — omnipath_cache_update_status","text":"Character: invisibly returns version number cache     version item.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_update_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Updates the status of an existing cache record — omnipath_cache_update_status","text":"","code":"bioc_url <- 'https://bioconductor.org/' latest_version <- omnipath_cache_latest_or_new(url = bioc_url) key <- omnipath_cache_key(bioc_url) omnipath_cache_update_status(     key = key,     version = latest_version$number,     status = 'ready',     dl_finished = Sys.time() ) omnipath_cache_remove(url = bioc_url) # cleaning up"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_wipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Permanently removes all the cache contents — omnipath_cache_wipe","title":"Permanently removes all the cache contents — omnipath_cache_wipe","text":"operation cache directory completely empty, except empty cache database file.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_wipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permanently removes all the cache contents — omnipath_cache_wipe","text":"","code":"omnipath_cache_wipe(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_wipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permanently removes all the cache contents — omnipath_cache_wipe","text":"... Ignored.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_wipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permanently removes all the cache contents — omnipath_cache_wipe","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_cache_wipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permanently removes all the cache contents — omnipath_cache_wipe","text":"","code":"if (FALSE) { omnipath_cache_wipe() # the cache is completely empty: print(omnipath.env$cache) # list() list.files(omnipath_get_cachedir()) # [1] \"cache.json\" }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_get_config_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Current config file path — omnipath_get_config_path","title":"Current config file path — omnipath_get_config_path","text":"Current config file path","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_get_config_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current config file path — omnipath_get_config_path","text":"","code":"omnipath_get_config_path(user = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_get_config_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current config file path — omnipath_get_config_path","text":"user Logical: prioritize user level config even config current working directory available.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_get_config_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current config file path — omnipath_get_config_path","text":"Character: path config file.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_get_config_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current config file path — omnipath_get_config_path","text":"","code":"omnipath_get_config_path() #> [1] \"~/.config/OmnipathR/omnipathr.yml\""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_load_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the package configuration from a config file — omnipath_load_config","title":"Load the package configuration from a config file — omnipath_load_config","text":"Load package configuration config file","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_load_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the package configuration from a config file — omnipath_load_config","text":"","code":"omnipath_load_config(path = NULL, title = \"default\", user = FALSE, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_load_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the package configuration from a config file — omnipath_load_config","text":"path Path config file. title Load config title. One config file might contain multple configurations, identified title. title available first section config file used. user Force use user level config even config file exists current directory. default, local config files prioroty user level config. ... Passed yaml::yaml.load_file.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_load_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the package configuration from a config file — omnipath_load_config","text":"Invisibly returns config list.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_load_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load the package configuration from a config file — omnipath_load_config","text":"","code":"if (FALSE) { # load the config from a custom config file: omnipath_load_config(path = 'my_custom_omnipath_config.yml') }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse the current OmnipathR log file — omnipath_log","title":"Browse the current OmnipathR log file — omnipath_log","text":"Browse current OmnipathR log file","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse the current OmnipathR log file — omnipath_log","text":"","code":"omnipath_log()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse the current OmnipathR log file — omnipath_log","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browse the current OmnipathR log file — omnipath_log","text":"","code":"if (FALSE) { omnipath_log() # then you can browse the log file, and exit with `q` }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_logfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the current OmnipathR log file — omnipath_logfile","title":"Path to the current OmnipathR log file — omnipath_logfile","text":"Path current OmnipathR log file","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_logfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the current OmnipathR log file — omnipath_logfile","text":"","code":"omnipath_logfile()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_logfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to the current OmnipathR log file — omnipath_logfile","text":"Character: path current logfile, NULL     logfile available.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_logfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to the current OmnipathR log file — omnipath_logfile","text":"","code":"omnipath_logfile() #> [1] \"/home/denes/omnipathr/omnipathr-log/omnipathr-20221016-1608.log\" # [1] \"/home/denes/omnipathr/omnipathr-log/omnipathr-20210309-1642.log\""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch a message to the OmnipathR logger — omnipath_msg","title":"Dispatch a message to the OmnipathR logger — omnipath_msg","text":"package script can easily send log messages establish logging facility fantastic `logger` package. function serves purpose want inject messages logger OmnipathR. Otherwise recommend use `logger` package directly.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch a message to the OmnipathR logger — omnipath_msg","text":"","code":"omnipath_msg(level, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch a message to the OmnipathR logger — omnipath_msg","text":"level Character, numeric class loglevel. log level, character one followings: \"fatal\", \"error\", \"warn\", \"success\", \"info\", \"trace\". ... Arguments string formatting, passed sprintf str_glue.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch a message to the OmnipathR logger — omnipath_msg","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_msg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dispatch a message to the OmnipathR logger — omnipath_msg","text":"","code":"omnipath_msg(     level = 'success',     'Talking to you in the name of OmnipathR, my favourite number is %d',     round(runif(1, 1, 10)) )"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_reset_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Restores the built-in default values of all config parameters — omnipath_reset_config","title":"Restores the built-in default values of all config parameters — omnipath_reset_config","text":"Restores built-default values config parameters","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_reset_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restores the built-in default values of all config parameters — omnipath_reset_config","text":"","code":"omnipath_reset_config(save = NULL, reset_all = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_reset_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restores the built-in default values of all config parameters — omnipath_reset_config","text":"save path, restored config also saved file. TRUE, config saved current default config path (see omnipath_get_config_path). reset_all Reset defaults also options already set R options.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_reset_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restores the built-in default values of all config parameters — omnipath_reset_config","text":"config list.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_reset_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restores the built-in default values of all config parameters — omnipath_reset_config","text":"","code":"if (FALSE) { # restore the defaults and write them to the default config file: omnipath_reset_config() omnipath_save_config() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_save_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the current package configuration — omnipath_save_config","title":"Save the current package configuration — omnipath_save_config","text":"Save current package configuration","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_save_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the current package configuration — omnipath_save_config","text":"","code":"omnipath_save_config(path = NULL, title = \"default\", local = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_save_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the current package configuration — omnipath_save_config","text":"path Path config file. Directories file created exist. title Save config title. One config file might contain multiple configurations, identified title. local Save config file current directory instead user level config file. loading, config current directory priority user level config.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_save_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the current package configuration — omnipath_save_config","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_save_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the current package configuration — omnipath_save_config","text":"","code":"if (FALSE) { # after this, all downloads will default to commercial licenses # i.e. the resources that allow only academic use will be excluded: options(omnipath.license = 'commercial') omnipath_save_config() }"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_cachedir.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the cache directory — omnipath_set_cachedir","title":"Change the cache directory — omnipath_set_cachedir","text":"Change cache directory","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_cachedir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the cache directory — omnipath_set_cachedir","text":"","code":"omnipath_set_cachedir(path = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_cachedir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the cache directory — omnipath_set_cachedir","text":"path Character: path new cache directory. exist, directories created. path existing cache directory, package's cache database current session loaded database directory. NULL, cache directory set default path.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_cachedir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the cache directory — omnipath_set_cachedir","text":"Returns NULL.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_cachedir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the cache directory — omnipath_set_cachedir","text":"","code":"tmp_cache <- tempdir() omnipath_set_cachedir(tmp_cache) # restore the default cache directory: omnipath_set_cachedir()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_console_loglevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the log level for the console — omnipath_set_console_loglevel","title":"Sets the log level for the console — omnipath_set_console_loglevel","text":"Use method change session messages want printed console. loading package, can set also config file, omnipath.console_loglevel key.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_console_loglevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the log level for the console — omnipath_set_console_loglevel","text":"","code":"omnipath_set_console_loglevel(level)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_console_loglevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the log level for the console — omnipath_set_console_loglevel","text":"level Character class `loglevel`. desired log level.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_console_loglevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the log level for the console — omnipath_set_console_loglevel","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_console_loglevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the log level for the console — omnipath_set_console_loglevel","text":"","code":"omnipath_set_console_loglevel('warn') # or: omnipath_set_console_loglevel(logger::WARN)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_logfile_loglevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","title":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","text":"Use method change session messages want written logfile. loading package, can set also config file, omnipath.loglevel key.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_logfile_loglevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","text":"","code":"omnipath_set_logfile_loglevel(level)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_logfile_loglevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","text":"level Character class `loglevel`. desired log level.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_logfile_loglevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_logfile_loglevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the log level for the logfile — omnipath_set_logfile_loglevel","text":"","code":"omnipath_set_logfile_loglevel('info') # or: omnipath_set_logfile_loglevel(logger::INFO)"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_loglevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the log level for the package logger — omnipath_set_loglevel","title":"Sets the log level for the package logger — omnipath_set_loglevel","text":"Sets log level package logger","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_loglevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the log level for the package logger — omnipath_set_loglevel","text":"","code":"omnipath_set_loglevel(level, target = \"logfile\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_loglevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the log level for the package logger — omnipath_set_loglevel","text":"level Character class `loglevel`. desired log level. target Character, either 'logfile' 'console'","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_loglevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the log level for the package logger — omnipath_set_loglevel","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_set_loglevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the log level for the package logger — omnipath_set_loglevel","text":"","code":"omnipath_set_loglevel(logger::FATAL, target = 'console')"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_show_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Built in database definitions — omnipath_show_db","title":"Built in database definitions — omnipath_show_db","text":"Databases resources might costly load can used many times functions usually automatically load retrieve database manager. database lifetime unloaded automatically upon expiry.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_show_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Built in database definitions — omnipath_show_db","text":"","code":"omnipath_show_db()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_show_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Built in database definitions — omnipath_show_db","text":"data frame built database definitions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_show_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Built in database definitions — omnipath_show_db","text":"","code":"database_definitions <- omnipath_show_db() database_definitions #> # A tibble: 19 × 10 #>    name     last_used           lifet…¹ package loader loader_param latest_param #>    <chr>    <dttm>                <dbl> <chr>   <chr>  <list>       <list>       #>  1 Gene On… 2022-10-16 16:11:42     300 Omnipa… go_on… <named list> <named list> #>  2 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  3 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  4 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  5 Gene On… 2022-10-16 16:12:53     300 Omnipa… go_on… <named list> <named list> #>  6 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  7 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  8 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #>  9 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 10 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 11 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 12 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 13 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 14 Gene On… NA                      300 Omnipa… go_on… <named list> <lgl [1]>    #> 15 GO anno… NA                      300 Omnipa… go_an… <named list> <lgl [1]>    #> 16 UniProt… 2022-10-16 16:12:51     300 Omnipa… unipr… <named list> <named list> #> 17 Ensembl… 2022-10-16 16:18:10   10800 Omnipa… taxon… <NULL>       <NULL>       #> 18 All Swi… 2022-10-16 16:12:42   10800 Omnipa… all_u… <named list> <named list> #> 19 All TrE… 2022-10-16 16:12:43   10800 Omnipa… all_u… <named list> <named list> #> # … with 3 more variables: loaded <lgl>, db <list>, key <chr>, and abbreviated #> #   variable name ¹​lifetime # # A tibble: 14 x 10 #    name       last_used           lifetime package  loader    loader_p. #    <chr>      <dttm>                 <dbl> <chr>    <chr>     <list> #  1 Gene Onto. 2021-04-04 20:19:15      300 Omnipat. go_ontol. <named l. #  2 Gene Onto. NA                       300 Omnipat. go_ontol. <named l. #  3 Gene Onto. NA                       300 Omnipat. go_ontol. <named l. #  4 Gene Onto. NA                       300 Omnipat. go_ontol. <named l. #  5 Gene Onto. NA                       300 Omnipat. go_ontol. <named l. # ... (truncated) # # . with 4 more variables: latest_param <list>, loaded <lgl>, db <list>, # #   key <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_unlock_cache_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the lock file from the cache directory — omnipath_unlock_cache_db","title":"Removes the lock file from the cache directory — omnipath_unlock_cache_db","text":"lock file cache directory avoids simulatneous write read. supposed removed read write operation. might happen process crashes operation. case can manually call function.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_unlock_cache_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the lock file from the cache directory — omnipath_unlock_cache_db","text":"","code":"omnipath_unlock_cache_db()"},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_unlock_cache_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the lock file from the cache directory — omnipath_unlock_cache_db","text":"Logical: returns TRUE cache locked now     unlocked; FALSE locked.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/omnipath_unlock_cache_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes the lock file from the cache directory — omnipath_unlock_cache_db","text":"","code":"omnipath_unlock_cache_db() #> [1] FALSE"},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Only ontology IDs — ontology_ensure_id","title":"Only ontology IDs — ontology_ensure_id","text":"Converts mixture ontology IDs names IDs. element input missing chosen ontology dropped. can happen ontology subset (slim) version, also input valid ID name.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only ontology IDs — ontology_ensure_id","text":"","code":"ontology_ensure_id(terms, db_key = \"go_basic\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Only ontology IDs — ontology_ensure_id","text":"terms Character: ontology IDs term names. db_key Character: key identify ontology database. available keys see omnipath_show_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Only ontology IDs — ontology_ensure_id","text":"Character vector ontology IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Only ontology IDs — ontology_ensure_id","text":"","code":"ontology_ensure_id(c('mitochondrion inheritance', 'GO:0001754')) #> [1] \"GO:0000001\" \"GO:0001754\" # [1] \"GO:0000001\" \"GO:0001754\""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Only ontology term names — ontology_ensure_name","title":"Only ontology term names — ontology_ensure_name","text":"Converts mixture ontology IDs names names. element input missing chosen ontology dropped. can happen ontology subset (slim) version, also input valid ID name.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only ontology term names — ontology_ensure_name","text":"","code":"ontology_ensure_name(terms, db_key = \"go_basic\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Only ontology term names — ontology_ensure_name","text":"terms Character: ontology IDs term names. db_key Character: key identify ontology database. available keys see omnipath_show_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Only ontology term names — ontology_ensure_name","text":"Character vector ontology term names.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_ensure_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Only ontology term names — ontology_ensure_name","text":"","code":"ontology_ensure_name(c('reproduction', 'GO:0001754', 'foo bar')) #> [1] \"eye photoreceptor cell differentiation\" #> [2] \"reproduction\"                           # [1] \"eye photoreceptor cell differentiation\" \"reproduction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_name_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate between ontology IDs and names — ontology_name_id","title":"Translate between ontology IDs and names — ontology_name_id","text":"Makes sure output contains valid IDs term names. input can mixture IDs names. order input preserved output.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_name_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate between ontology IDs and names — ontology_name_id","text":"","code":"ontology_name_id(terms, ids = TRUE, db_key = \"go_basic\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_name_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate between ontology IDs and names — ontology_name_id","text":"terms Character: ontology IDs term names. ids Logical: output contain IDs term names. db_key Character: key identify ontology database. available keys see omnipath_show_db.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_name_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate between ontology IDs and names — ontology_name_id","text":"Character vector ontology IDs term names.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ontology_name_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate between ontology IDs and names — ontology_name_id","text":"","code":"ontology_name_id(c('mitochondrion inheritance', 'reproduction')) #> [1] \"GO:0000001\" \"GO:0000003\" # [1] \"GO:0000001\" \"GO:0000003\" ontology_name_id(c('GO:0000001', 'reproduction'), ids = FALSE) #> [1] \"mitochondrion inheritance\" \"reproduction\"              # [1] \"mitochondrion inheritance\" \"reproduction\""},{"path":"https://saezlab.github.io/OmnipathR/reference/pathwaycommons_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from PathwayCommons — pathwaycommons_download","title":"Interactions from PathwayCommons — pathwaycommons_download","text":"PathwayCommons (http://www.pathwaycommons.org/) provides molecular interactions number databases, either BioPAX SIF (simple interaction format). function retrieves interactions SIF format. data limited interacting pair type interaction.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pathwaycommons_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from PathwayCommons — pathwaycommons_download","text":"","code":"pathwaycommons_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/pathwaycommons_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from PathwayCommons — pathwaycommons_download","text":"data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pathwaycommons_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from PathwayCommons — pathwaycommons_download","text":"","code":"pc_interactions <- pathwaycommons_download()  pc_interactions #> # A tibble: 1,884,849 × 3 #>    from  type                        to     #>    <chr> <chr>                       <chr>  #>  1 A1BG  controls-expression-of      A2M    #>  2 A1BG  interacts-with              ABCC6  #>  3 A1BG  interacts-with              ACE2   #>  4 A1BG  interacts-with              ADAM10 #>  5 A1BG  interacts-with              ADAM17 #>  6 A1BG  interacts-with              ADAM9  #>  7 A1BG  interacts-with              AGO1   #>  8 A1BG  controls-phosphorylation-of AKT1   #>  9 A1BG  controls-state-change-of    AKT1   #> 10 A1BG  interacts-with              ANXA7  #> # … with 1,884,839 more rows # # A tibble: 1,884,849 x 3 #    from  type                        to #    <chr> <chr>                       <chr> #  1 A1BG  controls-expression-of      A2M #  2 A1BG  interacts-with              ABCC6 #  3 A1BG  interacts-with              ACE2 #  4 A1BG  interacts-with              ADAM10 #  5 A1BG  interacts-with              ADAM17 # # . with 1,884,839 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/pivot_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts annotation tables to a wide format — pivot_annotations","title":"Converts annotation tables to a wide format — pivot_annotations","text":"Use method reconstitute annotation tables format original resources. `wide=TRUE` option import_omnipath_annotations applies function downloaded data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pivot_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts annotation tables to a wide format — pivot_annotations","text":"","code":"pivot_annotations(annotations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/pivot_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts annotation tables to a wide format — pivot_annotations","text":"annotations data frame annotations downloaded OmniPath web service import_omnipath_annotations.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pivot_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts annotation tables to a wide format — pivot_annotations","text":"wide format data frame (tibble) provided data contains annotations one resource, otherwise list wide format tibbles.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/pivot_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts annotation tables to a wide format — pivot_annotations","text":"","code":"# single resource: the result is a data frame disgenet <- import_omnipath_annotations(resources = 'DisGeNet') disgenet <- pivot_annotations(disgenet) disgenet #> # A tibble: 126,906 × 11 #>    uniprot genesymbol entity_t…¹ disease type  score   dsi   dpi nof_p…² nof_s…³ #>    <chr>   <chr>      <chr>      <chr>   <chr> <dbl> <dbl> <dbl>   <dbl>   <dbl> #>  1 P04217  A1BG       protein    Schizo… dise…  0.3  0.7   0.538       1       0 #>  2 P04217  A1BG       protein    Hepato… phen…  0.3  0.7   0.538       1       0 #>  3 P01023  A2M        protein    Acute … dise…  0.3  0.529 0.769       1       0 #>  4 P01023  A2M        protein    Alzhei… dise…  0.3  0.529 0.769       3       0 #>  5 P01023  A2M        protein    Presen… dise…  0.3  0.529 0.769       3       0 #>  6 P01023  A2M        protein    Hepato… dise…  0.5  0.529 0.769       1       0 #>  7 P01023  A2M        protein    Alzhei… dise…  0.37 0.529 0.769       3       0 #>  8 P01023  A2M        protein    Famili… dise…  0.31 0.529 0.769       3       0 #>  9 P01023  A2M        protein    Acute … dise…  0.3  0.529 0.769       3       0 #> 10 P01023  A2M        protein    Coloni… group  0.3  0.529 0.769       1       0 #> # … with 126,896 more rows, 1 more variable: source <chr>, and abbreviated #> #   variable names ¹​entity_type, ²​nof_pmids, ³​nof_snps # # A tibble: 126,588 × 11 #    uniprot genesymbol entity_type disease      type  score   dsi   dpi #    <chr>   <chr>      <chr>       <chr>        <chr> <dbl> <dbl> <dbl> #  1 P04217  A1BG       protein     Schizophren. dise.  0.3  0.7   0.538 #  2 P04217  A1BG       protein     Hepatomegaly phen.  0.3  0.7   0.538 #  3 P01023  A2M        protein     Fibrosis, L. dise.  0.3  0.529 0.769 #  4 P01023  A2M        protein     Acute kidne. dise.  0.3  0.529 0.769 #  5 P01023  A2M        protein     Mental Depr. dise.  0.3  0.529 0.769 # # . with 126,583 more rows, and 3 more variables: nof_pmids <dbl>, # #   nof_snps <dbl>, source <chr>  # multiple resources: the result is a list annotations <- import_omnipath_annotations(     resources = c('DisGeNet', 'SignaLink_function', 'DGIdb', 'kinase.com') ) annotations <- pivot_annotations(annotations) names(annotations) #> [1] \"DGIdb\"              \"DisGeNet\"           \"SignaLink_function\" #> [4] \"kinase.com\"         # [1] \"DGIdb\"              \"DisGeNet\"           \"kinase.com\" # [4] \"SignaLink_function\" annotations$kinase.com #> # A tibble: 864 × 6 #>    uniprot genesymbol entity_type group family subfamily #>    <chr>   <chr>      <chr>       <chr> <chr>  <chr>     #>  1 P31749  AKT1       protein     AGC   Akt    NA        #>  2 P31751  AKT2       protein     AGC   Akt    NA        #>  3 Q9Y243  AKT3       protein     AGC   Akt    NA        #>  4 O14578  CIT        protein     AGC   DMPK   CRIK      #>  5 Q09013  DMPK       protein     AGC   DMPK   GEK       #>  6 Q5VT25  CDC42BPA   protein     AGC   DMPK   GEK       #>  7 Q9Y5S2  CDC42BPB   protein     AGC   DMPK   GEK       #>  8 Q6DT37  CDC42BPG   protein     AGC   DMPK   GEK       #>  9 Q13464  ROCK1      protein     AGC   DMPK   ROCK      #> 10 O75116  ROCK2      protein     AGC   DMPK   ROCK      #> # … with 854 more rows # # A tibble: 825 x 6 #    uniprot genesymbol entity_type group family subfamily #    <chr>   <chr>      <chr>       <chr> <chr>  <chr> #  1 P31749  AKT1       protein     AGC   Akt    NA #  2 P31751  AKT2       protein     AGC   Akt    NA #  3 Q9Y243  AKT3       protein     AGC   Akt    NA #  4 O14578  CIT        protein     AGC   DMPK   CRIK #  5 Q09013  DMPK       protein     AGC   DMPK   GEK # # . with 815 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from PrePPI — preppi_download","title":"Interactions from PrePPI — preppi_download","text":"Retrieves predicted protein-protein interactions PrePPI database (http://honig.c2b2.columbia.edu/preppi). interactions table supposed correct > 0.5 probability.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from PrePPI — preppi_download","text":"","code":"preppi_download(...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions from PrePPI — preppi_download","text":"... Minimum values scores. available scores : str, protpep, str_max, red, ort, phy, coexp, go, total, exp final. Furthermore, operator can passed, either .op = '&' .op = '|', used combined filtering multiple scores.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from PrePPI — preppi_download","text":"data frame (tibble) interactions scores, databases literature references.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactions from PrePPI — preppi_download","text":"PrePPI combination many prediction methods, resulting score. explanation scores see https://honiglab.c2b2.columbia.edu/hfpd/help/Manual.html. minimum, median maximum values scores:","code":"| Score   | Minimum | Median   | Maximum            | | ------- | ------- | -------- | ------------------ | | str     |       0 |     5.5  |           6,495    | | protpep |       0 |     3.53 |          38,138    | | str_max |       0 |    17.9  |          38,138    | | red     |       0 |     1.25 |              24.4  | | ort     |       0 |     0    |           5,000    | | phy     |       0 |     2.42 |               2.42 | | coexp   |       0 |     2.77 |              45.3  | | go      |       0 |     5.86 |             181    | | total   |       0 | 1,292    | 106,197,000,000    | | exp     |       1 |   958    |           4,626    | | final   |     600 | 1,778    |            4.91e14 |"},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from PrePPI — preppi_download","text":"","code":"preppi <- preppi_download() preppi #> # A tibble: 1,545,710 × 15 #>    prot1  prot2  str_s…¹ protp…² str_m…³ red_s…⁴ ort_s…⁵ phy_s…⁶ coexp…⁷ go_sc…⁸ #>    <chr>  <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Q13131 P14625   18.6     6.45   18.6    4.25    0.615    2.42    9.47   10.8  #>  2 P06400 Q96N96    1.83   14.3    14.3    4.25    0        2.42    2.11   10.8  #>  3 Q7Z6V5 Q8NCE0    4.57    0       4.57   0       0        1.60    9.47   24.1  #>  4 P37058 P15428  485.      0     485.     1.77    0.615    2.42    1.18    2.07 #>  5 O00468 Q9NR23   34.0     0      34.0    0.512   0        2.42    2.77    5.86 #>  6 Q9Y2X7 Q9NPJ6    0       2.59    2.59   1.01    0        2.42    1.58    0    #>  7 Q8IY84 Q9Y3S1  254.      7.35  254.     0.913   0.615    2.42    2.11    2.07 #>  8 Q13315 Q96T68    1.21    9.34    9.34  19.3     0.615    2.42    9.47    0.89 #>  9 Q6GYQ0 Q92529    2.67   20.6    20.6    0       0        2.42    3.90    5.86 #> 10 P08575 O14545    0       0       0      0       0        2.42    3.90  105.   #> # … with 1,545,700 more rows, 5 more variables: total_score <dbl>, dbs <chr>, #> #   pubs <chr>, exp_score <dbl>, final_score <dbl>, and abbreviated variable #> #   names ¹​str_score, ²​protpep_score, ³​str_max_score, ⁴​red_score, ⁵​ort_score, #> #   ⁶​phy_score, ⁷​coexp_score, ⁸​go_score # # A tibble: 1,545,710 x 15 #    prot1 prot2 str_score protpep_score str_max_score red_score ort_score #    <chr> <chr>     <dbl>         <dbl>         <dbl>     <dbl>     <dbl> #  1 Q131. P146.     18.6           6.45         18.6      4.25      0.615 #  2 P064. Q96N.      1.83         14.3          14.3      4.25      0 #  3 Q7Z6. Q8NC.      4.57          0             4.57     0         0 #  4 P370. P154.    485.            0           485.       1.77      0.615 #  5 O004. Q9NR.     34.0           0            34.0      0.512     0 # # . with 1,545,700 more rows, and 8 more variables: phy_score <dbl>, # #   coexp_score <dbl>, go_score <dbl>, total_score <dbl>, dbs <chr>, # #   pubs <chr>, exp_score <dbl>, final_score <dbl>"},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter PrePPI interactions by scores — preppi_filter","title":"Filter PrePPI interactions by scores — preppi_filter","text":"Filter PrePPI interactions scores","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter PrePPI interactions by scores — preppi_filter","text":"","code":"preppi_filter(data, ..., .op = \"&\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter PrePPI interactions by scores — preppi_filter","text":"data data frame PrePPI interactions provided preppi_download. ... Minimum values scores. available scores : str, protpep, str_max, red, ort, phy, coexp, go, total, exp final. See scores preppi_download. .op operator combine scores : either '&' '|'. former, records scores threshold kept; latter, records least one score threshold kept.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter PrePPI interactions by scores — preppi_filter","text":"input data frame (tibble) filtered score thresholds.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/preppi_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter PrePPI interactions by scores — preppi_filter","text":"","code":"preppi <- preppi_download() preppi_filtered <- preppi_filter(preppi, red = 10, str = 4.5, ort = 1) nrow(preppi_filtered) #> [1] 8443 # [1] 8443"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_es.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","title":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","text":"motifs can copy-pasted BMA canvas.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","text":"","code":"print_bma_motif_es(edge_seq, G, granularity = 2)"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_es.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","text":"edge_seq igraph edge sequence. G igraph graph object. granularity Numeric: granularity value.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_es.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_es.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints BMA motifs to the screen from a sequence of edges — print_bma_motif_es","text":"","code":"interactions <- import_omnipath_interactions(resources = 'ARN') graph <- interaction_graph(interactions) print_bma_motif_es(igraph::E(graph)[1], graph) #> {\"Model\": {\"Name\": \"Omnipath motif\", \"Variables\":[{\"Name\":\"ULK1\", \"Id\":1, \"RangeFrom\":0, \"RangeTo\":2, \"Formula\":\"\"}, {\"Name\":\"ATG13\", \"Id\":2, \"RangeFrom\":0, \"RangeTo\":2, \"Formula\":\"\"}], \"Relationships\":[{\"Id\":3, \"FromVariable\":1, \"ToVariable\":2, \"Type\":\"Activator\"}]}, \"Layout\":{\"Variables\":[{\"Id\":1, \"Name\":\"ULK1\", \"Type\":\"Constant\", \"ContainerId\":0, \"PositionX\":125.000000, \"PositionY\":140.000000, \"CellX\":0, \"CellY\":0, \"Angle\":0, \"Description\":\"\"}, {\"Id\":2, \"Name\":\"ATG13\", \"Type\":\"Constant\", \"ContainerId\":0, \"PositionX\":211.602540, \"PositionY\":90.000000, \"CellX\":0, \"CellY\":0, \"Angle\":0, \"Description\":\"Activator-PMID:ARN:19211835, ARN:19225151, ARN:19287211, ARN:20562859, AlzPathway:15197469, BioGRID:27203176, InnateDB:19211835, InnateDB:19225151, InnateDB:19287211, InnateDB:20562859, IntAct:20562859, IntAct:25686248, IntAct:33450483, Lit-BM-17:19597335, Lit-BM-17:20562859, Lit-BM-17:21460630, Lit-BM-17:23392225, Lit-BM-17:23524951, Lit-BM-17:25126726, Lit-BM-17:25686248, Lit-BM-17:26018823, PhosphoSite:26138443, PhosphoSite:26687599, PhosphoSite:27387056, PhosphoSite:27390127, PhosphoSite:27932573, SIGNOR:19211835, SPIKE:18936157.\"}], \"Containers\":[]}} # {\"Model\": { #     \"Name\": \"Omnipath motif\", #     \"Variables\":[{ #         \"Name\":\"ULK1\", #         \"Id\":1, #         \"RangeFrom\":0, #         \"RangeTo\":2, #         \"Formula\":\"\" #     }, #     { #         \"Name\":\"ATG13\", #         ... #     }], # ... (truncated) # }}"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","title":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","text":"motifs can copy-pasted BMA canvas.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","text":"","code":"print_bma_motif_vs(node_seq, G)"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_vs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","text":"node_seq igraph node sequence. G igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_vs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_bma_motif_vs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints BMA motifs to the screen from a sequence of nodes — print_bma_motif_vs","text":"","code":"interactions <- import_omnipath_interactions(resources = 'ARN') graph <- interaction_graph(interactions) print_bma_motif_vs(     igraph::all_shortest_paths(         graph,         from = 'ULK1',         to = 'ATG13'     )$res,     graph ) #> pathway 1: ULK1 #> {\"Model\": {\"Name\": \"Omnipath motif\", \"Variables\":[{\"Name\":\"ULK1\", \"Id\":1, \"RangeFrom\":0, \"RangeTo\":2, \"Formula\":\"\"}, {\"Name\":\"ATG13\", \"Id\":2, \"RangeFrom\":0, \"RangeTo\":2, \"Formula\":\"\"}], \"Relationships\":[{\"Id\":3, \"FromVariable\":1, \"ToVariable\":2, \"Type\":\"Activator\"}]}, \"Layout\":{\"Variables\":[{\"Id\":1, \"Name\":\"ULK1\", \"Type\":\"Constant\", \"ContainerId\":0, \"PositionX\":125.000000, \"PositionY\":140.000000, \"CellX\":0, \"CellY\":0, \"Angle\":0, \"Description\":\"\"}, {\"Id\":2, \"Name\":\"ATG13\", \"Type\":\"Constant\", \"ContainerId\":0, \"PositionX\":211.602540, \"PositionY\":90.000000, \"CellX\":0, \"CellY\":0, \"Angle\":0, \"Description\":\"Activator-PMID:ARN:19211835, ARN:19225151, ARN:19287211, ARN:20562859, AlzPathway:15197469, BioGRID:27203176, InnateDB:19211835, InnateDB:19225151, InnateDB:19287211, InnateDB:20562859, IntAct:20562859, IntAct:25686248, IntAct:33450483, Lit-BM-17:19597335, Lit-BM-17:20562859, Lit-BM-17:21460630, Lit-BM-17:23392225, Lit-BM-17:23524951, Lit-BM-17:25126726, Lit-BM-17:25686248, Lit-BM-17:26018823, PhosphoSite:26138443, PhosphoSite:26687599, PhosphoSite:27387056, PhosphoSite:27390127, PhosphoSite:27932573, SIGNOR:19211835, SPIKE:18936157.\"}], \"Containers\":[]}}"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print OmniPath interactions — print_interactions","title":"Print OmniPath interactions — print_interactions","text":"Prints interactions enzyme-substrate relationships nice format.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print OmniPath interactions — print_interactions","text":"","code":"print_interactions(interDF, writeRefs = FALSE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print OmniPath interactions — print_interactions","text":"interDF data.frame interactions generated following functions: import_omnipath_enzsub import_omnipath_interactions import_pathwayextra_interactions import_kinaseextra_interactions import_ligrecextra_interactions import_post_translational_interactions import_dorothea_interactions import_tf_target_interactions import_transcriptional_interactions import_mirnatarget_interactions import_all_interactions writeRefs [FALSE] writes also PubMed IDs available","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print OmniPath interactions — print_interactions","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print OmniPath interactions — print_interactions","text":"","code":"enzsub <- import_omnipath_enzsub() print_interactions(head(enzsub)) #> Warning: Unknown or uninitialised column: `is_stimulation`. #> # A tibble: 6 × 5 #>   enzyme       interaction substrate           modification    n_resources #>   <chr>        <chr>       <chr>               <chr>                 <int> #> 1 SRC (P12931) ====>       TERT_Y707 (O14746)  phosphorylation           8 #> 2 FYN (P06241) ====>       FYB1_Y595 (O15117)  phosphorylation           7 #> 3 LCK (P06239) ====>       SOCS3_Y221 (O14543) phosphorylation           6 #> 4 FYN (P06241) ====>       FYB1_Y651 (O15117)  phosphorylation           6 #> 5 FYN (P06241) ====>       FYB1_Y697 (O15117)  phosphorylation           3 #> 6 LCK (P06239) ====>       SOCS3_Y204 (O14543) phosphorylation           6 print_interactions(tail(enzsub), writeRefs = TRUE) #> Warning: Unknown or uninitialised column: `is_stimulation`. #> # A tibble: 6 × 7 #>   enzyme           interaction substrate         modif…¹ n_res…² n_ref…³ refer…⁴ #>   <chr>            <chr>       <chr>             <chr>     <int>   <dbl> <chr>   #> 1 TYRO3 (Q06418)   ====>       PLCG1_Y771 (P191… phosph…       1       8 KEA:12… #> 2 TYK2 (P29597)    ====>       STAT5B_Y699 (P51… phosph…       1       3 KEA:10… #> 3 TYK2 (P29597)    ====>       IL13RA1_Y402 (P7… phosph…       1       1 KEA:10… #> 4 WNK1 (Q9H4A3)    ====>       OSR1_T185 (Q8TAX… phosph…       1       1 KEA:18… #> 5 WNK1 (Q9H4A3)    ====>       WNK4_S335 (Q96J9… phosph…       1       1 KEA:15… #> 6 MAP3K20 (Q9NYL2) ====>       CDS1_T68 (Q92903) phosph…       1       1 KEA:10… #> # … with abbreviated variable names ¹​modification, ²​n_resources, ³​n_references, #> #   ⁴​references print_interactions(     dplyr::filter(         enzsub,         enzyme_genesymbol == 'MAP2K1',         substrate_genesymbol == 'MAPK3'     ) ) #> Warning: Unknown or uninitialised column: `is_stimulation`. #> # A tibble: 6 × 5 #>   enzyme          interaction substrate           modification    n_resources #>   <chr>           <chr>       <chr>               <chr>                 <int> #> 1 MAP2K1 (Q02750) ====>       MAPK3_Y204 (P27361) phosphorylation           8 #> 2 MAP2K1 (Q02750) ====>       MAPK3_T202 (P27361) phosphorylation           8 #> 3 MAP2K1 (Q02750) ====>       MAPK3_T207 (P27361) phosphorylation           2 #> 4 MAP2K1 (Q02750) ====>       MAPK3_Y210 (P27361) phosphorylation           2 #> 5 MAP2K1 (Q02750) ====>       MAPK3_T80 (P27361)  phosphorylation           1 #> 6 MAP2K1 (Q02750) ====>       MAPK3_Y222 (P27361) phosphorylation           1  signor <- import_omnipath_interactions(resources = 'SIGNOR') print_interactions(head(signor)) #> # A tibble: 6 × 5 #>   source          interaction target          n_resources n_references #>   <chr>           <chr>       <chr>                 <int>        <int> #> 1 PRKG1 (Q13976)  ==( - )==>  TRPC3 (Q13507)            8            2 #> 2 PTPN1 (P18031)  ==( - )==>  TRPV6 (Q9H1D0)            6            2 #> 3 PRKACA (P17612) ==( - )==>  MCOLN1 (Q9GZU1)           6            1 #> 4 PRKG1 (Q13976)  ==( + )==>  TRPC7 (Q9HCX4)            3            1 #> 5 OS9 (Q13438)    ==(+/-)==>  TRPV4 (Q9HBA0)            3            1 #> 6 RACK1 (P63244)  ==( - )==>  TRPM6 (Q9BX84)            2            1 #            source interaction            target n_resources # 6 MAPK14 (Q16539)  ==( + )==> MAPKAPK2 (P49137)          23 # 4  TRPM7 (Q96QT4)  ==( + )==>    ANXA1 (P04083)          10 # 1  PRKG1 (Q13976)  ==( - )==>    TRPC3 (Q13507)           8 # 2  PTPN1 (P18031)  ==( - )==>    TRPV6 (Q9H1D0)           6 # 5 PRKACA (P17612)  ==( - )==>   MCOLN1 (Q9GZU1)           6 # 3  RACK1 (P63244)  ==( - )==>    TRPM6 (Q9BX84)           2"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_es.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints network paths in an edge sequence — print_path_es","title":"Prints network paths in an edge sequence — print_path_es","text":"Pretty prints interactions path.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints network paths in an edge sequence — print_path_es","text":"","code":"print_path_es(edgeSeq, G)"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_es.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints network paths in an edge sequence — print_path_es","text":"edgeSeq edge sequence G igraph object (ptms interaction dataset)","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_es.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints network paths in an edge sequence — print_path_es","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_es.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints network paths in an edge sequence — print_path_es","text":"","code":"interactions <- import_omnipath_interactions(resources = c('SignaLink3')) OPI_g <- interaction_graph(interactions = interactions) print_path_es(     suppressWarnings(igraph::shortest_paths(         OPI_g,         from = 'TYRO3',         to = 'STAT3',         output = 'epath'     ))$epath[[1]],     OPI_g ) #> Empty path #> NULL"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print networks paths given by node sequence — print_path_vs","title":"Print networks paths given by node sequence — print_path_vs","text":"Prints interactions path nice format.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print networks paths given by node sequence — print_path_vs","text":"","code":"print_path_vs(nodeSeq, G)"},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_vs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print networks paths given by node sequence — print_path_vs","text":"nodeSeq node sequence G igraph object (ptms interactions)","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_vs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print networks paths given by node sequence — print_path_vs","text":"Returns `NULL`.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/print_path_vs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print networks paths given by node sequence — print_path_vs","text":"","code":"interactions <- import_omnipath_interactions(resources=c('SignaLink3')) OPI_g <- interaction_graph(interactions = interactions) print_path_vs(     igraph::all_shortest_paths(         OPI_g,         from = 'TYRO3',         to = 'STAT3'     )$vpath,     OPI_g ) #> Empty path enzsub <- import_omnipath_enzsub(resources=c('PhosphoSite', 'SIGNOR')) enzsub_g <- enzsub_graph(enzsub) print_path_vs(     igraph::all_shortest_paths(         enzsub_g,         from = 'SRC',         to = 'STAT1'     )$res,     enzsub_g ) #> Pathway 1: SRC -> STAT1"},{"path":"https://saezlab.github.io/OmnipathR/reference/pubmed_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open one or more PubMed articles — pubmed_open","title":"Open one or more PubMed articles — pubmed_open","text":"Open one PubMed articles","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pubmed_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open one or more PubMed articles — pubmed_open","text":"","code":"pubmed_open(pmids, browser = NULL, sep = \";\", max_pages = 25L)"},{"path":"https://saezlab.github.io/OmnipathR/reference/pubmed_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open one or more PubMed articles — pubmed_open","text":"pmids Character numberic vector one PubMed IDs. browser Character: name web browser executable. `NULL`, default web browser used. sep Character: split PubMed IDs separator. max_pages Numeric: largest number pages open. prevent opening hundreds thousands pages .","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pubmed_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open one or more PubMed articles — pubmed_open","text":"Returns `NULL`.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/pubmed_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open one or more PubMed articles — pubmed_open","text":"","code":"interactions <- import_omnipath_interactions() pubmed_open(interactions$references[1])"},{"path":"https://saezlab.github.io/OmnipathR/reference/ramilowski_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads ligand-receptor interactions from Ramilowski et al. 2015 — ramilowski_download","title":"Downloads ligand-receptor interactions from Ramilowski et al. 2015 — ramilowski_download","text":"Curated ligand-receptor pairs Supplementary Table 2 article \"draft network ligand-receptor mediated multicellular signaling human\" (https://www.nature.com/articles/ncomms8866).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ramilowski_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads ligand-receptor interactions from Ramilowski et al. 2015 — ramilowski_download","text":"","code":"ramilowski_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/ramilowski_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads ligand-receptor interactions from Ramilowski et al. 2015 — ramilowski_download","text":"data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/ramilowski_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads ligand-receptor interactions from Ramilowski et al. 2015 — ramilowski_download","text":"","code":"rami_interactions <- ramilowski_download() rami_interactions #> # A tibble: 2,557 × 16 #>    Pair.Name    Ligan…¹ Ligan…² Recep…³ Recep…⁴ DLRP  HPMR  IUPHAR HPRD  STRIN…⁵ #>    <chr>        <chr>   <chr>   <chr>   <chr>   <chr> <chr> <chr>  <chr> <chr>   #>  1 A2M_LRP1     A2M     alpha-… LRP1    low de… NA    HPMR  NA     HPRD  STRING… #>  2 AANAT_MTNR1A AANAT   aralky… MTNR1A  melato… NA    HPMR  NA     NA    NA      #>  3 AANAT_MTNR1B AANAT   aralky… MTNR1B  melato… NA    HPMR  NA     NA    NA      #>  4 ACE_AGTR2    ACE     angiot… AGTR2   angiot… NA    NA    NA     HPRD  NA      #>  5 ACE_BDKRB2   ACE     angiot… BDKRB2  bradyk… NA    NA    NA     HPRD  NA      #>  6 ADAM10_AXL   ADAM10  ADAM m… AXL     AXL re… NA    NA    NA     HPRD  NA      #>  7 ADAM10_EPHA3 ADAM10  ADAM m… EPHA3   EPH re… NA    NA    NA     HPRD  NA      #>  8 ADAM12_ITGA9 ADAM12  ADAM m… ITGA9   integr… NA    HPMR  NA     NA    STRING… #>  9 ADAM12_ITGB1 ADAM12  ADAM m… ITGB1   integr… NA    HPMR  NA     NA    STRING… #> 10 ADAM12_SDC4  ADAM12  ADAM m… SDC4    syndec… NA    HPMR  NA     NA    STRING… #> # … with 2,547 more rows, 6 more variables: STRING.experiment <chr>, #> #   HPMR.Ligand <chr>, HPMR.Receptor <chr>, PMID.Manual <chr>, #> #   Pair.Source <chr>, Pair.Evidence <chr>, and abbreviated variable names #> #   ¹​Ligand.ApprovedSymbol, ²​Ligand.Name, ³​Receptor.ApprovedSymbol, #> #   ⁴​Receptor.Name, ⁵​STRING.binding # # A tibble: 2,557 x 16 #    Pair.Name Ligand.Approved. Ligand.Name Receptor.Approv. #    <chr>     <chr>            <chr>       <chr> #  1 A2M_LRP1  A2M              alpha-2-ma. LRP1 #  2 AANAT_MT. AANAT            aralkylami. MTNR1A #  3 AANAT_MT. AANAT            aralkylami. MTNR1B #  4 ACE_AGTR2 ACE              angiotensi. AGTR2 #  5 ACE_BDKR. ACE              angiotensi. BDKRB2 # # . with 2,547 more rows, and 12 more variables: Receptor.Name <chr>, # #   DLRP <chr>, HPMR <chr>, IUPHAR <chr>, HPRD <chr>, # #   STRING.binding <chr>, STRING.experiment <chr>, HPMR.Ligand <chr>, # #   HPMR.Receptor <chr>, PMID.Manual <chr>, Pair.Source <chr>, # #   Pair.Evidence <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcription factor effects from RegNetwork — regnetwork_directions","title":"Transcription factor effects from RegNetwork — regnetwork_directions","text":"Transcription factor effects RegNetwork","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcription factor effects from RegNetwork — regnetwork_directions","text":"","code":"regnetwork_directions(organism = \"human\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcription factor effects from RegNetwork — regnetwork_directions","text":"organism Character: either human mouse.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_directions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcription factor effects from RegNetwork — regnetwork_directions","text":"data frame (tibble) TF-target interactions effect signs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_directions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transcription factor effects from RegNetwork — regnetwork_directions","text":"","code":"regn_dir <- regnetwork_directions() regn_dir #> # A tibble: 3,954 × 5 #>    source_genesymbol source_entrez target_genesymbol target_entrez effect #>    <chr>             <chr>         <chr>             <chr>          <dbl> #>  1 AHR               196           CDKN1B            1027               1 #>  2 APLNR             187           PIK3C3            5289               1 #>  3 APLNR             187           PIK3R4            30849              1 #>  4 AR                367           KLK3              354                1 #>  5 ARNT              405           ALDOA             226                1 #>  6 ARNT              405           ANGPT1            284                1 #>  7 ARNT              405           ANGPT2            285                1 #>  8 ARNT              405           ANGPT4            51378              1 #>  9 ARNT              405           BCL2              596                1 #> 10 ARNT              405           CDKN1A            1026               1 #> # … with 3,944 more rows # # A tibble: 3,954 x 5 #    source_genesymb. source_entrez target_genesymb. target_entrez #    <chr>            <chr>         <chr>            <chr> #  1 AHR              196           CDKN1B           1027 #  2 APLNR            187           PIK3C3           5289 #  3 APLNR            187           PIK3R4           30849 #  4 AR               367           KLK3             354 #  5 ARNT             405           ALDOA            226 # # . with 3,944 more rows, and 1 more variable: effect <dbl>"},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions from RegNetwork — regnetwork_download","title":"Interactions from RegNetwork — regnetwork_download","text":"Downloads transcriptional post-transcriptional regulatory interactions RegNetwork database (http://www.regnetworkweb.org/). information effect signs (stimulation inhibition), provided regnetwork_directions included result.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions from RegNetwork — regnetwork_download","text":"","code":"regnetwork_download(organism = \"human\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions from RegNetwork — regnetwork_download","text":"organism Character: either human mouse.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions from RegNetwork — regnetwork_download","text":"Data frame interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/regnetwork_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions from RegNetwork — regnetwork_download","text":"","code":"regn_interactions <- regnetwork_download() regn_interactions #> # A tibble: 372,778 × 7 #>    source_genesymbol source_entrez target_genes…¹ targe…² effect sourc…³ targe…⁴ #>    <chr>             <chr>         <chr>          <chr>    <dbl> <chr>   <chr>   #>  1 USF1              7391          S100A6         6277        NA protein protein #>  2 USF1              7391          DUSP1          1843        NA protein protein #>  3 USF1              7391          C4A            720         NA protein protein #>  4 USF1              7391          ABCA1          19          NA protein protein #>  5 TP53              7157          TP73           7161         1 protein protein #>  6 TP53              7157          SIAH1          6477         1 protein protein #>  7 TP53              7157          PMAIP1         5366         1 protein protein #>  8 TP53              7157          EI24           9538         1 protein protein #>  9 TP53              7157          CDKN1A         1026         1 protein protein #> 10 TP53              7157          CCNG1          900          1 protein protein #> # … with 372,768 more rows, and abbreviated variable names ¹​target_genesymbol, #> #   ²​target_entrez, ³​source_type, ⁴​target_type # # A tibble: 372,778 x 7 #    source_genesymb. source_entrez target_genesymb. target_entrez #    <chr>            <chr>         <chr>            <chr> #  1 USF1             7391          S100A6           6277 #  2 USF1             7391          DUSP1            1843 #  3 USF1             7391          C4A              720 #  4 USF1             7391          ABCA1            19 #  5 TP53             7157          TP73             7161 # # . with 372,768 more rows, and 3 more variables: effect <dbl>, # #   source_type <chr>, target_type <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_list_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table from a nested list of ontology relations — relations_list_to_table","title":"Table from a nested list of ontology relations — relations_list_to_table","text":"Converting nested list table costly operation, takes seconds. Best , pass tables = TRUE obo_parser, convert data frame list, also need list format.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_list_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table from a nested list of ontology relations — relations_list_to_table","text":"","code":"relations_list_to_table(relations, direction = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_list_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table from a nested list of ontology relations — relations_list_to_table","text":"relations nested list ontology relations (\"relations\" element list returned obo_parser case argument `tables` FALSE). direction Override direction (.e. child -> parents parent -> children). nested lists produced functions current package add attribute \"direction\" thus need pass value. attribute argument missing, column named simply \"side2\" clear whether relations point \"term\" \"side2\" way around. direction character vector length 2 values \"parents\" \"children\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_list_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table from a nested list of ontology relations — relations_list_to_table","text":"relations converted data frame (tibble).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_list_to_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table from a nested list of ontology relations — relations_list_to_table","text":"","code":"goslim_url <-     \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\" path <- tempfile() httr::GET(goslim_url, httr::write_disk(path, overwrite = TRUE)) #> Response [http://current.geneontology.org/ontology/subsets/goslim_generic.obo] #>   Date: 2022-10-15 18:56 #>   Status: 200 #>   Content-Type: text/obo #>   Size: 114 kB #> <ON DISK>  /tmp/Rtmpvmm0Vg/file2269a03741dd3a obo <- obo_parser(path, tables = FALSE) unlink(path) rel_tbl <- relations_list_to_table(obo$relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph from a table of ontology relations — relations_table_to_graph","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"Graph table ontology relations","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"","code":"relations_table_to_graph(relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"relations data frame ontology relations (\"relations\" element list returned obo_parser case argument `tables` TRUE).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"relations converted igraph graph object.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"default relations point child parents, edges graph direction. Use swap_relations data frame reverse direction.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph from a table of ontology relations — relations_table_to_graph","text":"","code":"go <- get_db('go_basic') go_graph <- relations_table_to_graph(go$relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Nested list from a table of ontology relations — relations_table_to_list","title":"Nested list from a table of ontology relations — relations_table_to_list","text":"Nested list table ontology relations","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nested list from a table of ontology relations — relations_table_to_list","text":"","code":"relations_table_to_list(relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nested list from a table of ontology relations — relations_table_to_list","text":"relations data frame ontology relations (\"relations\" element list returned obo_parser case argument `tables` TRUE).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nested list from a table of ontology relations — relations_table_to_list","text":"relations converted nested list.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/relations_table_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nested list from a table of ontology relations — relations_table_to_list","text":"","code":"goslim_url <-     \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\" path <- tempfile() httr::GET(goslim_url, httr::write_disk(path, overwrite = TRUE)) #> Response [http://current.geneontology.org/ontology/subsets/goslim_generic.obo] #>   Date: 2022-10-15 18:56 #>   Status: 200 #>   Content-Type: text/obo #>   Size: 114 kB #> <ON DISK>  /tmp/Rtmpvmm0Vg/file2269a02a3f0044 obo <- obo_parser(path, tables = TRUE) unlink(path) rel_list <- relations_table_to_list(obo$relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_dorothea_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads TF-target interactions from ReMap — remap_dorothea_download","title":"Downloads TF-target interactions from ReMap — remap_dorothea_download","text":"ReMap (http://remap.univ-amu.fr/) database ChIP-Seq experiments. provides raw merged peaks CRMs (cis regulatory motifs) associations regulators (TFs). TF-target relationships can derived written Garcia-Alonso et al. 2019: \"ChIP-seq, downloaded binding peaks ReMap scored interactions TF gene according distance TFBSs genes’ transcription start sites. evaluated different filtering strategies consisted selecting top-scoring 100, 200, 500, 1000 target genes TF.\" (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6673718/#s1title). function returns top TF-target relationships used DoRothEA: https://github.com/saezlab/dorothea/blob/master/inst/scripts/02_chip_seq.R).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_dorothea_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads TF-target interactions from ReMap — remap_dorothea_download","text":"","code":"remap_dorothea_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_dorothea_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads TF-target interactions from ReMap — remap_dorothea_download","text":"Data frame TF-target relationships.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_dorothea_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads TF-target interactions from ReMap — remap_dorothea_download","text":"","code":"remap_interactions <- remap_dorothea_download() remap_interactions #> # A tibble: 136,988 × 2 #>    tf    target     #>    <chr> <chr>      #>  1 ADNP  ABCC1      #>  2 ADNP  ABCC6      #>  3 ADNP  ABHD5      #>  4 ADNP  ABT1       #>  5 ADNP  AC002066.1 #>  6 ADNP  AC002127.4 #>  7 ADNP  AC005514.2 #>  8 ADNP  AC006076.1 #>  9 ADNP  AC006552.1 #> 10 ADNP  AC007319.1 #> # … with 136,978 more rows # # A tibble: 136,988 x 2 #    tf    target #    <chr> <chr> #  1 ADNP  ABCC1 #  2 ADNP  ABCC6 #  3 ADNP  ABHD5 #  4 ADNP  ABT1 #  5 ADNP  AC002066.1 # # . with 136,978 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_filtered.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads TF-target interactions from ReMap — remap_filtered","title":"Downloads TF-target interactions from ReMap — remap_filtered","text":"Downloads ReMap TF-target interactions processed Garcia-Alonso et al. (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6673718/#s1title) filters based score threshold, top targets whether TF included TF census (Vaquerizas et al. 2009). code filtering adapted DoRothEA, written Christian Holland.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_filtered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads TF-target interactions from ReMap — remap_filtered","text":"","code":"remap_filtered(score = 100, top_targets = 500, only_known_tfs = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_filtered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads TF-target interactions from ReMap — remap_filtered","text":"score Numeric: minimum score 0 1000, records lower scores excluded. NULL filtering performed. top_targets Numeric: number top scoring targets TF. Essentially maximum number targets per TF. NULL number targets restricted. only_known_tfs Logical: whether exclude TFs TF census.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_filtered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads TF-target interactions from ReMap — remap_filtered","text":"Data frame TF-target relationships.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_filtered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads TF-target interactions from ReMap — remap_filtered","text":"","code":"if (FALSE) { remap_interactions <- remap_filtered() nrow(remap_interactions) # [1] 145680  remap_interactions <- remap_filtered(top_targets = 100) remap_interactions # # A tibble: 30,330 x 2 #    source_genesymbol target_genesymbol #    <chr>             <chr> #  1 ADNP              ABCC1 #  2 ADNP              ABT1 #  3 ADNP              AC006076.1 #  4 ADNP              AC007792.1 #  5 ADNP              AC011288.2 # # . with 30,320 more rows }"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_tf_target_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads TF-target interactions from ReMap — remap_tf_target_download","title":"Downloads TF-target interactions from ReMap — remap_tf_target_download","text":"ReMap (http://remap.univ-amu.fr/) database ChIP-Seq experiments. provides raw merged peaks CRMs (cis regulatory motifs) associations regulators (TFs). TF-target relationships can derived written Garcia-Alonso et al. 2019: \"ChIP-seq, downloaded binding peaks ReMap scored interactions TF gene according distance TFBSs genes’ transcription start sites. evaluated different filtering strategies consisted selecting top-scoring 100, 200, 500, 1000 target genes TF.\" (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6673718/#s1title). function retrieves full processed TF-target list data deposited https://zenodo.org/record/3713238.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_tf_target_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads TF-target interactions from ReMap — remap_tf_target_download","text":"","code":"remap_tf_target_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_tf_target_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads TF-target interactions from ReMap — remap_tf_target_download","text":"Data frame TF-target relationships.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/remap_tf_target_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads TF-target interactions from ReMap — remap_tf_target_download","text":"","code":"if (FALSE) { remap_interactions <- remap_tf_target_download() remap_interactions # # A tibble: 9,546,470 x 4 #    source_genesymbol target_genesymbol target_ensembl     score #    <chr>             <chr>             <chr>              <dbl> #  1 ADNP              PTPRS             ENSG00000105426.16  1000 #  2 AFF4              PRKCH             ENSG00000027075.14  1000 #  3 AHR               CTNND2            ENSG00000169862.18  1000 #  4 AR                PDE4D             ENSG00000113448.18  1000 #  5 ARID1A            PLEC              ENSG00000178209.14  1000 # # . with 9,546,460 more rows }"},{"path":"https://saezlab.github.io/OmnipathR/reference/resources_colname.html","id":null,"dir":"Reference","previous_headings":"","what":"Name of the column with the resources — resources_colname","title":"Name of the column with the resources — resources_colname","text":"Unfortunately column title different across various query types OmniPath web service, need guess.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/resources_colname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name of the column with the resources — resources_colname","text":"","code":"resources_colname(data)"},{"path":"https://saezlab.github.io/OmnipathR/reference/resources_colname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name of the column with the resources — resources_colname","text":"data data frame downloaded import_... function current package.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/resources_colname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name of the column with the resources — resources_colname","text":"Character: name column, column names     matches.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/resources_colname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name of the column with the resources — resources_colname","text":"","code":"co <- import_omnipath_complexes() resources_colname(co) #> [1] \"sources\" # [1] \"sources\""},{"path":"https://saezlab.github.io/OmnipathR/reference/simplify_intercell_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify an intercell network — simplify_intercell_network","title":"Simplify an intercell network — simplify_intercell_network","text":"intercellular communication network data frames, created import_intercell_network, combinations network data frame two copies intercell annotation data frames, already quite columns. keep names interacting pair, intercellular communication roles, minimal information origin interaction annotations. Optionally columns can selected.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/simplify_intercell_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify an intercell network — simplify_intercell_network","text":"","code":"simplify_intercell_network(network, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/simplify_intercell_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify an intercell network — simplify_intercell_network","text":"network intercell network data frame, provided import_intercell_network. ... Optional, columns select.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/simplify_intercell_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify an intercell network — simplify_intercell_network","text":"intercell network data frame columns removed.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/simplify_intercell_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify an intercell network — simplify_intercell_network","text":"","code":"icn <- import_intercell_network() icn_s <- simplify_intercell_network(icn)"},{"path":"https://saezlab.github.io/OmnipathR/reference/swap_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse the direction of ontology relations — swap_relations","title":"Reverse the direction of ontology relations — swap_relations","text":"Reverse direction ontology relations","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/swap_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse the direction of ontology relations — swap_relations","text":"","code":"swap_relations(relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/swap_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse the direction of ontology relations — swap_relations","text":"relations `relations` component data returned obo_parser `...ontology_download` function go_ontology_download. Depending tables argument functions `relations` can data frame nested list.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/swap_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse the direction of ontology relations — swap_relations","text":"type input, relations swapped: input     pointed child parents, output     point parent children, vice versa.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/swap_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse the direction of ontology relations — swap_relations","text":"","code":"goslim_url <-     \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\" path <- tempfile() httr::GET(goslim_url, httr::write_disk(path, overwrite = TRUE)) #> Response [http://current.geneontology.org/ontology/subsets/goslim_generic.obo] #>   Date: 2022-10-15 18:56 #>   Status: 200 #>   Content-Type: text/obo #>   Size: 114 kB #> <ON DISK>  /tmp/Rtmpvmm0Vg/file2269a04daffa96 obo <- obo_parser(path) unlink(path) rel_swapped <- swap_relations(obo$relations)"},{"path":"https://saezlab.github.io/OmnipathR/reference/swissprots_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain only SwissProt IDs — swissprots_only","title":"Retain only SwissProt IDs — swissprots_only","text":"Retain SwissProt IDs","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/swissprots_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain only SwissProt IDs — swissprots_only","text":"","code":"swissprots_only(uniprots, organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/swissprots_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain only SwissProt IDs — swissprots_only","text":"uniprots Character vector UniProt IDs. organism Character integer: name identifier organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/swissprots_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain only SwissProt IDs — swissprots_only","text":"Character vector SwissProt IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/swissprots_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain only SwissProt IDs — swissprots_only","text":"","code":"swissprots_only(c(\"Q05BL1\", \"A0A654IBU3\", \"P00533\")) #> [1] \"P00533\" # [1] \"P00533\""},{"path":"https://saezlab.github.io/OmnipathR/reference/tfcensus_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the list of transcription factors from TF census — tfcensus_download","title":"Downloads the list of transcription factors from TF census — tfcensus_download","text":"Vaquerizas et al. published 2009 list transcription factors. function retrieves Supplementary Table 2 article (http://www.nature.com/nrg/journal/v10/n4/index.html).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/tfcensus_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the list of transcription factors from TF census — tfcensus_download","text":"","code":"tfcensus_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/tfcensus_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the list of transcription factors from TF census — tfcensus_download","text":"data frame (tibble) listing transcription factors.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/tfcensus_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads the list of transcription factors from TF census — tfcensus_download","text":"","code":"tfcensus <- tfcensus_download() tfcensus #> # A tibble: 1,987 × 7 #>    Class `Ensembl ID`    `IPI ID`                Inter…¹ Inter…² HGNC …³ Tissu…⁴ #>    <chr> <chr>           <chr>                   <chr>   <chr>   <chr>   <chr>   #>  1 a     ENSG00000001167 IPI00218470;IPI00333568 NA      IPR001… NFYA    NA      #>  2 a     ENSG00000004848 IPI00045066             IPR000… NA      ARX     NA      #>  3 a     ENSG00000005073 IPI00010754;IPI00807582 IPR001… NA      HOXA11  uterus  #>  4 a     ENSG00000005513 IPI00299069;IPI00386303 IPR000… NA      SOX8    NA      #>  5 a     ENSG00000005889 IPI00012336;IPI0016938… IPR007… IPR006… ZFX     general #>  6 a     ENSG00000006377 IPI00008195             IPR000… NA      DLX6    NA      #>  7 a     ENSG00000006468 IPI00221065;IPI0030643… IPR000… NA      ETV1    adrena… #>  8 a     ENSG00000007372 IPI00218800;IPI0044907… IPR001… NA      PAX6    NA      #>  9 a     ENSG00000007866 IPI00385455;IPI0041234… NA      IPR000… TEAD3   placen… #> 10 a     ENSG00000007968 IPI00290548             IPR003… IPR015… E2F2    NA      #> # … with 1,977 more rows, and abbreviated variable names ¹​`Interpro DBD`, #> #   ²​`Interpro DNA-binding family`, ³​`HGNC symbol`, ⁴​`Tissue-specificity` # # A tibble: 1,987 x 7 #    Class `Ensembl ID` `IPI ID` `Interpro DBD` `Interpro DNA-b. #    <chr> <chr>        <chr>    <chr>          <chr> #  1 a     ENSG0000000. IPI0021. NA             IPR001289 #  2 a     ENSG0000000. IPI0004. IPR000047;IPR. NA #  3 a     ENSG0000000. IPI0001. IPR001356;IPR. NA #  4 a     ENSG0000000. IPI0029. IPR000910;IPR. NA #  5 a     ENSG0000000. IPI0001. IPR007087;IPR. IPR006794 # # . with 1,977 more rows, and 2 more variables: `HGNC symbol` <chr>, # # `Tissue-specificity` <chr>"},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate gene and protein identifiers — translate_ids","title":"Translate gene and protein identifiers — translate_ids","text":"Translates vector identifiers, resulting new vector, column identifiers data frame creating another column target identifiers.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate gene and protein identifiers — translate_ids","text":"","code":"translate_ids(   d,   ...,   uploadlists = FALSE,   ensembl = FALSE,   keep_untranslated = TRUE,   return_df = FALSE,   organism = 9606,   reviewed = TRUE )"},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate gene and protein identifiers — translate_ids","text":"d Character vector data frame. ... least two arguments, without names. first arguments describes source identifier, rest describe target identifier(s). values arguments must valid identifier types shown Details. names arguments column names. case first (source) ID column must exist. rest IDs new columns created desired names. ID types provided arguments without names, name ID type used column name. uploadlists Force using uploadlists service UniProt. default plain query interface used (implemented uniprot_full_id_mapping_table package). provided ID types available uploadlists service, automatically selected. plain query interface preferred long term, caching, requires less download data storage. ensembl Logical: use data Ensembl BioMart instead UniProt. keep_untranslated case output data frame, keep records source identifier translated. records target identifier NA. return_df Return data frame even input vector. organism Integer, NCBI Taxonomy ID organism (default 9606 human). Matters uploadlists FALSE. reviewed Translate reviewed (TRUE), unreviewed (FALSE) (NULL) UniProt records. Matters uploadlists FALSE.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate gene and protein identifiers — translate_ids","text":"Data frame: input data frame input vector return_df TRUE. Vector: input vector, one target ID type return_df FALSE. List vectors: input vector, one target ID types return_df FALSE. names list ID types (column names, see description ... argument), list also include source IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate gene and protein identifiers — translate_ids","text":"function, depending uploadlists parameter, uses either uploadlists service UniProt plain UniProt queries obtain identifier translation tables. possible values identifier type abbreviations used UniProt API, please refer table : https://www.uniprot.org/help/api_idmapping. addition, simple synonyms available realize uniform API uploadlists UniProt query based backends. followings: mapping identifiers can ambiguous. case one row original data frame yields multiple rows elements returned data frame vector(s).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/translate_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate gene and protein identifiers — translate_ids","text":"","code":"d <- data.frame(uniprot_id = c('P00533', 'Q9ULV1', 'P43897', 'Q9Y2P5')) d <- translate_ids(d, uniprot_id = uniprot, genesymbol) d #>   uniprot_id genesymbol #> 1     P00533       EGFR #> 2     Q9ULV1       FZD4 #> 3     P43897       TSFM #> 4     Q9Y2P5    SLC27A5 #   uniprot_id genesymbol # 1     P00533       EGFR # 2     Q9ULV1       FZD4 # 3     P43897       TSFM # 4     Q9Y2P5    SLC27A5"},{"path":"https://saezlab.github.io/OmnipathR/reference/trembls_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain only TrEMBL IDs — trembls_only","title":"Retain only TrEMBL IDs — trembls_only","text":"Retain TrEMBL IDs","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trembls_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain only TrEMBL IDs — trembls_only","text":"","code":"trembls_only(uniprots, organism = 9606)"},{"path":"https://saezlab.github.io/OmnipathR/reference/trembls_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain only TrEMBL IDs — trembls_only","text":"uniprots Character vector UniProt IDs. organism Character integer: name identifier organism.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trembls_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain only TrEMBL IDs — trembls_only","text":"Character vector TrEMBL IDs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trembls_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain only TrEMBL IDs — trembls_only","text":"","code":"trembls_only(c(\"Q05BL1\", \"A0A654IBU3\", \"P00533\")) #> [1] \"Q05BL1\"     \"A0A654IBU3\" # [1] \"Q05BL1\" \"A0A654IBU3\""},{"path":"https://saezlab.github.io/OmnipathR/reference/trrust_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads TF-target interactions from TRRUST — trrust_download","title":"Downloads TF-target interactions from TRRUST — trrust_download","text":"TRRUST v2 (https://www.grnpedia.org/trrust/) database literature mined TF-target interactions human mouse.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trrust_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads TF-target interactions from TRRUST — trrust_download","text":"","code":"trrust_download(organism = \"human\")"},{"path":"https://saezlab.github.io/OmnipathR/reference/trrust_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads TF-target interactions from TRRUST — trrust_download","text":"organism Character: either \"human\" \"mouse\".","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trrust_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads TF-target interactions from TRRUST — trrust_download","text":"data frame TF-target interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/trrust_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads TF-target interactions from TRRUST — trrust_download","text":"","code":"trrust_interactions <- trrust_download() trrust_interactions #> # A tibble: 11,698 × 4 #>    source_genesymbol target_genesymbol effect reference #>    <chr>             <chr>              <dbl> <chr>     #>  1 AATF              BAX                   -1 22909821  #>  2 AATF              CDKN1A                 0 17157788  #>  3 AATF              KLK3                   0 23146908  #>  4 AATF              MYC                    1 20549547  #>  5 AATF              TP53                   0 17157788  #>  6 ABL1              BAX                    1 11753601  #>  7 ABL1              BCL2                  -1 11753601  #>  8 ABL1              BCL6                  -1 15509806  #>  9 ABL1              CCND2                  1 15509806  #> 10 ABL1              CDKN1A                 1 11753601  #> # … with 11,688 more rows # # A tibble: 11,698 x 4 #    source_genesymbol target_genesymbol effect reference #    <chr>             <chr>              <dbl> <chr> #  1 AATF              BAX                   -1 22909821 #  2 AATF              CDKN1A                 0 17157788 #  3 AATF              KLK3                   0 23146908 #  4 AATF              MYC                    1 20549547 #  5 AATF              TP53                   0 17157788 #  6 ABL1              BAX                    1 11753601 #  7 ABL1              BCL2                  -1 11753601 # # . with 11,688 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"Creates ID translation table UniProt data","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"","code":"uniprot_full_id_mapping_table(   to,   from = \"id\",   reviewed = TRUE,   organism = 9606 )"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"Character symbol: target ID type. See Details possible values. Character symbol: source ID type. See Details possible values. reviewed Translate reviewed (TRUE), unreviewed (FALSE) (NULL) UniProt records. organism Integer, NCBI Taxonomy ID organism (default 9606 human).","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"data frame (tibble) columns `` ``, UniProt IDs     corresponding foreign IDs, respectively.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"source target ID type, function accepts column codes used UniProt simple shortcuts defined . UniProt codes please refer https://www.uniprot.org/help/uniprotkb shortcuts entrez, genesymbol, genesymbol_syn (synonym gene symbols), hgnc, embl, refseqp (RefSeq protein), enst (Ensembl transcript), uniprot_entry (UniProtKB AC, e.g. EGFR_HUMAN), protein_name (full name protein), uniprot (UniProtKB ID, e.g. P00533). complete table please refer translate_ids.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_full_id_mapping_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an ID translation table from UniProt data — uniprot_full_id_mapping_table","text":"","code":"uniprot_entrez <- uniprot_full_id_mapping_table(to = 'entrez') uniprot_entrez #> # A tibble: 19,194 × 2 #>    From   To     #>    <chr>  <chr>  #>  1 Q96EC8 286451 #>  2 Q6ZMS4 285346 #>  3 Q8N8L2 126069 #>  4 Q15916 10773  #>  5 Q3MIS6 84436  #>  6 Q86UK7 90850  #>  7 Q6P280 57711  #>  8 Q969W1 84287  #>  9 O14978 10127  #> 10 P61129 376940 #> # … with 19,184 more rows # # A tibble: 20,723 x 2 #    From   To #    <chr>  <chr> #  1 Q96R72 NA #  2 Q9UKL2 23538 #  3 Q9H205 144125 #  4 Q8NGN2 219873 #  5 Q8NGC1 390439 # # . with 20,713 more rows"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"TrEMBL SwissProt gene names","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"","code":"uniprot_genesymbol_cleanup(uniprots, organism = 9606, only_trembls = TRUE)"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"uniprots Character vector possibly containing TrEMBL IDs. organism Character integer: organism name identifier. only_trembls Attempt convert known TrEMBL IDs organism. recommended practice.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"Data frame two columns: \"input\" \"output\". first one     contains identifiers input vector `uniprots`. second     one corresponding identifiers either SwissProt IDs     gene names identical TrEMBL IDs input,     records available, output input items unchanged.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"Sometimes one gene protein represented multiple identifiers UniProt. typically slightly different isoforms, TrEMBL IDs, SwissProt. purposes systems biology application, important identify protein gene way can recognize datasets. Unfortunately UniProt Ensembl seem offer solution issue. Hence, find TrEMBL ID gene name also associated SwissProt ID, replace TrEMBL ID SwissProt. might minor difference sequence, omics analyses even consider isoforms. quite possible later UniProt convert TrEMBL record isoform within SwissProt record. Typically translation important (still beneficial) human, organisms critical especially translating foreign identifiers. function accepts mixed input UniProt IDs provides distinct translation table can use translate data.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_genesymbol_cleanup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TrEMBL to SwissProt by gene names — uniprot_genesymbol_cleanup","text":"","code":"if (FALSE) { uniprot_genesymbol_cleanup('Q6PB82', organism = 10090) # # A tibble: 1 × 2 #   input  output #   <chr>  <chr> # 1 Q6PB82 O70405 }"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":null,"dir":"Reference","previous_headings":"","what":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"Retrieves identifier translation table UniProt Uploadlists service.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"","code":"uniprot_id_mapping_table(identifiers, from, to, chunk_size = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"identifiers Character vector identifiers Character symbol: type identifiers provided. See Details possible values. Character symbol: identifier type retrieved UniProt. See Details possible values. chunk_size Integer: query identifiers chunks size. experiencing download failures, try lower values.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"data frame (tibble) columns `` ``,     identifiers provided corresponding target IDs, respectively.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"function uses uploadlists service UniProt obtain identifier translation tables. possible values `` `` identifier type abbreviations used UniProt API, please refer table : https://www.uniprot.org/help/api_idmapping table synonyms supported current package: translate_ids. Note: number identifiers larger chunk size log message cache origin guaranteed correct (times still correct).","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_mapping_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ID translation data from UniProt Uploadlists — uniprot_id_mapping_table","text":"","code":"uniprot_genesymbol <- uniprot_id_mapping_table(     c('P00533', 'P23771'), uniprot, genesymbol ) uniprot_genesymbol #> # A tibble: 2 × 2 #>   From   To    #>   <chr>  <chr> #> 1 P00533 EGFR  #> 2 P23771 GATA3 # # A tibble: 2 x 2 #   From   To #   <chr>  <chr> # 1 P00533 EGFR # 2 P23771 GATA3"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_type.html","id":null,"dir":"Reference","previous_headings":"","what":"UniProt identifier type label — uniprot_id_type","title":"UniProt identifier type label — uniprot_id_type","text":"UniProt identifier type label","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UniProt identifier type label — uniprot_id_type","text":"","code":"uniprot_id_type(label)"},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UniProt identifier type label — uniprot_id_type","text":"label Character: ID type label, shown table translate_ids","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UniProt identifier type label — uniprot_id_type","text":"Character: UniProt specific ID type label, input     unchanged translated (still might valid     identifier name). label one can use UniProt     REST queries.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/uniprot_id_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UniProt identifier type label — uniprot_id_type","text":"","code":"ensembl_id_type(\"entrez\") #> [1] \"entrez\" # [1] \"database(GeneID)\""},{"path":"https://saezlab.github.io/OmnipathR/reference/unique_intercell_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique intercellular interactions — unique_intercell_network","title":"Unique intercellular interactions — unique_intercell_network","text":"intercellular network data frames produced  import_intercell_network, default pair annotations interaction represented separate row. function drops annotations keeps distinct interacting pairs.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/unique_intercell_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique intercellular interactions — unique_intercell_network","text":"","code":"unique_intercell_network(network, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/unique_intercell_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique intercellular interactions — unique_intercell_network","text":"network intercellular network data frame produced import_intercell_network. ... Additional columns keep. Note: multiple values interacting pair, first row preserved.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/unique_intercell_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique intercellular interactions — unique_intercell_network","text":"data frame interacting pairs interaction attributes.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/unique_intercell_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unique intercellular interactions — unique_intercell_network","text":"","code":"icn <- import_intercell_network() icn_unique <- unique_intercell_network(icn)"},{"path":"https://saezlab.github.io/OmnipathR/reference/uploadlists_id_type.html","id":null,"dir":"Reference","previous_headings":"","what":"UniProt Uploadlists identifier type label — uploadlists_id_type","title":"UniProt Uploadlists identifier type label — uploadlists_id_type","text":"UniProt Uploadlists identifier type label","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uploadlists_id_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UniProt Uploadlists identifier type label — uploadlists_id_type","text":"","code":"uploadlists_id_type(label)"},{"path":"https://saezlab.github.io/OmnipathR/reference/uploadlists_id_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UniProt Uploadlists identifier type label — uploadlists_id_type","text":"label Character: ID type label, shown table translate_ids","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/uploadlists_id_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UniProt Uploadlists identifier type label — uploadlists_id_type","text":"Character: UniProt Uploadlists specific ID type label,     input unchanged translated (still might     valid identifier name). label one can use     UniProt Uploadlists (ID Mapping) queries.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/uploadlists_id_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UniProt Uploadlists identifier type label — uploadlists_id_type","text":"","code":"ensembl_id_type(\"entrez\") #> [1] \"entrez\" # [1] \"P_ENTREZGENEID\""},{"path":"https://saezlab.github.io/OmnipathR/reference/vinayagam_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein-protein interactions from Vinayagam 2011 — vinayagam_download","title":"Protein-protein interactions from Vinayagam 2011 — vinayagam_download","text":"Retrieves Supplementary Table S6 Vinayagam et al. 2011. Find https://doi.org/10.1126/scisignal.2001699.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/vinayagam_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein-protein interactions from Vinayagam 2011 — vinayagam_download","text":"","code":"vinayagam_download()"},{"path":"https://saezlab.github.io/OmnipathR/reference/vinayagam_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein-protein interactions from Vinayagam 2011 — vinayagam_download","text":"data frame (tibble) interactions.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/vinayagam_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein-protein interactions from Vinayagam 2011 — vinayagam_download","text":"","code":"vinayagam_interactions <- vinayagam_download() vinayagam_interactions #> # A tibble: 34,814 × 5 #>    `Input-node Gene Symbol` `Input-node GeneID` Output-node Ge…¹ Outpu…² Edge …³ #>    <chr>                                  <dbl> <chr>              <dbl>   <dbl> #>  1 C1orf103                               55791 MNAT1               4331   0.984 #>  2 MAST2                                  23139 DYNLL1              8655   0.743 #>  3 RAB22A                                 57403 APPL2              55198   0.558 #>  4 TRAP1                                  10131 EXT2                2132   0.951 #>  5 STAT2                                   6773 COPS4              51138   0.743 #>  6 BMPR2                                    659 TUBB              203068   0.901 #>  7 FYN                                     2534 SNCA                6622   0.862 #>  8 PARD6B                                 84612 PARD6A             50855   0.855 #>  9 CHUK                                    1147 PRKCI               5584   0.901 #> 10 TRAF2                                   7186 FXR2                9513   0.988 #> # … with 34,804 more rows, and abbreviated variable names #> #   ¹​`Output-node Gene Symbol`, ²​`Output-node GeneID`, ³​`Edge direction score` # # A tibble: 34,814 x 5 #    `Input-node Gen. `Input-node Gen. `Output-node Ge. `Output-node Ge. #    <chr>                       <dbl> <chr>                       <dbl> #  1 C1orf103                    55791 MNAT1                        4331 #  2 MAST2                       23139 DYNLL1                       8655 #  3 RAB22A                      57403 APPL2                       55198 #  4 TRAP1                       10131 EXT2                         2132 #  5 STAT2                        6773 COPS4                       51138 # # . with 34,804 more rows, and 1 more variable: # # `Edge direction score` <dbl>"},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"Starting selected nodes, recursively walks ontology tree reaches either root leaf nodes. Collects visited nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"","code":"walk_ontology_tree(   terms,   ancestors = TRUE,   db_key = \"go_basic\",   ids = TRUE,   method = \"gra\",   relations = c(\"is_a\", \"part_of\", \"occurs_in\", \"regulates\", \"positively_regulates\",     \"negatively_regulates\") )"},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"terms Character vector ontology term IDs names. mixture IDs names can provided. ancestors Logical: FALSE ontology tree traversed towards leaf nodes; TRUE, tree traversed root. former returns ancestors (parents), latter descendants (children). db_key Character: key identify ontology database. available keys see omnipath_show_db. ids Logical: whether return IDs term names. method Character: either \"gra\" \"lst\". implementation use traversing ontology tree. graph based implementation faster list based, latter removed future. relations Character vector ontology relation types. relations used.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"Character vector ontology IDs. input terms     leaves roots NULL returned. starting nodes     included result unless fall onto traversal path     nodes.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"Note: function relies database manager, first call might take long database load process. Subsequent calls within short period faster. See get_ontology_db.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/walk_ontology_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All nodes of a subtree starting from the selected nodes — walk_ontology_tree","text":"","code":"walk_ontology_tree(c('GO:0006241', 'GO:0044211')) #>  [1] \"GO:0006139\" \"GO:0006220\" \"GO:0006221\" \"GO:0006241\" \"GO:0006725\" #>  [6] \"GO:0006753\" \"GO:0006793\" \"GO:0006796\" \"GO:0006807\" \"GO:0008150\" #> [11] \"GO:0008152\" \"GO:0008655\" \"GO:0009058\" \"GO:0009117\" \"GO:0009141\" #> [16] \"GO:0009142\" \"GO:0009147\" \"GO:0009148\" \"GO:0009165\" \"GO:0009199\" #> [21] \"GO:0009201\" \"GO:0009208\" \"GO:0009209\" \"GO:0009218\" \"GO:0009220\" #> [26] \"GO:0009259\" \"GO:0009260\" \"GO:0009987\" \"GO:0010138\" \"GO:0018130\" #> [31] \"GO:0019438\" \"GO:0019637\" \"GO:0019693\" \"GO:0032262\" \"GO:0034641\" #> [36] \"GO:0034654\" \"GO:0043094\" \"GO:0043173\" \"GO:0044211\" \"GO:0044237\" #> [41] \"GO:0044238\" \"GO:0044249\" \"GO:0044271\" \"GO:0044281\" \"GO:0046036\" #> [46] \"GO:0046390\" \"GO:0046483\" \"GO:0055086\" \"GO:0071704\" \"GO:0072527\" #> [51] \"GO:0072528\" \"GO:0090407\" \"GO:1901135\" \"GO:1901137\" \"GO:1901293\" #> [56] \"GO:1901360\" \"GO:1901362\" \"GO:1901564\" \"GO:1901566\" \"GO:1901576\" # [1] \"GO:0006139\" \"GO:0006220\" \"GO:0006221\" \"GO:0006241\" \"GO:0006725\" # [6] \"GO:0006753\" \"GO:0006793\" \"GO:0006796\" \"GO:0006807\" \"GO:0008150\" # ... (truncated) walk_ontology_tree(c('GO:0006241', 'GO:0044211'), ancestors = FALSE) #> [1] \"GO:0006241\" \"GO:0044210\" \"GO:0044211\" # [1] \"GO:0044210\" \"GO:0044211\" walk_ontology_tree(     c('GO:0006241', 'GO:0044211'),     ancestors = FALSE,     ids = FALSE ) #> [1] \"CTP biosynthetic process\"           \"'de novo' CTP biosynthetic process\" #> [3] \"CTP salvage\"                        # [1] \"'de novo' CTP biosynthetic process\" \"CTP salvage\""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_extra_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Interaction records having certain extra attributes — with_extra_attrs","title":"Interaction records having certain extra attributes — with_extra_attrs","text":"Interaction records certain extra attributes","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_extra_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interaction records having certain extra attributes — with_extra_attrs","text":"","code":"with_extra_attrs(data, ...)"},{"path":"https://saezlab.github.io/OmnipathR/reference/with_extra_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interaction records having certain extra attributes — with_extra_attrs","text":"data interaction data frame. ... name(s) extra attributes; NSE supported.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_extra_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interaction records having certain extra attributes — with_extra_attrs","text":"data frame filtered records extra attribute.","code":""},{"path":[]},{"path":"https://saezlab.github.io/OmnipathR/reference/with_extra_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interaction records having certain extra attributes — with_extra_attrs","text":"","code":"i <- import_omnipath_interactions(fields = 'extra_attrs') with_extra_attrs(i, Macrophage_type) #> # A tibble: 400 × 16 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Q16539 P49137 MAPK14  MAPKAP…       1       1       0       1       1       0 #>  2 O15111 P19838 CHUK    NFKB1         1       1       1       1       0       1 #>  3 Q14164 Q92985 IKBKE   IRF7          1       1       0       1       1       0 #>  4 Q13490 P42574 BIRC2   CASP3         1       0       1       1       0       1 #>  5 P42575 P55957 CASP2   BID           1       1       0       1       1       0 #>  6 Q14790 P42574 CASP8   CASP3         1       1       0       1       1       0 #>  7 Q02750 P27361 MAP2K1  MAPK3         1       1       0       1       1       0 #>  8 P27361 P51812 MAPK3   RPS6KA3       1       1       0       1       1       0 #>  9 P28482 Q15418 MAPK1   RPS6KA1       1       1       0       1       1       0 #> 10 P28482 P51812 MAPK1   RPS6KA3       1       1       0       1       1       0 #> # … with 390 more rows, 6 more variables: extra_attrs <list>, sources <chr>, #> #   references <chr>, curation_effort <dbl>, n_references <dbl>, #> #   n_resources <int>, and abbreviated variable names ¹​source_genesymbol, #> #   ²​target_genesymbol, ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, #> #   ⁶​consensus_direction, ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/with_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactions having references — with_references","title":"Interactions having references — with_references","text":"Interactions references","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactions having references — with_references","text":"","code":"with_references(data, resources = NULL)"},{"path":"https://saezlab.github.io/OmnipathR/reference/with_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactions having references — with_references","text":"data interaction data frame. resources Character: consider resources. `NULL`, records reference accepted.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactions having references — with_references","text":"subset input interaction data frame.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/with_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactions having references — with_references","text":"","code":"cc <- import_post_translational_interactions(resources = 'CellChatDB') with_references(cc, 'CellChatDB') #> # A tibble: 569 × 15 #>    source target sourc…¹ targe…² is_di…³ is_st…⁴ is_in…⁵ conse…⁶ conse…⁷ conse…⁸ #>    <chr>  <chr>  <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Q9Y219 P46531 JAG2    NOTCH1        1       1       1       1       1       0 #>  2 O00548 P46531 DLL1    NOTCH1        1       1       0       1       1       0 #>  3 P05019 P08069 IGF1    IGF1R         1       1       0       1       1       0 #>  4 P78504 P46531 JAG1    NOTCH1        1       1       1       1       1       0 #>  5 P01344 P11717 IGF2    IGF2R         1       1       0       1       1       0 #>  6 P49771 P36888 FLT3LG  FLT3          1       1       0       1       1       0 #>  7 P01344 P08069 IGF2    IGF1R         1       1       0       1       1       0 #>  8 P01138 P04629 NGF     NTRK1         1       1       0       1       1       0 #>  9 P14210 P08581 HGF     MET           1       1       0       1       1       0 #> 10 P01308 P06213 INS     INSR          1       1       0       1       1       0 #> # … with 559 more rows, 5 more variables: sources <chr>, references <chr>, #> #   curation_effort <dbl>, n_references <dbl>, n_resources <int>, and #> #   abbreviated variable names ¹​source_genesymbol, ²​target_genesymbol, #> #   ³​is_directed, ⁴​is_stimulation, ⁵​is_inhibition, ⁶​consensus_direction, #> #   ⁷​consensus_stimulation, ⁸​consensus_inhibition"},{"path":"https://saezlab.github.io/OmnipathR/reference/zenodo_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves data from Zenodo — zenodo_download","title":"Retrieves data from Zenodo — zenodo_download","text":"Zenodo repository large scientific datasets. Many projects publications make datasets available Zenodo. function downloads archive Zenodo extracts requested file.","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/zenodo_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves data from Zenodo — zenodo_download","text":"","code":"zenodo_download(   path,   reader = NULL,   reader_param = list(),   url_key = NULL,   zenodo_record = NULL,   zenodo_fname = NULL,   url_param = list(),   url_key_param = list(),   ... )"},{"path":"https://saezlab.github.io/OmnipathR/reference/zenodo_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves data from Zenodo — zenodo_download","text":"path Character: path file within archive. reader Optional, function read connection. reader_param List: arguments reader function. url_key Character: name option containing URL zenodo_record Zenodo record ID, either integer character. zenodo_fname file name within record. url_param List: variables insert URL string (returned options). url_key_param List: variables insert `url_key`. ... Passed archive_extractor","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/zenodo_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves data from Zenodo — zenodo_download","text":"connection","code":""},{"path":"https://saezlab.github.io/OmnipathR/reference/zenodo_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves data from Zenodo — zenodo_download","text":"","code":"if (FALSE) { # an example from the OmnipathR::remap_tf_target_download function: remap_dorothea <- zenodo_download(     zenodo_record = 3713238,     zenodo_fname = 'tf_target_sources.zip',     path = (         'tf_target_sources/chip_seq/remap/gene_tf_pairs_genesymbol.txt'     ),     reader = read_tsv,     reader_param = list(         col_names = c(             'source_genesymbol',             'target_genesymbol',             'target_ensembl',             'score'         ),         col_types = cols(),         progress = FALSE     ),   resource = 'ReMap' ) }"},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v320","dir":"Changelog","previous_headings":"","what":"OmnipathR v3.2.0","title":"OmnipathR v3.2.0","text":"New resource: PrePPI Configuration option completely disable logging file New vignettes: Path reconstruction, Bioconductor 2021 Workshop Many minor bugfixes improvements","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v29919-v300","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.19 (v3.0.0)","title":"OmnipathR v2.99.19 (v3.0.0)","text":"NicheNet pipeline works Fixed error resulted value 1 n_references columns even records without references","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v29917","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.17","title":"OmnipathR v2.99.17","text":"Improved quality filtering intercell networks","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v29916","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.16","title":"OmnipathR v2.99.16","text":"Improved API translate_ids Quality filtering intercell networks","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v29913","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.13","title":"OmnipathR v2.99.13","text":"Functions access KEGG Pathways robust access UniProt (case network failures)","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v29911","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.11","title":"OmnipathR v2.99.11","text":"Improved downloader backends","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v2998","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.8","title":"OmnipathR v2.99.8","text":"OBO parser Gene Ontology access, functions work ontology trees Database manager","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v2997","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.7","title":"OmnipathR v2.99.7","text":"New interactions query parameter: loops Fixed many caching bugs","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v2996","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.6","title":"OmnipathR v2.99.6","text":"downloaders attempt 3 times New resources: Human Phenotype Ontology Gene Ontology annotations","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v2990-2021-03-08","dir":"Changelog","previous_headings":"","what":"OmnipathR v2.99.0 (2021-03-08)","title":"OmnipathR v2.99.0 (2021-03-08)","text":"Many new resources besides OmniPath: BioPlex, ConsensusPathDB, EVEX, Guide Pharmacology (IUPHAR/BPS), Harmonizome, HTRIdb, InWeb InBioMap, Pathway Commons, Ramilowski et al. 2015, RegNetwork, ReMap, TF census, TRRUST Vinayagam et al. 2011 Methods converting network elements Bio Model Analyzer (BMA) motifs NicheNet workflow igraph related methods: finding paths certain length; extracting giant component graph Caching Logging Configuration handling","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v1990-2020-10-03","dir":"Changelog","previous_headings":"","what":"OmnipathR v1.99.0 (2020-10-03)","title":"OmnipathR v1.99.0 (2020-10-03)","text":"New tests Many little bugfixes Updated package metadata Preparation Bioconductor 3.12","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v134-2020-08-04","dir":"Changelog","previous_headings":"","what":"OmnipathR v1.3.4 (2020-08-04)","title":"OmnipathR v1.3.4 (2020-08-04)","text":"License password handling Can directed different server options","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v131-2020-06-05","dir":"Changelog","previous_headings":"","what":"OmnipathR v1.3.1 (2020-06-05)","title":"OmnipathR v1.3.1 (2020-06-05)","text":"Addition package website. Modification pdf vignette html one. Major refactoring functions. Addition intercellular network function. Modification intercellular categories.","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v114-2020-03-28","dir":"Changelog","previous_headings":"","what":"OmnipathR v1.1.4 (2020-03-28)","title":"OmnipathR v1.1.4 (2020-03-28)","text":"Refactored import_annotations method","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v09912-2019-10-10","dir":"Changelog","previous_headings":"","what":"OmnipathR v0.99.12 (2019-10-10)","title":"OmnipathR v0.99.12 (2019-10-10)","text":"Modification separation genes within complex (dash underscore)","code":""},{"path":"https://saezlab.github.io/OmnipathR/news/index.html","id":"omnipathr-v0990-2019-10-10","dir":"Changelog","previous_headings":"","what":"OmnipathR v0.99.0 (2019-10-10)","title":"OmnipathR v0.99.0 (2019-10-10)","text":"Submitted Bioconductor","code":""}]
